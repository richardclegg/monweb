%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: E:\cygwin\home\uh\public_html\QUAINT\our-papers\talks\york-2003\performance.dvi
%%CreationDate: Fri Jul 18 07:13:59 2003
%%Pages: 25
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: D:\texmf\miktex\bin\dvips.exe -t landscape
%+ E:\cygwin\home\uh\public_html\QUAINT\our-papers\talks\york-2003\performance.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.07.18:0713
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 TeXDict begin /landplus90{true}store end
 
@fedspecial end TeXDict begin
55380996 39158280 2074 600 600
(E:\cygwin\home\uh\public_html\QUAINT\our-papers\talks\york-2003\performance.dvi)
@start
%DVIPSBitmapFont: Fa cmr5 10.37 3
/Fa 3 121 df<903807FF80017F13F048B512FC3903F801FF3A07E0007FC0486C6D7E6D
6D7E150F6F7E8215036C5AEA008090C7FCA3EC0FFF49B5FC131F90387FFC033801FFC038
07FE00EA0FF8485A485A485A5B00FF160F90C7FCA21507A26D130F007F141F6D90383FFE
1FD83FF0017C131E3B1FFC03F0FFFC0007B538E07FF800019138803FF03B001FF8001FC0
30287AA63B>97 D<D801FCD97FE0EB03FF00FF902603FFFC011F13E0020F01FF017F13F8
DA3F00903981F807FC027C903A3FC3E001FE000701F0DAE7807F2603FDE0D91FEFC7FC6C
B44802FE15804A6D48147FA291C75BA2495DB3A3486C4A6CECFFC0B5D8FC07B5D8E03F13
FFA4502679A55E>109 D<267FFFF890B512C0A4000101E090387FF800D8007FEC3FC001
3F92C7FC6D6C137E6D6C5B6D6C485A6D6C485A6D6C485A6DEB8FC091387FDF806EB4C8FC
6E5A6E5A14076E7E4A7E4A7F4A7F91383F3FE0027E7F4A6C7E49486C7E49486C7E49486C
7E49486C7F49487E013F6E7E01FF6E7E0007ED7FF8B56C90B512F0A434257CA43E>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy7 14.518 4
/Fb 4 107 df<007FBCFCBD1280A46C1B00510673A06C>0 D<F40780527EA2891C07A289
1C03A2891C01891C00891D7E1D7F777EA2777E777E777E8A777E777E776C7E787EF63FF0
787EF607FF007FC012C0C112F820FCA220F86C1FC0D100071300F61FF8545AF67FC0545A
5348C7FC535A535A66535A535A535AA253C8FC1D7E1DFE651C01651C0365A21C0765A21C
0F65A2765A764077BD89>33 D<DA0FFF953801FFC0027F01F0051F13F849B500FE94B512
FE01076E6C03036E7E011F03E0030F15E04903F8033F9038807FF04903FE923A7FF80007
F89026FFF01F6DDBFFE0EB01FC48D980016E01030180EB007ED803FCC76C01E04948C87E
4848021F6DD90FF8ED1F8001E002076D4948150F48486E6D4948ED07C048486E6DD97F80
ED03E090C96D49C9FC48043F4948EE01F0003E70EB83FC003C70D9C3F81600007C7001E7
18F8DFFFF017780078705C00F8704A177C714A173C48837290CBFC727F86727F84727F4E
7F74177C6C4D7F00784D6D17784E6E16F8007CEF7F9F003C060F6D16F0003E4D6C6D1501
4D486C6D15036CDC03FC02FC16E04D486C6D15076C6C92261FF0006DED0FC06C6C4B486D
6DEC1F806D4B486D01E0147F6C6C4A48486D01F8ECFF006C6C020790C7000701FEEB07FE
D800FEDA1FFC6E9039FFE03FFCD97F80D97FF86E91B55A90283FF807FFF06E6C5D6DB600
C0031F5D010792C900071580010102FC04014AC7FC6D6C01E0DC003F13F8DA0FFECB0003
13C0763677B489>49 D<127812FCB3B3B3B3B3B3AA127806786FD929>106
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmex10 20.74 5
/Fc 5 91 df<1238127C12FEB3B3B3B3B3B1127C1238076F678339>12
D<F07F80EF01FF17075F173F5F4CB5FC5E040FEBFE004C5B4C13F04C5B4BB55A4B5C4B91
C7FC4B13FC4B5B4B5B4B5B92B55A5C4A5C4A91C8FC4A5B5E5C4A5B4A5B91B5FC5E495C5B
5E4991C9FC5B5D5B5D5B5D5B90B55AA3485CA2485CA25A5DA25AA292CAFC5AA35C5AA35C
5AA6B55AB3B3B3B3AF6C5B399C3E7E99>56 D<387FFFF0B57EB3B3B3B3AF6C7FA67E80A3
7E80A37E81A27EA2817EA26C80A26C80A36D7F7F817F817F817F6D80827F6D8082806E7F
6E7F80826E7F6E806E80806F7F6F7F6F7F6F7F6F13FF6F806F806F6C7F707F7013FC707F
0403EBFF8082707E83170F831701EF007F399C3E8199>58 D[<0403B512804C14C0B3B3
B3B3AE4C1480A61900A25EA360A25EA260A25E60A393B55AA2605DA2605D605D95C7FCA2
4B5B5F5D5F5D5F4B5BA292B55A4A5CA24A91C8FC5E4A5B4A5BA24A5B4A5B4A5B5E91B5C9
FC495B495B495B495B495B495B495B4948CAFC485B485B000F5B4813C0485BB448CBFC5B
13F05BA27F13FC7F383FFF806C7F6C13F000037F6C7F6C7F6D6C7E6D7F6D7F6D7F6D7F6D
7F6D7F6D7F6E7F826E7F6E7F6E7FA26E7F6E7F826E80A26E806F7FA26F7F83818381836F
7FA28481848184A28184A2707FA38482A284A282A284A382A21980A67014C0B3B3B3B3AE
701480>58 314 99 129 153 60 D[<FA7FC09E3803FFF80F0F13FE57EBFF809E393FE0
7FC09E397FC00FE09E39FF8007F05690380001F85648EB0FFC5648133F0E0FEC7FFE5648
13FFA112FF56485A207F21E020FF5513C0A267576C13FE679EC7EA7FFC55ED3FF8FB0FE0
5691C7FC1F1FA2555AA3555AA21FFFA26866A3545BA36668A266A268A266A29DCAFC66A3
671E7FA4545AA46567A365A267A265A267A265A36765A46567A365A29CCBFCA29AB5FCA3
66A264A4525BA46466A364A366A264A4525BA5525BA499B5FCA266A263A49BCCFC63A551
5BA463A265A363A265A363A36563A46598B5FCA5505CA5505CA55091CDFCA5505BA56264
A36264A5505BA597B55AA54F5CA54F5CA599CEFC61A46361A363A361A263A361A263A44F
5BA56396B5FCA463A260A298CFFCA44E5BA54E5BA462A260A362A36062A44E5BA462A260
A397D0FCA295B5FCA261A35F61A4615FA361A25FA261A25FA261A35F61A44D90D1FCA460
177FA36017FFA260A25E60A35E60A34C5BA3605E95D2FCA25E5FA2163F5FA24C5AEA07F0
D81FFC5D486C14FF486C5DA2B56C485BA24B5BA294D3FC4B5AA24A485A6C4A5A5B6C4849
5A01F0495AD81F805CD80FE0495A6C6C4890D4FC3903FE07FE6CB55A6C6C13F0011F13C0
D903FED5FC>152 383 118 127 96 90 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr7 14.518 7
/Fd 7 121 df<171E173FB3B3A5007FBDFCBE1280A46C1C00CA003FCBFCB3B3A5171E59
5A78CA6A>43 D<4AB47E021F13F891B6FC49810107010013E0D90FF8EB1FF0D93FE0EB07
FC49486D7E4A130149C87E4848ED7F804848ED3FC0A24848ED1FE0A2000F17F0A24848ED
0FF8A3003F17FCA3491507007F17FEA600FF17FFB3A4007F17FEA56D150F003F17FCA400
1F17F8A26D151F000F17F0A2000717E06D153F000317C06D157F000117806C6CEDFF006E
5B6D6C495AD93FF0EB0FFC6D6C495AD907FFEBFFE06D90B55A010092C7FC021F13F80201
138038527ACF45>48 D<15F014011403140F143FEB01FF130F0003B5FCB6FCA2EBFE7F13
F0EAFC00C7FCB3B3B3A64A7E010313FEB812F8A52D5073CF45>I<EC1FFE49B512E00107
14FC011F14FF017F819026FFC03F13E02701FE00037FD803F801007F48486E7ED80FC06E
7E48486E7E90C86C13804881003E6F13C0127ED87F806E13E013E0487E7013F07FA56C5A
A26C5AEA0F80CAFC4C13E0A34C13C0A218805E4C13005F4C5AA24C5A4C5A5F4C5A4B5B4B
90C7FC4B5AED0FF84B5A4B5A4B5A4B5A4A48C8FC4A5A4A5A4A5A4A5ADA3F8014F04AC8FC
14FE4948EC01E0495A495A495AD91F80140349C8FC017E16C04915074848150F48B8FC5A
4817805A5A5AB9FCA21800A3345078CF45>I<903803FFF8013FEBFF8090B612F0000315
FC3A07FE001FFED80FF8903807FF806D01017F001F6E6C7E6D6E7EA2707E707EA26C4881
6C4814076C5AC9FCA6ED3FFF0207B5FC147F0103B51207010F13C090383FFE00EBFFF048
13C0000790C7FC485A485A5B485A127F5B00FFEF01E05BA3160FA36D141F007F153F6D14
7B6C6C9139FBFF03C06C6CEB01F16C6CD907E113CF2807FFC07FC0EBFF806C90B5C61400
C64A6D5A013F01F8EB3FF801030180EB0FE03B3779B545>97 D<D97FC0D9FFF0913807FF
80B5010701FF023F13F8031F6E90B57E4BDAE00114FFDBFF809027F007FC077F912BC1F8
003FF80FC0017F0003D9C3E06D6C48C77FC6D9C7C0010F013E147F90267FCF806D6C486E
7E02DFC75C02DE5E02FC6E6C486E7E4A5EA24A5EA34A93C8FCB3AC2601FFF8020F01C0EC
7FFEB6D8F007B6D8803FB512FCA566357AB471>109 D<B600C090387FFFFEA5C691C76C
13C0D91FFEDA1FFCC7FC010F16F0010716C06E5D6D6D49C8FC6D6D133E6D6D5B6E6C5B6E
6C485A021F495A6F485A91380FFE0F6E6C485A6E01BFC9FC6E13FE6E5B5E6F5A6F7E6F7E
6F7E4B7EA24B7F037D7F03F87F4A486C7E4A486C7E0207131FDA0FC07F4A486C7E4B6C7E
023E6D7F4A6D7F4A6D7F4948147F01038201076F7E011F6F7E017F82D807FF4B6C7EB500
FC91B61280A541347DB348>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi5 10.37 2
/Fe 2 106 df<EC03FF021F13E091B512FC903903FE01FE903C0FF000FF8003C04948EB
7FC0D97F80EB3FE049C7001F13074848DA0FF01380484815F800070307130F484803FC13
00495E001F171E48480203133E183C007F177C49EDFE7818F8715A00FF5F495E826095C7
FC5FA2127FA2EE07FF003F5D6D143F001F03FCEB01E06C6C903803F87FD807F8D90FE013
83D803FE903AFF803F87C0C6B53AFE001FFF80013F01F001071300010790C7EA01F83B27
78A54F>11 D<140FEC1F80EC3FC0147FA315801500141C91C7FCABEB1F80EB7FE03801FF
F83803E1FCEA0781380F01FE121F123E123CEA7C0300785BA2EAF80700F05BEA000F5CA2
131F5C133F5CA2137F5C13FFEC0078A24814F84913F0A23903FC01E0140315C00001EB07
80140F3900FE3F00EB7FFC6D5AEB0FE01D3B78B92E>105 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi7 14.518 12
/Ff 12 121 df<ED07FF037F13F00203B512FC020F80913A3FFE03FF809126FFF0007F49
0180D93FE0EB03804990C76C6C1307D90FFC8149486E7E4948170F49486E6C1400495A48
496E6C5B1A1E4890C814804870143E4848183C1A7C4848EFC0781AF848486019C1007F61
496F13C3F1C7C06200FF18CF4905DFC7FC19FEA261495F6161A261A3127F856D1503003F
5E171F6C6C037F1403000FDCFE3FEB07806DDA07FC140F6C6C91271FF01FF013006CB4DA
FFE05CC6D9E00F9039800FF8FE6DB53AFC0007FFFC011F02F06D5B0107028001005B0100
01F0C8EA3F80493679B459>11 D<EC0FF8DA7FFF167049B500C015F801076E15F0011F6E
1401496E15E0496E140390B66C15C0486F140748F00F804801FC6E140048D900035D01F8
01006D131ED81FE0023F143ED83F80DA0FE0133C90C80007147C007E6F6C1378007C0301
14F800786000F8923800F8014860EF7C034860CA123C1807053E5BEF1E0F96C7FC60181E
EF1F3EEF0F3CA2187C187818F860A360A260A360A395C8FCA25FA35F173EA2177EA45FA4
4C5AA44C5AA44C5AA35FA25F70C9FC454E7BB448>13 D<91B912FC010318FE130F4918FF
137F90BA12FE5A4819FC4819F89029FE001E0007C0C7FCD80FF05ED81FC0133E48C7FC00
3E023C130F48147C5A5A484A131FC892C8FCA214015D14035FA24A5AA2140F4B80021F14
7FA34A5AA2027F81A24AC7FCA24982A2495A8413074A6E7E130F84131F4A141FA2604A14
0F6D486E5A6D48EC03C048357AB351>25 D<020FB500E04BB612E0834A60836E7215C0DA
00016DDB0007EBF0000A0113804B6D7048C7FC1D7CEECFFF1D78DB07C76D16F86504837F
A2DB0F816D15016504007FA24B6D6C150365031E6D7EA2033E6D6C150765033C6D7EA203
7C6D6D140F9AC8FC03786D7FA203F86D6D5C1C1E4B6D7FA202016F6C143E1C3C4B6E7EA2
02036F6C147C1C784B6E7EA202076F6D13F8644B6E7FA2020F6FEBE0016492C913F0A24A
93387FF80364021EEE3FFCA2023E93381FFE0764023CEE0FFFA2027C70138F99C9FC0278
7013CFA202F87013FF634A82A20101187F634A173FA20103181F630107180F130FD93FF0
17072601FFFE60007FD9FFF81603B6FC1A01636C4A16006B5278D16D>78
D<017FBB12FE1CFF90BDFCA34801FCC7D83FFCC7EA7FFE02C04A4814074890C8160101FC
4C14005B48481A7E4915FF495E000F1B7C491A3C90C85A485F121E003E1B7C5E003C4D15
78127C12785E00F894C9FC5AA2484B1770C9491600A3161F5FA3163F5FA3167F5FA316FF
5FA35D5FA35D5FA35D94CBFCA35D5EA3151F5EA3153F5EA3157F5EA215FF020713FC48B8
12F05AA36C5F58517AD051>84 D<ED07FF037F13F00203B512FC020F8091393FFE01FF91
3AFFE0003F80490180EB0FC04990C7121FD90FFC147F494814FF495A49485B495A485B18
804890C7FC486F13004848157C94C7FC485AA2485AA2127F5BA312FF5BA45BA618C0007F
EE01E017036D1507003FEE0FC0EF1F806C6CED3F00000F16FE6DEC03F86C6CEC0FF06CB4
EC7FE0C69039E00FFF806DB548C7FC011F14F801071480010001F8C8FC333679B43E>99
D<F0FF80050713F04D13F8053F13FC94387FC0FE9438FF01FF4C485A60EE03FC1607A204
0F14FE05F813FCF003F8041FEB01F095C7FCA2163F5FA4167F5FA416FF5FA5021FB7FC5C
A360DA00030180C7FC94C8FCA55D5EA4150F5EA5151F5EA4153F5EA5157F5EA415FF5EA4
5C5EA54A90C9FCA45D1407A25DA34A5AA2D80F805BEA1FC0383FE01FD87FF05B5D38FFE0
3F5D4ACAFC13C0387F80FEEB83FC6CB45A6C13E000075B000190CBFC406D78D443>102
D<153C15FE4A7E4A1380A25C1600A26E5A6E5A6E5A92C7FCB1EB07F8EB1FFEEB7FFF90B5
12C03801FC3F3903F01FE0D807C07FEA0F8013005A001E133F123E123C127C0078137F00
F85C4813FF5DA2485A00005C5B92C7FCA25B5C130FA25C131F5CA2133F5C017F14E0ECE0
01A213FFECC0034815C0EC80071680150F16004A5A151E153E5D6C495A90387F87F0ECFF
E0011F5B6D90C7FCEB03FC23527AD031>105 D<EC1FF890383FFFFC5B5DA27FEB007F6E
5AA2147FA25DA214FFA25DA25BA25DA25BA292CAFCA25BA25CA2130FA24AEC07F8EF3FFC
011FEDFFFE4C7F4A903907FC1F8093380FE007013F91391F803FC093383F007F4A017C13
FF4B485A017FEB03F0922607C00313809138E00F80ED1F0001FF013E6D13004B5C4A486D
5ADAC3F091C7FC48EBC7E0ECDFC002FFCAFC5C5AECFFF015FEEDFFC048013F7F02037F49
C66C7EED1FFC000F6E7E1507498081001FEF038018075BA2003F170F4B1500495C60007F
171E183E49163C0303147C00FF1778030114F8496E485A6FEB87E070B45A496E5B6CC800
0F90C7FC003EED03FC3A5577D349>107 D<D93F80EC7FF0D9FFF0903803FFFE4801FC01
0F6D7E486D013F802607E3FFD9FFC07FD80F81903A01FE003FF00100D983F86D7E48DAC7
E0130F001EECCF80003E02DFC77F003C14FE007C5C00785CA2495B00F85C12F05D494914
1F00E060000091C8FCA249163F615CA2010F167F615C18FF011F5F5F4A5EA2013F4B1407
F1000F5C5F017F4C131F050F141E4A4B133E1A3C01FF187C4E13784A17F81AF0481801F1
03E04A913907FC0FC00503EB3F8095B5120091C95B6C48EE7FF8017CEE1FE048367AB455
>110 D<15F84A7E14034A7E140FA25DA2141FA25DA2143FA25DA2147FA25DA214FFA25D
007FB7FCB812801700A27ED800030180C7FCA292C8FCA25BA25CA2130FA25CA2131FA25C
A2133FA25CA2137FA25CA213FFA25CA248150E161E5C163E48153C167C91C7127816F84B
5A5E15034B5A4B5A6C023FC7FC6CEB807EECC3FC6DB45A6D13E0010F5BD901FEC8FC294C
7BCA34>116 D<DA1FF0EB01FEDAFFFE903807FF8001039026FF801F13E0496E4813F090
3C0FF03FE07F03F8903C3F800FF0FC00FC903B7E0007F9F001499138FBE0034902FFEB07
FE48486DEBC00F484815804848EE1FFC491500120F90C748EC0FF8484B14F0001EEF07E0
95C7FC150F001C5DC8FCA2151F5EA3153FA25EA2157F5EA303FF15704C14F0A2EA0FC048
6C481501003F18E0D87FF04A130319C04A1507D8FFE0EE0F804AED1F0049486D133ED87F
8001BF147E9026001F3F5C007E903A7E1FE003F83C3F81FC0FF81FE06CB4486CB55A6C49
6C5C0003D9C00049C7FCC690C7EA1FF03F367AB44E>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi10 20.74 35
/Fg 35 121 df<EFFFF0040F13FF047F14C00303B612F0030F9038C03FFC923A1FFE000F
FEDB7FF8EB03FF912601FFE06D7F4A01806D6D140F4A90C86C6CEC1F80DA1FFC6F6C1500
4A48824A48151F4A48705C4949030F153E49844949197E4990C96C6C147C495A7513FC49
4862137F494870EBC001654849190365485B48F2E007654849190F651C1F484997C7FC73
5C481B3E91CA157E1C7C64481AE149621BE3F3E7E000FF634919EFF3FF8099C8FCA26349
6163A26363A4127FA361003F60616C6C5F197F000F06FE15786DDC03F815FC00074D486D
5B6C6C93381FE07FDE7F8014016C6D912701FF003F5C6C6DDA07FC1503D97FF0DA3FF06D
6C485AD91FF8902601FFC0010F495A6DB4013F90C73907FC3F806D90B500FC6EB5C7FC01
0103E06E5BD9003F91C913F8020301E0EE1FE0614E79CB6E>11 D<F27FF80707B5FC071F
14E0077F80953A01FFC03FFC953A07FC0007FEDE0FF0EB01FFDE3FC09038007F804EC8EA
3FC006FE16E0DD01F8ED1FF04D5A4D48ED0FF84D5A4D48ED07FC4DC9FC177E057C17FE5F
16014C5A5F16075F4C5A041F170F94CAFC5E043E18FC047E171F167C16FC4C18F8030118
3F5E0303F07FF05E1DE00307F0FFC05E511380030F4D13005E515A031F4D5A93CA485A51
5A4B4D5A953A7FFF80FFC0033E0103B500F95B4DDAFFFEC7FC037E495D037C90261FC001
13F0F0800795B612FC03FC6D814B6DECE1FF050049C67F95C86C7E14014B717E881B1F02
03854B170F88A20207727E5DA3020F855DA3141F92CBFCA35C143EA263147E147CA302FC
604A61A30101193F645CA201034F5AA2515AA201074E5BA2505B64010F606E96C7FC505A
505A496C60027C4D5A505A027E4D5AD93F3E4C5BD93E3F4C90C8FC6E6CED0FFE6E6C4B5A
90267E07E0ED7FF0017C6D4B5A6E6C02031380DA01FE021F90C9FC9027FC007FC0EBFFFC
496DB612E0030F1580030302FCCAFC0001020014C049DA0080CBFC94CCFCA212035BA312
075BA3120F5BA3121F90D0FCA35A123EA3127E127CA312FC5AA212785F9B7DF961>I<ED
07FE92387FFFC04AB500F8EE03C002076E1607021F6E160F4A6E178091B76C151F497016
0049705D4970153E4970157E491A7C49D9FC3F7F49D980016D15FCD9FFFCC7003F5E02E0
DA0FFF140148496E5E4890C800016D130301FC6F5E4848047F14074848706C5C49041F14
0F4848715C49160F003F0507141F90CA6D91C7FC003E05035C007E1A3E007C0501147E73
137C12FC48050014FC63CCEAFC0163F17C0363197E1A07073E5B1A0F63A21A1F98C8FC19
3F62F11F3E1A7E1A7CA21AFC62A362A362A262A362A2193F97C9FCA4193EA2197EA361A4
1801A2611803A44E5AA44E5AA3181F61A44E5AA44ECAFCA3187EA360A3187818705A717E
CB59>I<0203BB12C0021F1AE0027F1AF091BCFC13035B5B491BE0491BC0491B80902BFF
F8001F80001F80C8FC4801C091C790C9FC4890C7FC13FC48484A5CD80FE0143E49173E48
48147E48C8157E167C007E15FC127C00FC60484A5A5AC8FC15034C1301A21507A25E030F
140361A24B5AA2153F18075E157FA203FF8193C7FCA25CA24A48140FA214075D85140FA2
4A5AA2023F82A25D147F864A4880A24984A2495B8649825D5BA292C87E626D486F5B6D48
94C9FCD901F0163E5C4C7BC962>25 D<0203BAFC021F1980027F19C049BBFC5B5B5B491A
80491A004961D9FFF8C700FCCAFC4813C04890C7485A13FC485AD80FE014035B48485D48
C81207A2127E127C00FC4B5A5A5AC9121FA25F163FA44C5AA316FFA294CBFC5DA44B5AA3
1507A34B5AA3151FA25EA2153FA34B5AA315FFA25EA25CA34A5BA45E93CCFC6E5A6E5A52
4C7BC94B>28 D<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C5A6C5A
EA03F01212719130>58 D<EA03F0EA0FFC487E487E48138014C0B5FCA214E0A314F07EA2
7EEA1FFEEA0FFCEA03F0C7FCA6130114E0A31303A214C0A213071480130F14005B131E13
3E133C137C5BA2485A485A485A120F485A48C7FC121E120C1433719130>I<1E1F1E7F9A
3801FF801D071D1F0B7F130052485A0A0713F80A1F13E00A7F1380514848C7FC090713F8
093F13E098B51280080349C8FC080F13F8083F13E097B51280070301FCC9FC070F13F007
3F13C096B5CAFC060313FC060F13F0067F13C04DB5CBFC050713FC051F13F0057F13C04C
B5CCFC040713F8041F13E0047F13804B4848CDFC030713F8031F13E092B51280020349CE
FC020F13F8023F13E091B51280010349CFFC010F13F0013F13C090B5D0FC000313FC000F
13F0007F13C091D1FCEAFFFC13F013FC6CB4FC14C0000F13F0000313FCC613FF013F13C0
010F13F0010313FE01006D7E023F13E0020F13F8020313FE02006D7E031F13E0030713F8
030113FE6F6C6C7E041F13E0040713F8040113FF706C13C0051F13F0050713FC050113FF
716C13C0060F13F0060313FC060013FF073F13C0070F13F0070313FC0700EBFF80083F13
E0080F13F8080313FE08006D7E093F13E0090713F8090113FE756C6C7E0A1F13E00A0713
F80A0113FE766C7E0B1F13801D071D019A38007F001E1F696572DD86>I[<F103C01907F1
0FE0A2191FA21AC0193FA2F17F80A21A0061A2611801A2611803A24E5AA261180FA26118
1FA261183FA24E5AA296C7FC60A2601701A2601703A24D5AA260170FA260171FA260173F
A24D5AA295C8FC5FA25F1601A25F1603A24C5AA25F160FA25F161FA25F163FA24C5AA294
C9FC5EA25E1501A25E1503A24B5AA25E150FA25E151FA25E153FA24B5AA293CAFC5DA25D
1401A25D1403A24A5AA25D140FA25D141FA25D143FA24A5AA292CBFC5CA25C1301A25C13
03A2495AA25C130FA25C131FA25C133FA2495AA291CCFC5BA25B1201A25B1203A2485AA2
5B120FA25B121FA25B123FA2485AA290CDFC5AA25AA2127CA2>67
172 119 256 86 I<127C127FEAFFC013F013FC6CB4FC6C13C0000F13F0000313FCC613
FF013F13C0010F13F0010313FE01006D7E023F13E0020F13F8020313FE02006D7E031F13
E0030713F8030113FE6F6C6C7E041F13E0040713F8040113FF706C13C0051F13F0050713
FC050113FF716C13C0060F13F0060313FC060013FF073F13C0070F13F0070313FC0700EB
FF80083F13E0080F13F8080313FE08006D7E093F13E0090713F8090113FE756C6C7E0A1F
13E00A0713F80A0113FF767E0B1F13801D071D1F0B7F130052B5FC0A0713F80A1F13E00A
7F1380514848C7FC090713F8093F13E098B51280080349C8FC080F13F8083F13E097B512
80070301FCC9FC070F13F0073F13C096B5CAFC060313FC060F13F0067F13C04DB5CBFC05
0713FC051F13F0057F13C04CB5CCFC040713F8041F13E0047F13804B4848CDFC030713F8
031F13E092B51280020349CEFC020F13F8023F13E091B51280010349CFFC010F13F0013F
13C090B5D0FC000313FC000F13F0003F13C04890D1FCEAFFFC13F013C06CD2FC127C6965
72DD86>I<F403F01C071C0FA2527EA21C3F1C7FA21CFFA26363A2638963A26363A263A2
1BFD1A011BF90803801BF1F207E11A0F1BC01A1F63505AA21A7E1AFE62070181624F5A07
078062190F624F5A193F97C7FC61077E8261A24E5A060381611807614E5A181F61063F83
96C8FC187E18FE4E811701604D5AA24D5A170F60051F84604DC9FC4D82177E17FE5F4CBA
FC5EA25E8A5E05C0C9120F4C5A043F8394CAFC5E167E5E15015E0303865E4B5A150F4C83
151F5E4BCBFCA2157E15FE5D0201874A5A14074B84140F141F143F147F02FF4F7F01036D
60011F6D6090B66C94B612C0007F03FC4BB812F8B75EA46C4B6F17F0757C7AFB81>65
D<972607FFF0ED01C04FB61503071F03E0140796B700F8140F060370EC1F80061F04FF14
3F067FDA800F6D137F4DB500E0C76D13FF050791C8D83FE01400051F01F892380FF00105
7F01E0923803F80394B5C96C6C5A040301FC706C485A4C49EF7F1F041F01E0EF3FBF4C01
80EF1FFF4C90CB5C922601FFFC844B5B4B49844B49624B49844B90CCFC4B48854B48635C
4A49854A5B4A49634A5B4A5B4A1C7F93CE5B4A5A5B495B4B645B495BA2494999C7FC5B5D
5B4B1B7E90B5FC92CFFC481EFE6748491C7C9CC8FC485BA3485BA3485BA35A5CA35A5CA4
B55AA691D3FCA31E3C1E7E1E7CA31EFC66A21D01666C1C03661D07661D0F6C6D631D1F53
C9FC6C1C3E6E1A7E656C646E19016C515A525A6C6D4F5A6E4F5A6C1B3F6C6D4FCAFC1CFE
6D6C4E5A6D6C4E5A6D6DEF0FF06D6DEF1FC06D6DEF7F806D01F84DCBFC6D6DEE03FE6D01
FFEE0FF86E01C0ED3FF06E01F0913801FFC0020F01FE020F5B6ED9FFF0D9FFFECCFC0201
91B612F86E6C16E0031F1680030303FCCDFCDB007F14C0040101F8CEFC7A7E78F97B>67
D<0307BE12E04B1DF0A48192C76C01FCC9120F050F01F0EE007F0D0F13E04F17038B4D85
207F4F183FA24D1A1FA24F19C0A24D1A0FA296CCFCA294B5FCA26021805EA260A25EA260
E201E0141F4C4D7E21004E5E8C4C050792C7FCA24E5E1C0F5EA24E4B5A1C3F5E1C7F4E4B
CAFC634C5E1B0F95C8B45A95B7FC93B9FCA264A25D4DC712014D9138001FF81B0F4B1707
A24D5E1B035DA24D5E1B075DA24D4CEC01E08C4B050F1503A24D4C4A5AA24B71C8485A98
C9FC4D621F1F5D55C7FC94CDFC1F7E92B5FC675E1E014A641E034C4F5AA24A1B0F674C19
1F545A4A1B7F674C19FF654A5090C8FC654CF01FFE1D3F4AF2FFFC1C034A49171F4A96B5
5A0103B56C163F007FBE5ABFFCA266A26C657C767AF57F>69 D<972607FFE0ED03804FB5
00FE1507071FDAFFC0140F96B700F0141F060704FCEC3F00061F705C067F9126001FFF5C
0503B500E00101EBC0014D91C8D87FE05B051F01F892381FF003057F01C0923807F8074C
B5C93803FC0F4C01FC0401495A040F01F0933800FE3F4C49EF7F7F4C0180EF3FFF93B5CB
5C4B01FC844B49844B5B4B49725B4B13804B90CCFC4B48854B48634A5B4A874A5B4A4963
4A5B4A5B4A8793CE5B4A5A5B495B4B99C7FC5B495BA24949635B5D5B4B6390B5FC92CFFC
481D016748491B009CC8FC485BA3485BA3485BA35A5CA35A5CA4B55AA5081FB812C091CB
5AA46897C76C91C8FC0A0713FCA266A266A264A26C65A264A26C6D63A2647E6E63A26C63
806C9AC9FC806C98B5FC6E626C62806C6D60017F4F5B6D7E6D6D5F6F5F6D01F094387FBF
F86D6DEFFF1F6D6DEE03FE010001FF933807FC0F6E01C092393FF807F06E01F8EDFFE06E
01FF0207EBC003020702F090B5EA0001020191B600FC6D5A6E6C04F01460031F04C091CA
FC03034BCDFCDB007F14E0040301FCCEFC797E77F987>71 D<0307B9FC5DA46F17FE92C7
003FECC000050F01FCC7FC715BA2615FA261A25FA261A25FA261A25FA296C8FCA294B5FC
A260A25EA260A25EA260A25EA260A25EA260A25EA260A25EA260A25EA295C9FCA293B5FC
A25FA25DA25FA25DA25FA25DA25FA25DA25FA25DA25FA25DA25FA25DA294CAFCA292B5FC
A25EA25CA25EA25CA25EA25CA25EA25CA25C5C0103B512FE007FB812F0B9FCA46C5F5076
7BF54C>73 D<0307B600F8053FB712804B6F4D16C0A285A112806F75160092C7003F6DDD
007F1480050F080F01F8C7FC74050313E07A13807496C8FCDD1FBF622000063F6D607262
053F6E170184053E6E6084057E1A0386DD7C036286DDFC011907864D6C62A2040170160F
854D6F5F85040370161F854D98C9FC8704076E60874D6D183EA2040F6E6D167EA24D6F16
7C85041F7016FC8594C860747F4C1A0188043E6F5F88047E6F1603A2047C715D8604FC71
1407864C715D8603011B0F884C6F5F88030370161F894C7093CAFCA20307735B874C7213
3E87030F73137E874C1A7C89031F7115FC8993CA6C5D894B711401A2033E07FF5B87037E
1A8388037C637613C303FC1AC71EE74B725C1EF702017313FFA24B725CA21403884B98CB
FC881407A24B725B140F1D7FA2021F745A143F147F4A6C191F496D62010F6D190F017FEB
FF80007FB71807B86C60A21D0394CBFC6C4B725A92767AF58A>78
D<0307BB7E4B1AF81EFF1FE01FF86F8792C76C01FCC8001F13FF050F01F0030180E3003F
7F4F040F7F787F4D727F787F4F707FA24D737EA24F711380A25F21C096CBFCA294B5FCA2
60A24C62A260A25E9CB5128060A24C1C006660684C61684E4D5BA24C63545B4E5F684C4F
5B5490C7FC4E4D5A535B4C4E5B5313E095CA001F5B535B93B5DDFFFEC8FC0A0713F84D04
3F5B0903B512C04B90B948C9FC1DF81DC00AFCCAFC4B188005FCCFFC5FA25DA25FA25DA2
5FA25DA25FA25DA25FA25DA294D0FCA292B5FCA25EA25CA25EA25CA25EA25CA25EA25CA2
5EA25CA25C5C0103B512FC007FB812C0B97EA260A26C5F7A767AF56F>80
D<0307BA12E04BF1FF801EF01EFE787E6F1BE092C76C01FCC7000114F8050F01F0DA000F
13FE0B017F4F6F6C7F0C1F7F4D727F787F4F707F787F5F787F618C4D85A296CB1480A294
B5FCA260A24C97B5FCA260A25E54140060A24C4F5BA24E61664C63545B4E61664C4F5B68
4E4D90C7FC545A4C4E13F8535B4E4C5B0B1F13804C4E48C8FCF5FFFC95C9000313F00A1F
13C093B593B5C9FC093F13F895B812C052CAFC4B18F01CFE05FCC86C6C7E090F7F4B0503
13F009007F4D707E76B4FC5D767F4D707FA24B727FA24D84A24B84A25FA24B60A25FA24B
60A294CAFCA292B54D5BA25EA24A61A25EA24A61665EA25C99B5EC01F05EA24A1D03A24C
4FEB07E0884A1EC0200F4AF51F805C0103B500FC716DEB3F00007FB800C061B96C6F157E
765D766D485A4E6F9038F007F06C4D6F9038F81FE0D06CB55A0B1F91C7FC0B0713FC9A38
007FF07C7A7AF583>82 D<DF3FFE151C0603B500E0143C061F02FC147C95B714FC050393
388001F8050FEEE0034DD9E00713F0DD7FFEC7387FF807DDFFF891390FFC0FF04C01E091
3803FE1F4C0180913801FF3F4C48C9EA7F7FDC1FFC93383FFFE04C48824C5A4D824C4870
13C04B5B4B90CA7E5D4C19804B4883151F5E033F1A004C83157FA2654B5AA34A62A44A62
A3701701651C007095C7FCA28282826E8017E017FCEFFFC06E15F8F0FF806F15F8F1FF80
6F16F06F16FE747E6F836F17F06F836F836F6C827082160F040383DC003F821703DD007F
811807DE007F801907190086081F7F8686A28686A386A2131E133EA2017E197F64017C19
FFA213FC64A300014F5BA36400036199C8FC626D6100074F5AA26D4E5A505A5A6E4D5A6E
4D5A4F5B486D4C90C9FC6E4C5A6E4C5AD9FBFE4C5A263FF1FFEE7FF001E001C04A485ADA
7FF002075B496CB4021F90CAFC48486C01F0EBFFFED9000790B612F8007E6D5E007C0100
16C000FC023F4ACBFC48020314F80070DA001F1380667E77F96A>I<0107BF12F0491EF8
5BA3491EF04BC700010280C7FC03C04CC812074948C8180102F84D8102E04B187F4948F4
3FE04A4D161F91C9FC48485E1F0F496048481EC0605B0007615B6048481E8062A248484C
181FA290CA5C481F0060123E007E96CAFC67007C94B5FC00FC1E3E615A00704C191CCA97
C7FC61A25FA261A25FA261A25FA261A25FA261A25FA261A25FA296CDFCA294B5FCA260A2
5EA260A25EA260A25EA260A25EA260A25EA260A25EA260A25EA295CEFCA293B5FCA25FA2
5DA25FA25D5DA2031F7F0203B612E00007BA12F04885A362A275757CF465>I<4BB800F8
020FB712F04B5016F8A323F06F4D6E16E092C76C4AC9EDF000050702F0043F91C7FC08C0
7013F8714A7013E07191CA148056C8FC716274EE1FF068726D4C5A555A7296C9FC7416FE
545A726D4B5A545A724D5A744B5A545A726D4BCAFC1EFE726D1401535A725F744A5A535A
726E495A535A734BCBFC7513FE525A736D485A1C07734A5A75485A65736D485A52CCFC73
14FEF3FDFCF3FFF8735C64735CA26485A2747FA28688A2886297B5FC4F806188F107F7F1
0FE3DF1FC37FF13F83DF7F017F19FE4E487E4E488118074E486D7F4E5A4F7F4E48814EC7
FC06FE6E7F4D5A4D486E7F4D5A4D48804D4882173F4D486E7F95C8FC05FE814C48834C5A
4C486F804C5A4C48824C48844CCAFC04FE717F15014B48834C85ED0FF04B48717F4B5A03
7F844B48855C020790CB6C7F5C023F6D4D7F49B56001076E053F8090B600F04CB612F800
7FDBFF80033FEDFFFEB84C82A494C95F8D767BF58F>88 D<EE0FF893B5FC030314C0030F
9138E007C0923B3FFC0FF00FF0923AFFE003F81F4A903A8000FC3FF8020790C7EA7E7FDA
0FFC143E4A48EC1FFF4A485E4A488014FF49498049495E4990C8FC5B49488162495A137F
4A5D01FF60485BA248495D97C7FC5A5C485F61485BA2183F486091C9FCA2187F48605BA2
18FF00FF605BA25F615BA25F4F137CA25B4D15FC4F13F8A31A014D15F0007F4C1300A24D
1403003F4C15E06D92B5FC4EEB07C0001F5D4C150F6C6CDA07E715800007DB1FC7141F6D
91263F83FF14000003DB7E035C6C6C49486C147E6C9027C007F8006D5A90277FF03FF090
387FC3F8011FB500C06DB45A6D91C76C5B010301FC02075B9026007FE0020190C7FC4E4E
79CB5B>97 D<ED7F800103B57E90B6FC485D5AA36C92C9FCC7FC143F805DA2143FA25DA2
147FA25DA214FFA25DA25BA25DA25BA25DA25BA25DA25BA292CAFCA25BA25CEE0FFC013F
91387FFF804BB512E0DAFC0714F892391FF81FFC017F90393FC007FE9239FF0001FFDAF9
FC6D1380DAFBF815C090B500E0EC7FE04B143F4B15F092C813F84849151F5C4A16FCA248
5B4A16FE5CA25AA24A16FFA25AA291C9FCA2485FA25B19FE003F177FA25BA2007F17FF19
FC5BA25F00FF18F85BA24D13F0A25B19E05F19C05F1980A24D1300495E173F604D5A6C7E
4D5A604C5B003F4B5B95C7FC6C6C5C4C5A6C6CEC1FF84C5A6C6C4A5A00034A485A6C6C49
5B2800FF800FFEC8FC90397FE07FF86DB55A010F14C0010349C9FC9038007FE0407A78F7
4A>I<EFFFF0040F13FF047F14C04BB612F003079038C01FF8923A1FFE0003FCDB7FF8EB
00FE912601FFE0147F4A0180804A90C8EA1F80DA1FFC15FF4A48020313C04A485C4A485C
49495C495E495B4990C8FC4E1380495A495A017F18004A6F5A01FF5F48496F5A725A4849
92C8FC5AA2485BA3485BA25A91CCFCA35A5BA312FF5BA55BA7007FF00180F103C0F107E0
F10FC0123FF11F80F13F006C6C177E4E5A000F4D5A6D4C5A0007EF1FE06C6C4C5A6CEFFF
806EDA03FEC7FC6C6DEC0FFCD97FF0EC7FF0D91FF8903803FFC06DB4013F90C8FC010390
B512FC6D15E0D9003F91C9FC020313E0434E79CB4B>I<F37F800703B512C096B6FC4E15
8060A372150095C7FC1A3F8663A21A3FA263A21A7FA263A21AFFA263A261A263A261A263
A261A263A261A298C7FCA261A262EE0FF893B5133F030314C0030F02E05B92393FFC0FF0
923AFFE003F87F4A90388000FC020790C7007E5BDA0FFC143E4A48EC1FFF4A5A4A486E5B
14FF494980495B4990C85C5B494881A249485F137F4A5D13FF48495FA248495DA24896C8
FC5C485FA248495EA2183F5A91C95BA2187F5A495FA218FF12FF495FA25FA2495FA25F1B
7C615B4D15FC6361A21A014D5D007F4C1300A24D1403003F4C5D6D92B5FC4E495A001F5D
4C150F6C6CDA07E75D0007DB1FC7141F6D91263F83FF91C7FC0003DB7E035C6C6C49486C
147E6C9027C007F8006D5A90277FF03FF090387FC3F8011FB500C06DB45A6D91C76C5B01
0301FC02075B9026007FE0020190C8FC527A79F75A>I<933801FFE0043F13FC4BB6FC03
0715C0033F9038807FE0923A7FF8000FF0912601FFE0EB03F8020701806D7E4A48C8FCDA
3FFC814A48157EDAFFE0157F494981495B5B4990C9FC495A49485E017F177E495AA24849
16FE484D5A5C484D5A4A4B5A484D5AF03FC04849EDFF80050790C7FC48EE3FFE91C7380F
FFF891B712E095C8FC4816F004FCC9FC49CCFCA212FF5BA45BA75BA5007F1803F10780F1
0FC06DEF1F80123FF13F00197E001F606DEE03F8000F4D5A6D4C5A0007EF3FC06C6C4C5A
6C4C48C7FC6C6DEC07FC6EEC1FF86D6CECFFE0D91FF801071380D90FFED97FFEC8FC6DB6
12F8010115C06D6C49C9FC020713C0424E78CB50>I<F27FC0963803FFF84F13FE071F7F
DF3FE0138096397F801FC09639FF0007E04E48133F0603ECFFF04E485A060F5B62F01FF8
063F5BA3DE7FF014E0A206FF15C0A27413809639E003FE004DEC01F897C8FCA25F61A45F
61A45F96C9FCA45F60A4173FA260033FB87E4B83A263A298C7FC92C7D87FF8C9FCA217FF
60A45E60A55E60A45E60A45E95CAFCA55E5FA4163F5FA4167F5FA416FFA25FA45D5FA45D
5FA44B5BA54B90CBFCA45E151FA25EA3153F5EA35ED803F8137FEA0FFC486C5C487E484A
5AA2B55CA24A90CCFCA201FE5B140301FC5B49485A01F05B397FC00FE0387E001F6C6C48
5A261FE0FFCDFC6CB45A6C5B000113F038007FC0549D76F954>I<EF03FF053F13E094B5
12F804036E13F8040F903901FE01FE933A3FF8007F034C4890381F87FF922601FFC0EB0F
CF4B4913074B48C76CB5FC4B5A4B486E13FE153F4B48804B5A4A4916FC4A177F4A5BA24A
90C913F84A5A023F17FFA24A4817F0A24A485DA24919E05D495FA2494917C0A2615B4B17
80A2615B4B1700A261A24990C95BA2193FA24A5FA2197FA262A219FFA26D485FA26E5D60
010F60606001075E6E4B5B6D5E95B5FC6D6D5B6DDB07F75B6E6CEB0FE76E6CEB3FCF6E6C
EBFF0F91270FFE07FE91C7FC6EB512F802014A5A6E6C138092260FFC005B92C8FC183FA2
61A2187FA261A218FFA261A25FD801F85FD807FE5D486C5F485E486D5E485E96C8FC4D5A
B54B5A91C8485A4D5A494A5B4902075B6C484A90C9FC49EC3FFED83FC0ECFFF8D81FFE01
075B6CB7128000034BCAFCC615F0010349CBFC506F7ECB52>I<EE1F80EE7FC0EEFFE04B
13F05D5DA25DA317E0A26F13C017806F1300ED00FC93C7FCB3A5EC1FE0ECFFFC01037F49
7FD90FF07F90391F807FC049486C7E017E805B5B484880485AA2485A157F485AA248C7FC
4B5A5A123E5C007E5D007C5B5EA200FC5B00785DC7FC5C93C7FC5C5DA2143F5DA2147F5D
14FF5DA25B5D5B5DA25B5DA24915F892C7FC5B4A130117F0133F5CEE03E0137F4A130717
C0A24AEB0F80A2EE1F00A24A133E167E167C013F5C4B5A90381FF003ED0FE090390FF83F
C06DB5C7FC6D5B010013F8EC3FE02D757BF23B>105 D<16FF0207B57E49B6FC4992CAFC
5BA36D5CEB0001EC007F153F5EA2157FA25EA215FFA25EA25CA25EA25CA25EA25CA25EA2
5CA293CBFCA25CA25DA2143FA25DF103FE027F93381FFF80077F13C04B4AB512E0953907
FE07F002FF92390FE001F895381F800F4B91387F003F06FCEB7FFC494B4813FF943803E0
014B49485AEF0F80494B485A173E4B4915F85F494A4815F04C486D13E04B484815C04C48
6D1380494AC8EA7E00043E92C7FC4B5A5E49495A4B5A9138FE0FC04B5A013F017FCBFCEC
FFFC5D5D4913FEEDFFF016FEEEFFC09026FFF87F13F0030713FC4AC67FEE3FFF486F7F04
077F4A6D7F824883825C8448167FF203E05CA24804FF14074E14C091C8FCA248190F1B80
494A5B1A1F003F1A00A2496E153EA2127F625B057F5C00FF4E5A173F49031F495A9538F0
0FC094390FF83F80496FB5C7FC05015BD87F806F5B001FCAEA1FE04E7A77F75A>107
D<D901FE923801FFE0902607FFC0021F13FC011F01F091B6FC496D010315C090267F0FFC
4901017F9026FC03FE903A1FF0007FF0D801F86DD93FC06D7E496C4AC76C7E0003DB80FC
140F01E0DA81F8810007EDC3F001C0ECC7C0000FDBCF806E7E018014DF04FFC8FC001F5D
01005C4A5B5A003E5D4C5D5C007E5D127C5E00FC495F4862007892C9FCC7FC4A173F635D
A2023F177F635D1AFF027F60A25D6102FF60A24B5D63495F635D614996C8FC1DF84B5D62
491A01073F15F04B5E197F494EEB03E0A292C900FF14075014C05BF40F805C50EB1F0001
3F621C3E4A197E077F5C017F62515A4A043FEB07E0736C485A96390FF83F804A70B5C7FC
4A705B6D487013F86D489338003FE05D4E7BCB67>110 D<DB7F80EC03FE912601FFF091
383FFFC0020701FC91B512F04A6D010314FC91261FC3FF903907FE07FE4AC6903A801FF0
01FF023E9127C03FC0007F4A017F49C76C7E02FCDAE0FC6E7E4ADAE1F8810101DBF3F06E
7E4AECF7E00103DBFFC0814A4B140F95C87F01075D5C4C4882010F5D4A5CA25D011F1B80
02005CA2495B133E011E5D90C7FC4B5FA25FA24B4D1300A294C9FCA24B5F645EA2033F17
FF645EA2037F4C5BA25E6403FF5E645E505B5C505B5E5090C7FC4A601A3F63505A4A6050
5A705C634A4C5B704A90C8FC4F5A704A5A4A017EEC3FF0043E4A5A923BFE3F8001FFC093
261FC00790C9FC023F90390FF81FFE70B512F8DBFC0114E07091CAFC027FEC1FF894CCFC
5DA214FFA25DA25BA25DA25BA25DA25BA25DA25BA292CEFC5BA2017F13C0007FB612F0B7
7EA45E596D85CB57>112 D<93380FFF8093B512F0030714FE031F8092267FF80113C092
3AFFC0003FE04A90C7EA07F0DA07FCEC03F84A4814014BEC00FC4A48157C4A48157E027F
ED03FE4B140F02FF151F92C8123F5BA249EE7FFCA319F849EE3FF06FEC1FE0F007806F91
C7FC8115F8EDFF806D14F8EEFFC017F86D15FF846D16E06E816E816E816E8180020181DA
003F15801503ED001F040114C0EE003F838383012081D803FC81EA0FFE487E486D80A248
1880A25FB5C81400A260491503495E49150701E05E6CC9485A007E4C5A173F6C4C5A6C6C
4B5AD80FE0DA03FEC7FC6C6CEC0FFCD803FEEC3FF83B01FFE003FFE06C90B61280013F4A
C8FC010714F09026007FFEC9FC3F4E77CB51>115 D<167CED01FE4B7E4B7FA35D94C7FC
A35D5EA3153F5EA3157F5EA315FF5EA35C5EA35C5EA3003FB812F04817F8A2B9FCA26C17
F0C7000F90C8FCA25C5DA3143F5DA3147F5DA314FF5DA35B5DA35B5DA35B5DA35B92C9FC
A35B5CA3133F5CA3017FED07C05CA2170F01FF16804A141F18005F48163E4A147E177C17
FC5F4C5A4A13034C5A5F6C4B5A161F6D6C49C7FC167E013F495A90391FF007F890390FF8
1FE06DB55A6D91C8FC010013FCEC3FF0356E7DEB3E>I<DB0FFCEDFFC092267FFF800103
13F84AB500E0010F13FE02076E49EBFF8091270FF81FFCD97F8013C091273FC007FE9039
FE001FE0913B7F0001FF01F802FE4B48EB7FF0D901F86DD983E013FF49489226C7C00113
F84948DA7FCF5B4A9238FF800749481600011F6049C85B013E1AF0017E5E017C1AE001FC
7213C0494C158000017313004903FFEC00FC00034D91C7FC5BA25E00075F6C5AC9FC5E60
A35E60A35E95CAFCA35E5FA3163F5FA3167F1B3E5FA204FF167E1B7C5FD803F819FCD80F
FC495F486C1801486C61484C14034B5FB518074B5F505A4B161F49DABFF04AC7FCDB1F3F
157E49D93F1F5D49017E6D495A49D9FC0F4A5A297FC001F807FCEB0FE06C4848486C6CEB
3FC03E1FF01FE001FF81FF806CB5486CD9FFFEC8FC6C4A013F5B000149C7000F13E02600
1FF0020190C9FC554E7BCB62>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmtt10 20.74 12
/Fh 12 119 df<F10FC0F11FE0F13FF01AF8197FA219FFA2601AF0601AE0601AC0601A80
601A006061A24E5AA24E5AA25F615F615F615F615F96C7FCA24D5AA24D5AA217FF605E60
5E605E605E60A24C90C8FCA24C5AA2167F5F16FF5F5D5F5D5F5D5FA24B5BA24B90C9FCA2
5D5E157F5E15FF5E5C5E5C5EA24A5BA24A5BA25C93CAFC5C5D147F5D14FF5D5B5DA2495B
A2495BA25B5D5B92CBFC5B5C137F5C13FF5CA2485BA2485BA25A5C5A5C5A91CCFC5A5B12
7F5B12FF5BA25BA25B127F6C5A6C5A458676F75A>47 D<4BB512E0031F14FE92B77E0203
16E0020F16F8023F824A8249B8FC49835B49188049EC80004901F8C77E4913E090B51280
92C8FC4801FC6F1300485B4A6F5A48496F5A4A6F5A48EF01E04A92C8FC4890CCFCA2485A
A25B127FA25BA212FFA25BAA7FA2127FA27FA26C7EA27F6C183F6EEEFFC06C7F4E13E06C
7F6E5D6C7F6C01FE4B13C06E5D6C02C04A13806D01F05C6D01FC49B512006D9038FFC00F
6D91B65A6D5F6D5F6D5F6D6C5E6E5E020F93C7FC020315FC020015F0031F1480030101F8
C8FC434D74CB5A>99 D<050FB5FC053F14C05F86A683170FEF0001B3923807FF80037F13
F04AB512FE020FECFF814A15C1027F15F149B712F94993B5FC5B5B5B4914004901F0131F
90B500C013074891C712014A804801F8814A81484981484981A248498191C9FC84485AA2
4982127FA25BA212FFA25BAA7FA2127F60A27F606C7EA2606C7E6E5D6C5F806C6D5D6E92
B5FC6C6D5C6E5C6C6D5C6C6D6C131F6D01E0137FDBFC03B712FC6D90BAFC6D1A806D16FD
6D16F9010116E16D16C1023F15816E4AC6FC020702F81600020002E0013F13FCDB1FFECB
FC516A7AE85A>I<923803FFE0033F13FE4AB67E020715E0021F15F84A15FE91B8FC4917
C0010783498349834914004901F0010F7F03C001037F90B5C8FC48496F7E48498102F06F
138048834A6F13C0485B4A6F13E04890C9FC84484818F0A24982127FA24918F8A200FF18
7F90BAFCA81AF0A21AC001F8CCFCA2127FA27FA2123F7FA26C7E6EEE0FC06CF03FF0806C
6DEE7FF8806C6D16FF806C6D4B13F06C6D6C5C6F020F13E06D01F05C6D01FE027F13C06D
9026FFE007B5FC6D91B712806D18006D5F01005F6E5E021F16E00207168002014BC7FC6E
6C14F8030F14C0030001FCC8FC454D76CB5A>I<DB03FEEC07FC291FFF801FFFC090383F
FF8048D9E07F6D90B57E4891B5D8F80114F002F3DAFC0780B500F76E488091B65B714880
6C5F95B7FC7E6C0307DAFE0F7FD8003FD9F803ECF0074B6C4A7EDBC000EC8001884B1500
92C75B4A6E487FA24A5DA34A5DA54A5DB3B2001FB5D8E007B5D8C00FEBFF8048DAF01FDA
E03F14C0486E486E4814E0A2B600FC03F815F0A36C02F803F015E0A26C4A6C4A6C14C06C
DAE007DAC00F14805C4B81CA5A>109 D<EF3FFE261FFFFE49B512C0007F9026FF800F14
F0B6013F14FC6FB67E03C38103C78203CF8203DF8292B87E7E001FDCE00F7FD80003ED00
0104F87F4C6E7E16C04C143F93C87F5D5D191F5D5DA35DA45DB3B1001FB600F8017FB612
C0007FDBFE01B712F0B817F85FA5836C03FE17F0001F9226F8007F15C0554B7ECA5A>I<
ED07FF037F13F00203B512FE020F6E7E023F15E04A8149B712FC498249824983498349D9
FC0180499026E0003F7F90B50080010F7F4AC7120348496E7F48496E7F4A157F48496F7E
4A8148496F1380A24890C96C13C04982003F19E04982A348487013F0A44848EF7FF8AC6D
17FF007F19F0A36D5EA2003F19E06D5EA26C6C4C13C0A26E5D6C6D4B1380A26C6D4B1300
6E5D6C6D4B5A6C6D4A5B02FF14076C6E495B6D01E0013F5B6DD9FC01B55A6D90B75A6D5F
6D94C7FC6D5E6D5E6D6C15F06E5D020F158002034AC8FCDA007F13F0030790C9FC454D76
CB5A>I<EF3FFC261FFFFE0103B57E007F9026FF801F14F0B6017F14FC03C1B67E03C36F
7E03CF8203DF16F092B87E866C85001FDCE01F7FD800039138FE000304F801008004E002
3F7F4C6E7F4C804BC86C7F854B6F7F4B814B831A7F4B707EA34B707EA286A31C80A286AA
62A21C008162A2636F163FA26F4C5AA26F4C5A616F5F616F4B5B705C70023F5B704A5B04
F849B5FC70010791C7FC9326FFC07F5B94B65A6203DF5E03CF5E03C75E03C393C8FC03C1
15FCDBC07F14F0041F14C0040791C9FC040013F094CBFCB3A8001FB612F8007F15FEB8FC
A76C5D001F15F851717ECA5A>I<953801FFF0001FB500FC021F13FE4802FF91B6128048
040315C0DC800F15E0B74915F0057F15F894B7FC6C038316FC16876C158F6C039F1481C7
000701BFEBF80193B512C095C713F85F05F8EC7FF04DEC1FC04DEC07004D91C7FC5F94CA
FC5EA25E5EA25EA35EA35EA45EB3A9001FB9FC48844884A2BA7EA36C60A26C606C95C8FC
4E4B7BCA5A>114 D<157EEDFF805C4A7FB2001FBA12804819E05ABB12F0A56C19E0A200
1F1980C7000301C0C9FCB3B1F101F8F107FEA2F10FFFA661821AFE6E163F70147F70ECFF
FC6E6D5B70010713F892397FFFE03F94B612F06F16E01AC06F16806F16006F5D6F15F803
005D043F14C0040F49C7FC040013F048607CDE5A>116 D<261FFFFE92B512F0007F6D6C
010314FCB65C6F82A66C82001F1600D80003EE001FB3B3A5193FA3197F19FFA26F5C606D
6D140F6003FC91B5FC6D9026FFC00791B512C093B912F06E19F8A280806E16DF6E161F02
01EDFC0F6E6C02F015F0031FDA800314C0030101FCCAFC554B7EC95A>I<001FB500FE02
3FB512FC486E6C90B67E4886B76C481680A56C4B6C16006C626C4AC7003F5C26000FFEC9
D83FF8C7FC010760A26E167F6D60A26F15FF6D60A26F5C6D60A26F5C027F94C8FCA26F5C
023F5EA26F140F021F5EA26F141F020F5EA26F143F02075EA26F147F6E5EA27013FFA26E
5E705AA26E5E705AA2037F92C9FC705AA2033F5CEEF80FA2031F5CEEFC1FA2030F5CEEFE
3FA203075CEEFF7FA26F5C17FFA26F5CA36F5CA27090CAFC705AEE0FF8514B7CC95A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmsy10 20.74 14
/Fi 14 107 df<007FBFFCA2C01280A36C1E00A2690772AE86>0
D<ED0FFE92B512E0020714FC023FECFF8091B712E04982010716FC498249824983498390
B97E4884A248844884A248844884A2481980A34819C0A4BB12E0AD6C19C0A46C1980A36C
1900A26C606C60A26C606C60A26C606D5F6D5F6D94C7FC6D5E6D5E010116F06D5E023F15
80020702FCC8FC020014E0DB0FFEC9FC434377CC56>15 D<0507BAFC94BBFC04071A8016
3F4BBCFC03071B00151F037F01FCCDFC92B51280020301FCCEFC4A13E0021F13804A48CF
FCEC7FF84A5A4913C0495B4948D0FC495A495A5C495A495A495A91D1FC5A485A5B485AA2
485AA2485AA25B123FA25B127FA290D2FCA35AA25AAB7EA27EA37FA2123F7FA2121F7FA2
6C7EA26C7EA26C7E7F6C7E7E806D7E6D7E6D7E806D7E6D7E6D6C7E6D7F6D13F06E7EEC3F
FE6E6C7E020713E06E13FC0200EBFF806F13FC031F90BBFC150703011B80ED003F160704
001A00170794CEFCB3A90007BFFC5A481E80A36C1E007E698772EC86>18
D<1E0F1E7F9A3801FF801D071D1F0B7F130052B5FC0A0713F80A1F13E00A7F1380514848
C7FC090713F8093F13E098B51280080349C8FC080F13F8083F13E097B51280070301FCC9
FC070F13F0073F13C096B5CAFC060313FC060F13F0067F13C04DB5CBFC050713FC051F13
F0057F13C04CB5CCFC040713F8041F13E0047F13804B4848CDFC030713F8031F13E092B5
1280020349CEFC020F13F8023F13E091B51280010349CFFC010F13F0013F13C090B5D0FC
000313FC000F13F0003F13C04890D1FCEAFFFC13F013FC6CB4FC14C0000F13F0000313FC
C613FF013F13C0010F13F0010313FE01006D7E023F13E0020F13F8020313FE02006D7E03
1F13E0030713F8030113FE6F6C6C7E041F13E0040713F8040113FF706C13C0051F13F005
0713FC050113FF716C13C0060F13F0060313FC060013FF073F13C0070F13F0070313FC07
00EBFF80083F13E0080F13F8080313FE08006D7E093F13E0090713F8090113FE756C6C7E
0A1F13E00A0713F80A0113FE766C7E0B1F13801D071D019A38007F001E1F9BC7FCB3A900
3FBE12FE4889C01280A36C1E00A2698772EC86>20 D<1278127FEAFFC013F013FC6CB4FC
14C0000F13F0000313FCC613FF013F13C0010F13F0010313FE01006D7E023F13E0020F13
F8020313FE02006D7E031F13E0030713F8030113FE6F6C6C7E041F13E0040713F8040113
FF706C13C0051F13F0050713FC050113FF716C13C0060F13F0060313FC060013FF073F13
C0070F13F0070313FC0700EBFF80083F13E0080F13F8080313FE08006D7E093F13E00907
13F8090113FE756C6C7E0A1F13E00A0713F80A0113FE766C7E0B1F13801D071D1F0B7F13
0052B5FC0A0713F80A1F13E00A7F1380514848C7FC090713F8093F13E098B51280080349
C8FC080F13F8083F13E097B51280070301FCC9FC070F13F0073F13C096B5CAFC060313FC
060F13F0067F13C04DB5CBFC050713FC051F13F0057F13C04CB5CCFC040713F8041F13E0
047F13804B4848CDFC030713F8031F13E092B51280020349CEFC020F13F8023F13E091B5
1280010349CFFC010F13F0013F13C090B5D0FC000313FC000F13F0003F13C04890D1FCEA
FFFC13F013C06CD2FC127CD3FCB3A9003FBE12FE4889C01280A36C1E00A2698772EC86>
I<4AB46C1A03021F01F862027F01FFF20F8049B612C0010715F0011F15FC4915FF4916C0
90B87E4805F8181F4849C66C01FE190002E001076D604801800100804848C8003F01E05F
01F8030F7F4848030301FC17FE49030001FF16014848706D4B5A49041F01E0150748CA00
0701F84B5A7201FE153F007E716D6CECFFF0726C01F001035B007C7201FF133F00FC060F
91B65A4806035F7394C7FC736C5D081F5D080715F0080115C0746C91C8FC0070080F13FC
090013C0D4FCA84AB46C1A02021F01F81A07027F01FFF20F8049B612C0010715F0011F15
FC4915FF4916C090B87E4805F8181F4849C66C01FE190002E001076D6048018001008048
48C8003F01E05F01F8030F7F4848030301FC17FE49030001FF16014848706D4B5A49041F
01E0150748CA000701F84B5A7201FE153F007E716D6CECFFF0726C01F001035B007C7201
FF133F00FC060F91B65A4806035F7394C7FC736C5D081F5D080715F0080115C0746C91C8
FC0070080F13FC090013C0714C76D286>25 D<0507BAFC94BBFC04071A80163F4BBCFC03
071B00151F037F01FCCDFC92B51280020301FCCEFC4A13E0021F13804A48CFFCEC7FF84A
5A4913C0495B4948D0FC495A495A5C495A495A495A91D1FC5A485A5B485AA2485AA2485A
A25B123FA25B127FA290D2FCA35AA25AAB7EA27EA37FA2123F7FA2121F7FA26C7EA26C7E
A26C7E7F6C7E7E806D7E6D7E6D7E806D7E6D7E6D6C7E6D7F6D13F06E7EEC3FFE6E6C7E02
0713E06E13FC0200EBFF806F13FC031F90BBFC150703011B80ED003F160704001A001707
696572DD86>I<F70780F71FE0A21F0FA38CA21F078CA21F038CA2797EA3797E8D207F8D
203F8D7A7E200F8D7A7E7A7EA27A7E7A7F7B7E7B7E8EF91FFC7B7E7B7E0F017F7B13E0FA
7FF8FA3FFE9F380FFF80003FC412E0C512FCA112FEA3A112FC003F23E0D5000F13809F38
3FFE00FA7FF8FAFFE05713800F0790C7FC575A575AF93FF06A575A575A5690C8FC565AA2
565A565A69201F565A69207F6920FF9EC9FC555AA3555AA2681F07A2681F0FA268A31F1F
A2F70780975B76D8AC>33 D<DBFFF0963807FF80020701FF077F13C0021F02E04DB5FC02
7F02F8170749B600FE171F496F057FEB80404904C0DCFFF8C7FC4901C76E030313C09027
1FF8003F6D4B90C8FCD93FE0010F01FCED0FFCD97F8001036DED1FF001FEC86D4B5A496F
6D4A5A48486F6D4AC9FC4848030F6D495A496F6D495A0007706D495A5B48486F6D495A71
6D495A48CA6C6C495A725D001EF1807F003E716D48CAFC725C003C7113E1007CF1F1FC72
13F3007871EBFBF8F2FFF08400F8725BA248725BA2735B737F8785737F8785737F4F7FA2
4F7F7E00784E8088F10FEFDF1FE77F007C07C77F003CF03FC308817F003E067F80001E4E
C67F4F137F001F0501816C4D486D7F6D4C486D7F00074D486D7F7F00034D486D7F6D4C48
6D7F6C6C4C486D13FE6D4B48C87F00004C486F7F017C4B486F13E0013FDB1FF86F13F86D
6CDA7FF0030713FED90FE04948486F9038FFF1C0D907F8010F01806F14FF6DB490B5CA7E
6D90B500FC836D6C02F0170F6E02C01703020791CC7E020001F007071380724E76CB86>
47 D<DB1FFEF3FFF84AB500F0070F13FF020702FE077F14E0021F6E6C4DB612F8027F03
E005078191B700F8051F15FF0103704DD980017F4904FFDDFFFCC76C7E4901F06F4B01E0
EC1FE090271FFE000702E04B0180EC07F0D93FF801016EDB0FFEC8EA01F8D97FE06D6C6D
4B486F7E0280021F6DDB3FF0167E01FEC86C6D4B48163E484803036D4B488248486F6E49
49EE0F80496F6E4948CAFC4848706D4948EF07C0727F4848706D4948EF03E049706D4948
1701001F716D494818F090CA6C6D49481700725E003EE080FF19F87202C190CC1278003C
72EBE1FE007C72D9E3FC197C7301F71A3C0078F2FFF8735C8500F8724A193E48231E735C
8586747F88747F86747F888850806C233E00784F6E183C895080E07FDF1A7C007C088F7F
003CDFFF0F6D18784F6D6D18F8003E4E486C7F001E4F6CF101F0070782001F4E486C6E16
036C4E486D6D17E06D4D486D6D16076C6C4D486D6DEE0FC0767F6C6C4D486D6DEE1F8006
0390C76C6D163F6C6C4C486E6EED7F006C6C4C486E02E015FE6D4C486F6DEC03FC017EDC
7FF06F01FC140F6D4C486F01FFEC3FF8D91FC0020301806F02C0EBFFF0D90FF0020F90C9
0003DAFE1F5BD907FCDA7FFE7091B65A6DB4902603FFF8706C5E6D90B648714BC7FC6D6C
03C0050F5D6E92CB000315F0020F02FC060015C0020102E0071F91C8FC9126003FFECE13
F0974E76CBAC>49 D<0507B712F894B8FC040717FC163F4BB9FC030718F8151F037F01FC
CAFC92B51280020301FCCBFC4A13E0021F13804A48CCFCEC7FF84A5A4913C0495B4948CD
FC495A495A5C495A495A495A91CEFC5A485A5B485AA2485AA2485AA25B123FA25B127FA2
90CFFCA35AA25AA2BD12F8A21CFCA31CF8A248CFFCA27EA27EA37FA2123F7FA2121F7FA2
6C7EA26C7EA26C7E7F6C7E7E806D7E6D7E6D7E806D7E6D7E6D6C7E6D7F6D13F06E7EEC3F
FE6E6C7E020713E06E13FC0200EBFF806F13FC031F90B812F81507030118FCED003F1607
040017F81707566572DD73>I[<F01FF8EF07FF173F4CB5FC0407EBFE00041F13E04C90C7
FCEE7FFC4C5A4B13E04B5B4B5B4B90C8FC5D5E153F5EA2157F5EB3B3AD15FF5EA25C5E5C
5E4A5B5C4A90C9FC4A5A4A5A903801FFF001075B013F13802603FFFECAFCB512F814C0A2
14F8000313FE39003FFF80010713E001017F9038007FFC6E7E6E7E6E7F806E7F82808280
A282157FB3B3AD82153FA282151F82816F7F6F7F6F7F6F13F8707E70B4FC7013E0040713
FE0401EBFFF8EE003F1707EF001F>61 172 116 256 86 102 D[<EA7FE0B5FC14F014FC
0001EBFF80D8001F7F010713F001017F6D6C7E6E7EEC0FFF6E7F826E7F808280A282157F
B3B3AD82153FA282151F82816F7F836F7F6F7F6F7FEE3FFE706C7E040713E0040113FE93
39007FFFF8170FA2177F933901FFFE00040713E0041F13804C48C7FCEEFFF84B5B4B5B4B
5B5F4B90C8FC5D5E153F5EA2157F5EB3B3AD15FF5EA25C5E5C4A5B5E4A90C9FCEC3FFE4A
5A49485A01075B011F13C048B55AB500FCCAFC14F091CBFCEA7FE0>61
172 116 256 86 I[<127CA212FEB3B3B3B3B3B3B3B3B3A6127CA2>7
172 108 256 48 106 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr10 20.74 75
/Fj 75 123 df<F10FC04F7E4F7EA24F7EA24F7EA34E7FA24E7FA24E80A24E80A24E8019
BF063F80191F067F80F07E0F06FE8018FC05016D7F18F805036D7F18F005076D8018E005
0F6D8060051F6E7F60053F6E7FA24DC76C7FA205FE6E7FA24C486E7FA24C486E7FA24C48
6E80A24C486E80A24C486F7FA24D81043F8494C97E4C84047E8204FE844C820301854C82
0303854C820307864C82030F864C83031F865E033F727F93CBFC4B727F157E03FE727F5D
0201737F5D0203737F5D02077380A24A487280A24A48737FA24A48737FA24ACD6C7FA202
FE747FA24948747FA24948747FA24A8601078A4A86010F8A4A87011F8A4A87013F8A91CF
7E498A017E8801FE8A498800018B498800038B90C1FC482080A24820C0A24820E0A24820
F0A24820F8A2C212FCA37E7C78FB8F>1 D<94260FFF80EC1FF84CB500F849B5FC041F02
FE01071480047F9126FF801F14E0922703FFFC01903AE07FF81FF04B903DC0001FF0FFE0
0FF8DB1FFEC7D807F9EB801FDB7FFC6EB538003FFCDBFFF0020F49137F4A494A49EBFFFE
4A01805C4A90C85C4A484B5B141F4A485F4BF17FFC147F4A484DEB3FF873ED1FF049496F
ED07C07392C7FC735B5B5DB3A7BE12F0A6D8000301C0C800070180C8FCB3B3B3A5496D4B
7F87013F01FC037F13FC007FB600FE90B87EA6677A7CF964>11 D<94380FFF804CB512F0
041F14FE047F80922701FFFC0113C003079039C0003FE0031F90C7EA0FF0DB3FFCEC03F8
DBFFF06E7E4A4914004A0180EC07FE4A90C8121F4A484B7E021F5E4A5A5D147F4A4892B5
7E7390C7FC495BA349715A4B6F5A735AF101C096C9FCB3A296380FFF8095B6FCBCFCA6D8
000301C0C8123F8585A285B3B3B3496D4B7FA2013F01FC037F13F8007FB600FE90B712FC
A6567A7CF960>I<94260FFF80ED1FFF4CB500F00203B512E0041F02FC023F14FC047F02
FF91B67E922703FFFC03D980039039F803FF804B9028C0003FC00F903980007FC0DB1FFE
C7270FE03FFEC7EA1FE0DB7FFC912703F07FF8EC07F0DBFFF0912701F9FFE06E7E4A496E
B54814014A0180020F91C8EA0FFC4A90C84849153F4A484B494B7E021F4C17FF4A4892B5
5A4B5F147F4A484D4A7F785B49495FA2854971715A4B6F496F5A73715A73EF03809CC9FC
B3A2F71FFF53B6FCC2FCA6D8000301C0C800070180C87E8B8BA28BB3B3B3496D4B6D4B7F
A2013F01FC037F01F892B512F0007FB600FE90B7D8FC01B712F8A6857A7CF98F>14
D<15C0EC03F8EC07FCEC0FFE141FA2EC3FFF5CECFFFEA24913FC4913F84913F04913E015
80491300495A495A5C495A4813C0485B91C7FC485A485A485AEA3FE05B485A48C8FC5A12
7C121820215DF856>19 D<D803F0EC01F8D80FFCEC07FE486C4A7E486C4A1380486D4913
C06E15E0B55CA26E15F0A36E15F86C81A26C81D81FFE6E1378D80FFCEC07FED803F0EC01
F8C791C7FCA6010116F84A15F0A301031501A24A15E0A2010715034A15C0010F150791C8
138049150F011E1600013E5D013C151E017C153E495DA248485D48484A5A48484A5A000F
150748484A5A48C8485A001E6FC7FC000C150635337AF756>34 D<EA03F0EA0FFC487E48
7E48138014C0B5FCA214E0A314F07EA27EEA1FFEEA0FFCEA03F0C7FCA6130114E0A31303
A214C0A213071480130F14005B131E133E133C137C5BA2485A485A485A120F485A48C7FC
121E120C143371F730>39 D[<160F161F163F167C16F81501ED03F0ED07E0ED0FC0ED1F
80ED3F00157E15FE4A5A4A5AA24A5A4A5A141F5D4A5A147F92C7FC5C495AA2495AA2495A
A2495AA2495AA2133F5C137FA2495AA34890C8FCA3485AA312075BA2120FA25BA2121FA4
5B123FA6485AA812FFA35BB37FA3127FA86C7EA6121F7FA4120FA27FA21207A27F1203A3
6C7EA36C7FA36D7EA2133F80131FA26D7EA26D7EA26D7EA26D7EA26D7E8081143F6E7E81
140F6E7E6E7EA26E7E6E7E157E81ED1F80ED0FC0ED07E0ED03F0ED01F81500167C163F16
1F160F>40 171 111 256 67 I[<127012F8127C7E7E7F6C7E6C7E6C7E6C7E6C7E137E13
7F6D7E6D7EA26D7E6D7E8013036D7E801300806E7EA26E7EA26E7EA26E7EA26E7EA28114
0381A26E7EA36E1380A3ED7FC0A316E0153FA216F0A2151FA216F8A4150F16FCA6ED07FE
A816FFA381B35DA316FEA8ED0FFCA616F8151FA416F0A2153FA216E0A2157F16C0A3EDFF
80A34A1300A34A5AA25D14075DA24A5AA24A5AA24A5AA24A5AA24AC7FC5C13015C495A13
075C495A495AA2495A49C8FC137E5B485A485A485A485A485A90C9FC123E5A5A1270>40
171 119 256 67 I<F003E0A24E7EB3B3AF007FC0FCA2C11280A36C1F00A2CBD807F0CC
FCB3B3AF725AA2717176E386>43 D<EA03F0EA0FFC487E487E48138014C0B5FCA214E0A3
14F07EA27EEA1FFEEA0FFCEA03F0C7FCA6130114E0A31303A214C0A213071480130F1400
5B131E133E133C137C5BA2485A485A485A120F485A48C7FC121E120C1433719130>I<B8
12F8AA2D0A7EA939>I<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C
5A6C5AEA03F01212719130>I[<F103C01907F10FE0A2191FA21AC0193FA2F17F80A21A00
61A2611801A2611803A24E5AA261180FA261181FA261183FA24E5AA296C7FC60A2601701
A2601703A24D5AA260170FA260171FA260173FA24D5AA295C8FC5FA25F1601A25F1603A2
4C5AA25F160FA25F161FA25F163FA24C5AA294C9FC5EA25E1501A25E1503A24B5AA25E15
0FA25E151FA25E153FA24B5AA293CAFC5DA25D1401A25D1403A24A5AA25D140FA25D141F
A25D143FA24A5AA292CBFC5CA25C1301A25C1303A2495AA25C130FA25C131FA25C133FA2
495AA291CCFC5BA25B1201A25B1203A2485AA25B120FA25B121FA25B123FA2485AA290CD
FC5AA25AA2127CA2>67 172 119 256 86 I<923803FF80033F13F84AB6FC020715C002
1F010113F0913A3FF8003FF8DA7FE0EB0FFC902601FF80EB03FF4990C76C7F49486E7F49
486F7E49486F7EA249486F7E49486F7EA201FF834A15074884A248496F1380A24819C0A2
91C97E4819E0A34819F0A44819F8A24982A3007F19FCA800FF19FEB3AC007F19FCA86C6C
4C13F8A56C19F0A46C19E06E5DA26C19C0A26C19806E5DA26C1900A26C6D4B5A017F5F6E
151F013F5F6D6C4B5A6E157F6D6C4B5A01075F6D6C4A5B6D01C0010790C7FC6D6D495ADA
3FF8EB3FF86EB448B45A020790B512C0020192C8FCDA003F13F803031380477779F256>
I<ED01E04B7E1507150F153F157FEC01FF1407143F0103B5FC137FB7FCA214FB14C3EBFC
031380C7FCB3B3B3B3B14A7F4A7F91B612C0007FB91280A6397371F256>I<ED3FFE0203
B512F0021F14FE027FECFFC049B712F0498249D9803F13FE90271FFC00037FD93FE00100
804948023F13E049C86C7F48486F7F498148486F7F48486F7F48486F7F5B001F71138049
18C0003F8390CAFC7213E0EA7FF801FE18F06D8280B57E1AF88084A66C5BA26C5B6C90C9
5A6C5AD803F818F0CBFCA2601AE0A21AC060A24E13801A0095B5FC615F614D5B615F614D
5B4D5B96C7FC4D5A4D5A4D5A604C5B4C5B4C5B4C48C8FC5F4C5A4C5A4C5A4C5A4B5B4B48
C9FC4B5A4B5A5E4B5A4B5A4B5A4BCAFC4A4816F84A5A4A5A4A48ED01F04A5A15804AC9FC
147E4A1603494817E0495A495A49481607495A49CAFC017EEF0FC0017C173F90BAFC5A5A
5A5A4819805A5ABBFCA31A00A3457378F256>I<92380FFF8092B512FC0207ECFF80021F
15E0027F15F89126FFF80313FE0103903980007FFFD907FCC7001F7FD90FF06E13E04948
6E7FD93F806E7F49C87E01FE83496F7F484883D9FF80814801E017808080486D17C08480
A76C495D6C5B6C4917806D5A6D5A90CA140095B5FCA261A24D5BA24D5B614D5B615F614D
90C7FCEF3FFC4D5A4D5A040313C0041F5B92260FFFFEC8FC0207B512F017C017FCEFFF80
91C7000313F09338007FFCEF1FFE716C7E717F7113F0717F717F727E85721380A27213C0
1AE0A27213F0A21AF8A21AFC84A31AFEA2EA03FCEA0FFF487F487F487FA2B57EA31AFCA2
60A24A17F8A26C5B4A4B13F091C9FC6C4818E001F04C13C0EA1FC04E13806C6C18006D93
B5FCD807FC4B5B6C6C5F6C6C6C4A5B6C01E0020F5BD97FF84A5B6DB4027F1380010FD9F8
03B5C7FC6D90B65A010116F86D6C15E0020F1580020102FCC8FCDA001F1380477779F256
>I<F003C04E7E180F181FA2183F187FA218FFA25F5FA25F5FA25F5FA25F94B5FC17FBEE
01F3160317E3EE07C3160F1783EE1F03163F163E167C16FC16F8ED01F0150316E0ED07C0
A2ED0F80ED1F00A2153E5DA25D14015D4A5A14075D4A5A141F92C7FC143E147E147C5C13
015C495A13075C495A131F91C8FC133EA25B5BA2485A485AA2485A120F5B48C9FC5A123E
5A12FCBC12E0A6CA000701E0C7FCB3A24D7F4D7F94B6FC030FB812E0A64B757BF456>I<
0170171C017C177CD97F80ED03FC02E0151F02FEEDFFF8DAFFF0013F5B92B75A616196C7
FC60606018E06095C8FC17FC17F017C0D97E1F01FCC9FC91CCFCB3A4923803FFC0033F13
FC92B6FC020315C091260FFE0113F0913A1FE0003FF8DA7F80EB0FFE02FEC76C7ED97FF8
6E7F4A6E7F4A6E7F4A824A6F7E91C9FC017E707E85017C161F01388390CAFC721380A21A
C0A21AE0A2841AF0A51AF8A5EA07F0EA1FFC487E487E80B5FCA41AF0A36091C914E05B6C
5A01F018C0007ECAFC60003E1980123F6C4D13006D5F6D167F000F606C6C4C5A7F6C6C4B
5B6C6C4B5B6D4B5B6C6C6C4A5B6D6C023F90C7FCD93FF04A5AD91FFE903801FFF890270F
FFC01F5B010390B65A6D16806D6C4AC8FC021F14F8020314C09126007FFCC9FC457778F2
56>I<933801FFE0041F13FE93B67E030315E0030F81033F9038803FF8923AFFF80007FC
4A01E0EB00FE4A0180147F4A90C8EA3F80DA1FFC151F4A48EDFFC04A4814034A485C4B4A
13E0495B495E4990C8FC495AA2495A133F4A6F13C0137F49486F138072130048EF00FC4A
93C7FC5AA2485BA35AA25C5AA35AA2160C923803FFFC48D9000FEBFF80033F14E04B14F8
9239FE003FFCDA01F8EB07FFDA03E06D7F4A4801007FB548486E7E4AC87F023E6F7E023C
6F7E027C820278150F02F8824A6F13801AC05C7213E0A24A17F0A21AF8A24A811AFCA591
C914FE7EA87EA380A27EA21AFCA27EA21AF86C6D5DA21AF07EA26C6D17E0606C19C06E17
80017F5E6E1700013F4C5A6D6C4B5A6E5E6D6C157F6D6D4A5A6D6D495B6D6D01075B6D01
F8011F90C7FC6EB4EBFFFE021F90B55A6E5D020315E002001580033F01FCC8FC030313C0
477779F256>I<EA03E0A27F487E13FEEBFFF091BA12C0A35AA31B801B00A248616262A2
6201F0CAEA0FE00180171F48CB485A624FC7FC003E60614E5A007E1703007C4D5A614E5A
181F61484D5A187F96C8FCCB12FE17014D5A604D5A170F604D5A173F604DC9FC5F5F1601
4C5AA24C5AA24C5AA2161F5F163F5F167FA216FF5F5DA24B90CAFCA35DA24B5AA3151FA3
153F5EA2157FA415FFA44A5BA55CA85CAF6E5B6E5B6E5B033FCBFC4A7977F456>I<9238
03FFC0033F13FC4AB67E020715E0021F15F891263FFC007FDAFFE0EB0FFF4990C700037F
D903FC02007FD907F06F7E4948ED1FF049486F7E49486F7E91C91203017E8301FE707E49
8200011980A249177F12031AC0193FA21207A27FA37F197F6D188080806EEEFF006C7F02
FC5D6E5E6E6C4A5A6C6E140703F05D6C6E4A5A03FE4A5A6D6D4A5A04C0495A6D02F049C7
FC6D6E485A6D9138FE07FC6D9138FF0FF06DEDFFE06D16806D93C8FC6E14FC6E14FF020F
816E15E00201816E15FC020381020F6F7EDA1FF781DA7FC181DAFF8081902703FE003F80
49486D804948010780D91FE06D8049480100158049486E14C049C8121F487014E0484803
0314F048481500844848041F13F8484882060313FC003F834982197F4848EF3FFE191FA2
00FF180F5B1907A31903A41AFC7F127FA2F107F87F003F19F06D170F001F19E06D171F6C
6C18C0193F6C6CEF7F806C6CEFFF006C6D4B5A6C01E0ED07FC6D6C4B5AD93FFCED3FF06D
B4EDFFE06D01E001075B6D01FC017F5B010190B648C7FC6D6C5D021F15F0020715800200
02FCC8FC030713C0477779F256>I<EA03F0EA0FFC487E487E481380A2B512C0A66C1380
A26C13006C5A6C5AEA03F0C8FCB3B3A2EA03F0EA0FFC487E487E481380A2B512C0A66C13
80A26C13006C5A6C5AEA03F0124A71C930>58 D<007FC0FCA2C11280A36C1F006C66D4FC
B3A9003FBF12FE488AC11280A36C1F00A2712976BF86>61 D<913801FFFC023FEBFFE091
B612FC0107EDFF8049D9001F13E0D93FF001037FD97F809038007FFC01FEC86C7E48486F
7ED803F06F138048486F13C0485A48486F13E090C914F05A6D6F13F8EA7FF07F6D17FC48
7E7FA76C5A6C4817F86C485D6C5ACAFC4D13F0A219E04D13C05F19804D13004D5A4D5A4C
13F04C5B604C90C7FC4C5A5F4C5A4C5A5F167F5F4C5A94C8FC5D5E5E15035EA24B5AA25E
150F5EA35E151FA393C9FCB1151E92CAFCAF153FEDFFC04A7F4A7F4A7F4A7FA86E5B6E5B
6E5B6E5B033FC9FC3E7A77F951>63 D<F001F84E7EA34E7EA34E7EA34E7FA34E7FA34E7F
A395B57EA34D80A34D8018F3A205078018E1A2050F8018C0A24D488085053F811800854D
81177E8505FE815F850401824D7FA20403824D7FA20407824D7FA2040F824D7FA2041F83
4D80A2043F8394C87EA24C83047E81A204FE834C81A20301844C81A20303844C81A20307
844C81A2030F8493BAFCA24B85A34B8593CA123FA24B85037E83A203FE854B83A2020186
4B83A20203864B83A20207864B83020F865D87021F875D88023F87A2027F858A14FF4986
496D86496D60496D86017F01FC95B57E0003B66C0407ECFF80B700F80307B812F0A6747C
7AFB81>65 D<BB12FEF2FFF01BFEF3FFC01CF01CFCD8000702E0C8000F13FF01004A0301
806E496F6C13E06E061F7F757F757F757F757F7580888A767FA2767FA2767FA4767FA952
5BA36664666466646699B5C7FC515B515B515B515B515B097F13805148C8FC08075B081F
13F00703B5128093B800FCC9FC63F3FF801CF00480C913FE98383FFF80090F7F7513F009
0113FC757F767E767F767F8A767F767FA2767F8AA2767FA3761480A31FC0AA1F80A264A2
1F0064666466646664525B525B99B55A515C5191C7FC090F5B4A063F5B91B56C93B55A01
076E030F14E0BE5A9AC8FC1CFC1CE099C9FC1BE06A767BF57A>I<95260FFFE0ED03804D
B500FE1507051FDAFFC0140F94B700F8141F040316FE041F70143F047FDA800F01C0137F
93B500F0C77F03030280DA1FF813FF030F01FCC83807FC014B01F0ED03FE4B01C0923800
FF0392B5CAEA7F874A49EF1FC74A01F8EF0FEF4A4971B5FC4A49834A49834A5B4A90CCFC
4A4885494985495B49498589495B4949855B4B855B92CDFC90B586485B895A5C481D7F5C
A25A1E3F5C5AA348491B1FA45A9BC7FCA35CB5FCB27E80A47EF60F80A36C7FA37E801E1F
6C1E00A2807E6E636C1D3EA26C6D1B7E6D1C7C6F1AFC7F6F626D1B016D6D626D6D190353
5A6D7F6D6D4F5A6D6D4F5A6E7E6E6D4EC7FC6E6D187E6E6D606E6D17016E6D4D5A6E01FE
EF0FF06E6D4D5A033F01C04C5A6F01F0EEFF806F01FCDB03FEC8FC0303D9FF80EC0FFC03
0002F0EC7FF870903AFF800FFFE0041F91B61280040394C9FC040016F8051F15E0050192
CAFCDD000F13E0697E77F97C>I<BB12FEF2FFE01BFE757E1CF01CFCD8000702F0C8003F
7F01004A03036D7E6E49DB007F13E06E061F7F09077F090113FE757F0A3F7F767F767F76
7F767F88767F777E777E8B898B777F898B898BA2777FA28B89A28BA2781380A420C08AA3
20E0A620F0B020E0A620C0A266A22080A320009BB5FCA2676567A2535BA2535BA2535B67
65675390C7FC6566535A525B525B525B525B0A3F5B5290C8FC51485A515B090F13F04A06
7F5B91B56C0303B55A01076E033F91C9FCBD12FC1CF01CC051CAFC1BF050CBFC74767BF5
84>I<BFFCA48AA2D8000702F0C9FC01004A16076E49EE007F6E191F881C03767F881D7F
1D3FA21D1FA21D0F8AA21D07A31D03A28AA21D01A51A1F777EA49BC7FCA462A462A26261
61190F96B5FC93B8FCA604C0C7FC190F1903858586A286A486A2F607C0A3F60F80A497C9
FCA21E1F1F00A466A21E3EA21E7EA31EFE661D01A21D03A21D07A2535A1D1F1D3F1D7F1D
FF1C030A0F5B4A193F91B56C0403B5FC01076E167FBFFCA366A36A767BF575>I<BE12FE
A489A2D8000702F0C8120101004AED00076E4916006E193F1C0F8876138088881D7FA21D
3FA21D1F1EC01D0FA41D07A21EE0A21D03A6F501F01A1FA39AC7FCA662A462A262616119
0F96B5FC93B8FCA604C0C7FC190F1903858586A286A486A997CAFCB3A94A7F91B57E0107
14FFBAFCA664767CF570>I<95260FFFC015070503B500FE5D051FDAFFC05C94B700F05C
040716FC041F04FF5C047FDA001F6D5B4BB500E0010113E04B91C8383FF001030F01FC92
380FF8034B01F0ED03FC037F01C06F6C5A92B5CAEA7F0F4A01FCEF3F8F4A49EF1FDF4A49
71B5FC021F01C0834A498393CB7E4A5A02FF85494985495B49498549875D4949855B4B85
5B90B5CD7EA2485B89485BA248885CA25A8A485BA4484987A45A9BC8FCA25CA2B5FCB27E
80081FB812F0A37EA36E94C7003FECE0006C09031480887691C7FCA26C7FA27E80A27E80
7EA26C7FA26D7F7F817F6D7F817F6D7F6D7F6D6D606E7E6E7F705F6E7F02076D5F6E01FC
5F6E6DEF1FEF6E6D6CEE3FC76F6DEE7F83031F01F0EEFF016F01FC923803FE000303D9FF
80DA0FFC7F6F02F0DA7FF87F6F6C9028FF8007FFF07F041F91B600C07F040794C77E0400
04FC91C8FC051F15E0050392CBFCDD000F13E0747E76F987>I<B912F0A6D800074AC7FC
010014F06E5B6E5BB3B3B3B3B3AA4A7F91B57E010714FEB912F0A634767BF53E>73
D<B900F0037FB612FEA6D800074ACA00071580010002F0050102F8C7FC6E497114C06E49
7290C8FC1EFC1EF0661E8053C9FC525A65F407F8525A525A525A525A52CAFC515A515A51
5A515A515A515A515A51CBFC505AF203F8505A505A505A505A50CCFC1AFE4F5A4F5A4F5A
4F5A4F5A4F5A4FCDFC4F7E18034E7F4E7F604E7F4E7F95B5FC4D804D805FDD0FF37FDD1F
E380EF3FC1DD7F80804D5ADCC1FC6D7FDCC3F86D7FEEC7F0DCCFE06D7FDCDFC06D7FEEFF
8094C76C7F4C6E7F5E4C6E804C6E805E4C6F7F747FA2747F747FA2747F747FA274807480
A2757F757FA2757F757FA2757F757FA275807580A2767F767FA2767F767FA2767F8A8BA2
8B4A6D1AF091B56C4D80010702FE057FECFF80B900F0020FB81280A679767BF586>75
D<BAFCA6D8000792CCFC010014F06E5B6E5BB3B3B3AA1D3EA41D7CA71DFCA21DF8A31C01
A31C03A3F407F0A21C0FA21C1F1C3FA21C7F1CFF5113E0631B0F631B7F4A4DB5FC91B56C
150F01076E4AB6FCBEFC1DC0A55F767BF56C>I<B700C098B712E07062A27062A27062D8
00070EFCC7FC010020E0027E6DE00FBF5B023E676F6CF21F3FA36F6C1A3EA36F6D197CA2
6F6D19F8A36F6DF001F0A26F6DF003E0A36F6DF007C0A36F6DF00F80A2706CF01F00A370
6C183EA2706D5FA3706D5FA2706D4C5AA3706D4C5AA3706D4C5AA2706D4C5AA3716C4CC7
FCA2716C163EA3716D5DA3716D5DA2716D4A5AA3716D4A5AA2716D4A5AA3716D4A5AA372
6C4AC8FCA2726C143EA3726D5BA2726D5BA3726D485AA3726D485AA2726D485AA3726D48
5AA2736C48C9FCA396383FFF3EA37313FCA2735BA3735B147F735B4A7E497F010701F06F
494C7F011F01FC99B57E90B66C080714FCB86C6D4991B912E0A274C8FCA31A3E93767BF5
9E>I<B700C00407B712FC8282A28282D80001DF0007ECFC00D9003F6D050014E070063F
1380E30FFEC7FC71715A023E6E715A836F735A6F7F83816F7F83816F7F84816F80707FA2
707F707FA2707F707FA2707F7080A27080717FA2717F717FA2717F717FA2717F7180A271
80727F8684727F8684727F868472808784737F737FA2737F737FA2737F737FA273148073
14C0A27413E07413F0A27413F87413FCA27413FE7413FFA27414817414C1A27513E17513
F11DF9877513FD1DFF8787A28787A2888888A28888A28888147F884A6C197F497F010701
F0193F011F01FC191F90B67EB86C170F1D07A21D031D01775A76767BF581>I<F07FFF05
0FB512F8057F14FF0403B712E0040FD9E00313F8DC3FFEC7EA3FFEDCFFF891380FFF8003
0301C0020113E0030F496E13F84B48C9EA3FFCDB7FFC70B4FCDBFFF004077F4A49707F4A
49707F4A49707F4A90CB6C7E4A48727E4A48727E027F864A48727F4949727F4988494972
7F4B8449884949727FA24990CD6C7E49884A8601FF89A24849747FA2488A4A86488AA24A
86488AA2488AA24A86A2488AA4488A4A86A5B51E80B16C6D501400A66C66A26E62A26C66
A36C6D505BA36C666E626C66A26E626C666E626C666D9AC7FC6F96B5FC6D646F606D646D
6D4E5BA26D6D4E5B6D6D4E5B6D646D6D4E5B6F606E6C4E90C8FC6E6D4D5A6E6D4C5B6E6D
4C5B6E6D4C5B02016D4C13C06E6D4C5B6F6C4C90C9FC92261FFF80EDFFFC6F01E002035B
030301F8020F13E06F01FE023F5B9228007FFFE003B5CAFC040F90B612F8040316E0DC00
7F92CBFC050F14F8DD007F90CCFC717E76F986>I<BB12F0F2FF801BF81BFE757E1CE0D8
000702F0C814F801004A030F13FE6E4903017F6E716C7F091F7F7513F0757F87757F757F
89881E801EC0881EE0A37613F0A31EF8AA1EF0A45213E0A21EC0A2521380A21E00525AA2
515B515B515B515B093F5B5190C7FC50485A080F13F84FB55A93B912C051C8FC1BF81B80
08F0C9FC04C0CDFCB3B3A94A7F91B57E010714FEB912F0A665767BF575>I<F07FFF050F
B512F8057F14FF0403B712E0040FD9E00313F8DC3FFEC7EA3FFEDCFFF891380FFF800303
01E0020313E0030F0180020013F84B48C9EA3FFCDB7FFC70B4FC4B48707F4A49707F4A49
707F4A49707F4A49707F4A90CB6C7E4A48727E4A48727E4A48727F49884949727F494972
7FA24949727F49884B8449884990CD6C7EA24948747FA2488A4A86488AA24849747FA348
8A4A86488AA34A86488AA4488AA34A86A3B51E80B16C1F00A36E62A36C66A46C6D505BA3
6C66A26E626C66A26C666E62A26C666E626C666D6CDB07F84B90C7FCF01FFF6D6D027F6D
4A5A95B512E06D6D902701FC0FF0495B6D922703F001F85D6F902707E0007C5B6D4C6D5D
6D6D49484B5B6D725D6D6D49C76C6C485B6F606E6C011E6E6C4890C8FC6E6C4E5A6EDD03
E05B6E01804D5A6E01C004F15B020101E004F313C06ED9F81F6EB55ADB7FFC95C9FC9227
1FFE0F8015FC92260FFF8F5E0303D9E7C04913E06FD9FFE0010F5B6F6C6D013F90C8EA01
80040F9027FC03FFFEED03C0040390B7FCDC007F81050F14F8DD007F01006D140795C8FC
881F0F88756C141FF73F8076147F7614FF765B756C1307E3E01F13009AB6FCA28767A375
5DA2755D6787755D67765C0A1F91C7FC7613FC0A035B9938007FC0729B76F986>I<BA12
FEF1FFF01AFF1BE01BFC1BFFD8000702F0C7000F14C001004ADA007F13F06E49030F13FC
6E05037F08007F093F13C0757F757F757F757F8789757F8AA2767FA38A88A28AA966A264
66A26699B5FC9BC9FC6563515B65515B5113C0515B097F90CAFCF3FFFC08035B080F13E0
087F138096260FFFFECBFC93B812F01B8050CCFCF2FFC004C0C7001F13F0070313FC9638
007FFF747F080F13E0747F747F747F747F888789757FA2757FA3757FA789A789A877EC0F
80A387A377141F8721004A6D8291B56C735B010702FE70163EB900F06F6D137E88766D5B
766D485A0A031403769038FC0FF0D06CB55A0B1F14800B0391C7FC9A38003FF8797A7BF5
7F>I<DB1FFF150E4AB500F0141E020F02FE143E023FECFFC091B76C137E4904F813FE01
07D9F80113FE49903A80001FFF014948C7000313834948020013C3D97FF0ED3FE74948ED
0FFF4849814A814890C97E488349177F000F183F4848171FA249170F123F1907485A1903
A2190112FFA21900A36D187EA47F1A3E7FA26C7EA26E94C7FC806C7F8014FC6C13FF15C0
6C14F8EDFF806C15F8EEFF806C16F86CEEFF806C17F86D16FE6D707E6D17E06D836D836D
17FE6D836D6C83021F830207831400030782DB007F811607DC007F800507801700061F7F
84180372148084857313C085A2851BE000788412F8A285A4857EA47E1BC0A27EA24F1380
7FA26D19006D5F626D170F6D606D171F6D606D173F6E4C5A02E04C5A6E4B5BD9CFFC4B5B
D987FF4B90C7FC018301E0EC1FFE010001FCEC7FFC48903B7FFFE003FFF8021F90B65A48
010716C048010193C8FC6E6C14FC48020714F048DA003F90C9FC4B7E76F960>I<001FBF
12F0A692C700039138C000014801E06E4AD9000F13F802806E91C8120349C9170001F81C
3F491C1F491C0F491C07A2491C03A290CA1801A3007EF500FCA5007C1E7CA8481E3EA6CB
1900B3B3B3AE4D80A2050714E0057F14FE4ABB7EA66F757AF47C>I<B900F0020FB712FC
A6D800074ACA000FECFC00010002F0050114E06E49716C13806E49DE1FFEC7FC775A775A
A2775AB3B3B3B21D07807061A31D0F6E63A270181F80666E1A3F7096C8FC6E62826E1AFE
701701037F616F6C4D5A1C076F6D4C5A6F6D4C5A6F6D4C5A6F6D167F6F6D4C5A6F6D4B90
C9FC706CED07FE706C6C4A5A040F01E0EC7FF07001F849485A04019026FF801F5B7091B6
CAFC053F5D050F15F8050115C0DD003F91CBFC060113F0767A7BF581>I<B800FC49B800
FC0207B712C0A6D8003F02FCC96C02F8C9003FECF000010702C0040F02C0040314806D4A
7091CB49C7FC93CA6C49725A6D7C5AA16C5A6D736377725A70828078607071191F6E9FC8
FC8A7071616E213EA27073177E6E217CA2704D7F6E69A299B57E6E6D545AA251807005F3
18036E690903807005E118076E690907807104C0180F6F68090F81714C6C171F6F9DC9FC
8B714B486C5F6F1F3EA2714B6F157E6F053E6D177CA271037E816F057C6D5FA209FC816F
6D4B6D4C5AA2080182714B6D16036F67080382714B6D16076F67080782724A6D160F7066
8C7249486E151F709BCAFC8C7249C86C5D701D3EA2724971137E70033E6F157CA272017E
8370037C6F5DA208FC8372496F14017065070118FC06FE496F14037065070318FE06FF49
6F14077065070718FFDF87C06F140F7164218FDFCF8070139F7199CBFCA207FFCA6C13FF
7163A37149715BA37149715BA34F837163A24F837163A24F837163A24F83067F62A24F18
7F063F97CCFCA296CC7E72193EAA7A7DF5B1>87 D<0007BC12F81CFCA504C0C8001F13F8
03F0C94813F015804ACA4813E04813F802E094B512C04A4C14805C91CA481400494D5B5B
494D5B6149614F5B5B4F5B96B55A5B4E5C4E91C7FC5B4E5B121F4E5B4E5BA290CA485B4E
5BA295B55AA24D5CCA4891C8FCA24D5B4D5BA24D5B5F614D5BA294B55A4C5CA24C91C9FC
4C5BA24C5BA24C5B4C5BA24C5B93B55AA24B5CA24B91CAFC4B5BA24B5B4B5BA24B5B4B18
7C5F92B55AA24A5C4A91CAFCA24A4917FC4A4917F8A24A5BA24A5B4A5BA291B548160149
5CA24991CAFC1B03495B495BA24949EF07F0495B1B0F495B90B5181F5D484A173F1B7F48
91CB12FF48495F6248495F4849171F1A7F48494CB5FC071F14E048490303B6FCBDFCA57E
567677F569>90 D[<B61280A748C8FCB3B3B3B3B3B3B3B3AEB61280A7>25
172 109 256 48 I<0103ED0180496CEC03C0496CEC07E04948EC0FC049C8EA1F80013E
160049153E495D48485DA248484A5A495D00071503495D000F150790C85B48150F001E93
C7FC003E5D003C151EA2007C153EA20078153CA300F8157C481578A601FC157ED8F3FF91
3879FF8000F76D017B13C0B56C017F13E06E15F0A26E15F86C81A36C81A24A15F06C816C
496D13E06C496D13C06C90C76C1380D800FC9138007E00353366F756>I[<B61280A7C712
3FB3B3B3B3B3B3B3B3AEB6FCA7>25 172 125 256 48 I<EDFFF8021FEBFF80027F14F0
0103B612FC499038803FFF90271FF800077FD93FC0010113E049C87F01FEED3FF8000170
7E6D6C81486D6E7E6E80486D826E80858385A3717F6C5B6C5B6C5B6D5A90CAFCA74CB5FC
93B6FC151F4AB7FC020F14E0023FEBF80091B51280010301FCC7FC010F13F04913C04990
C8FCEBFFFE4813F8485B485BA2485B485BA24890C9FC1BF8485AA3485AA25FA45FA26D5D
127F5F6C6C923A1F3FF801F0A26C6D143E6C6D913A7C1FFC03E06C6DD901F89038FE07C0
6C6D49486CB5FC6C01FC90260FE00714806C6CB46CB4486C14006D90B5C66C13FC010702
FC6D5B010002F0EC1FC0020F018091C8FC4D4F79CC56>97 D<EC1F800003B5FCB6FCA6C6
FC131F7FA27FB3AEEF3FFC0403B512C0040F14F8043F14FE933AFFE01FFF80922783FE00
0313E0DB87F801007FDB8FE0EC3FF8DB9F806E7E03BFC86CB4FC03FE6F7F4B6F7F4B814B
6F7F4B834B707EA24B707E871A1F87A21C80861CC0A31CE0A286A31CF0AE1CE0A3621CC0
A31C8062A21C00A2505A636F167F636F4C5AA26F4B5B6F4B5B02FE60DAFC7C4B90C7FC6F
ED1FFE4A6C6C4A5A6F6CEC7FF09126F007F049485ADB03FC01075B9128E001FF807F90C8
FC6F6CB512FC4A011F14F090C8000714809326007FF8C9FC547A7BF760>I<923801FFF0
031F13FF92B612E0020315FC020F9038803FFE913B3FFC0001FF80DA7FF09038003FC049
4848EC0FE04901806E7E4990C87F4948151F49484B7E013F167F49484B7E49485CA2485B
5A5C5AA248496E5B725A48715A725A4890CCFCA35AA35BA212FFAE127F7FA37EA36C7FA2
F10F806C7FA26C181F6E17006C606C6D163E197E6C6D167C6D6C16FC013F5F6D6C15016D
6C4B5A6D6D4A5A6D6D4A5A6D6DEC3F806D01F802FFC7FCDA3FFEEB03FE913A0FFFC01FF8
6E90B55A020015C0033F49C8FC030113E0414F7ACC4D>I<1A7E95380FFFFE0503B5FCA6
EF0003F0007F193FA2191FB3AE923801FFE0031F13FE92B612C0020315F0020F9038E01F
F8913A3FFE0003FEDA7FF8EB007FDAFFE0EC3F9F010349EC0FDF4949EC07FF4948C87E49
4881013F824948167F495A193F485B48181F5C5A485BA25AA291CAFC5AA35A5BA312FFAE
127FA37FA27EA37E807EA27E806C183F6C7F197F6C6D16FF137F6D6C5D6D6C4B7F6D6C5D
6D6CDB0FDF7F6D6DDA3F9F13F06D6DDA7F1FEBFFF06D01F0EB01FCDA7FFCEB07F8913A1F
FF807FF0020790B512C002011500DA003F01FCEDFC00030301C00280C7FC547A7AF760>
I<923807FFC0033F13FC4AB67E020715E0021F01017F913A7FF8003FFCDAFFE0EB0FFE49
496D7E0107496D7F4990C76C7F49486E7F49488249486F7E01FF163F4A824849151F4884
5C48717EA2485B1A804883A24890C9FCA21AC05A845BA312FF90BAFCA31A8049CCFCAA12
7FA27FA27EA36C7FF10380F107C07E6E160F7E6C6DEE1F80A26CF03F006C7F6E167E017F
17FE6D6C5E6D6C4B5A6D6C15036D6D4A5A6D6D4A5A01006DEC3FC0DA7FF802FFC7FCDA1F
FEEB03FE913A0FFFC03FF8020390B55A020015C0031F49C8FC030113F0424F7BCC4D>I<
EE0FFC93B51280030314C0030F14F092393FFC0FF892397FF007FC9238FFC00F4A903880
1FFE4AEB003F4A48EB7FFF140F4A5A4A5AA24A5AEF3FFE14FF4BEB1FFC49ED0FF8EF03E0
94C7FC5D5BB3A8B812F8A6D8000301C0C8FCB3B3B3A5497F81013F13FE007FB712E0A638
7A7BF935>I<F2FF80070713C0DB1FFE021F13E04AB500E0017F13F00207913AF801FF83
F8021F9139FE03FC07913D7FFC0FFF87F00FFC9126FFE001EBCFC00103903B80007FFF80
1F4990C7393FFE000F49486E5A49486E6C14F8013F7013074A6EEC03E0017F71C7FC4948
6E7FA24884A248496E7FA34884AB6C60A36C6D4A5BA26C60A26D6C4A5B013F94C8FC6E5C
011F5E6D6C4A5A6D6C4A5A496D495A499039E001FFC091267FFC0F5BD93E1FB548C9FC02
0714F8D97C0114E09126001FFECAFC92CCFC13FCA67FA27FA280EB7FE014F86DB77E18FE
6DEEFFE019F86D17FE6D717E6D841AF0010F84013F84D9FFF0C8FC48018003077F4890CA
6C7ED807FC171F484805071380484883003F7213C04983127F49F07FE0A2485A1A3FA66D
187F007F1AC0A26C6CF0FF806D5F001F1A006C6C4D5A6C6C4D5A6CB4EF1FF86C6D4C5A6C
01E0EEFFE0D97FF803035BD91FFE030F90C7FC90260FFFC0EC7FFE010301FE90380FFFF8
D9007FB712C0020F4BC8FC020115F0DA000701FCC9FC4E727BCD56>I<EC1F800003B5FC
B6FCA6C6FC131F7FA27FB3AEEF1FFE94B512E0040714FC041F80933A3FE01FFF8093267F
00037FDB81FC6D7FDB83F06D7FDB87E0147F4C81DB8F806E7E039FC8FC03BE151F03BC82
15FC5D4B150F865DA35DA45DB3B3A6496D4B7FA2017F01F892B512F0B7D8FC01B712F8A6
55787AF760>I<EB07E0EB1FF8497E497E90B5FC4880A86C91C7FC6D5A6D5A6D5AEB07E0
90C9FCB3A4EC1F8048B5FCB6FCA6C6FC131F7FA27FB3B3B3497FA2017F13F0B712F8A625
747BF32F>I<EC1F800003B5FCB6FCA6C6FC131F7FA27FB3B00503B612FCA60500158006
3F01F8C7FC1AE07213804FC8FC19F84E5A19C04E5A4EC9FC4D5A4D5A4D5AEF0FE04D5AEF
7F804DCAFC4C5A4C5A4C5A4C5A161F163FEEFFF803817F158303877F038F7F039F80EDBF
9FDBFF0F7F4B6C7F15FC4B6C7F4B6C7F4B7E4B8092C76C7E717EA2717F717FA2717F717F
8385717F727EA2727E727FA2727F727FA2727F8686496D824E6D7E017F01F04A14E0B700
F890B712C0A652787BF75B>107 D<EC1F800003B5FCB6FCA6C6FC131F7FA27FB3B3B3B3
B3A9497FA2017F13F8B712FCA626787BF72F>I<023FDA1FFEEE3FFC0003B591B500E04A
B512C0B6010702FC020F14F8041F6E023F8093283FE01FFF8090397FC03FFF93267F0003
6D9026FE00077FDB01FC6D9026E003F86D7FDB03F06D9026F007E06D7FC64A48027F4948
7F011F4A03F849816D49486E6C48C86C7E4BC8143E6D013E031F49153F033CDCFE788203
7C17F84B705A4B6F49151F8C4B5FA34B5FA44B94C9FCB3B3A6496D4B6D4B7EA2017F01F8
92B500F04AB512E0B7D8FC01B7D8F803B712F0A6844C7ACB8F>I<023FEC1FFE0003B591
B512E0B6010714FC041F80933A3FE01FFF8093267F00037FDB01FC6D7FDB03F06D7FC64A
48147F011F4A816D49486E7E4BC8FC6D013E151F033C82157C5D4B150F865DA35DA45DB3
B3A6496D4B7FA2017F01F892B512F0B7D8FC01B712F8A6554C7ACB60>I<EEFFE0031F13
FF037F14C00203B612F8020F9038803FFE913A1FFC0007FFDA7FF0010113C0DAFFC06D6C
7E49496E7ED907FEC8EA0FFC49486F7E49486F7E013F844A8149486F7F01FF844849707E
A24849707E4885A24890CA6C7EA24885A3481A804983A2007F1AC0A500FF1AE0AD007F1A
C0A46C6C4D1380A36C1A00A36C6D4C5AA26C616E167F6C616C6D4C5AA26C6D4B5B017F60
6D6C4B5B6D6C4B90C7FC6D6C4B5A6D6C4B5A6D6D4A5A6D6D4A5A9026007FF0903801FFC0
DA3FFC01075B91280FFF803FFEC8FC020390B512F8020015E0031F91C9FC030113F04B4F
7BCC56>I<DA1F80EB3FFC0003B50103B512C0B6010F14F8043F14FE933AFFE01FFF8092
2783FE000713E0DB87F801017FDB8FE06D6C7EC6DA9F806E7E011F01BFC86CB4FC6D01FE
6F7F4B6F7F6D5B4B6F7F4B6F7F4B83854B83747EA2747EA21C80861CC0A2861CE0A57413
F0AE5013E0A41CC062A21C80A2621C006263505A814F5B6F5F616F5F6F4B5B4F5B6F4B90
C7FC03BE4B5ADB9F804A5ADB8FC0ECFFF0DB87F001035BDB83FC010F5B922781FF807F90
C8FCDB807FB512FC041F14F0040714809326007FF8C9FC94CBFCB3A4497FA2017F13F8B7
12FCA6546D7BCB60>I<922601FFE0143E031F01FE147E92B67E020381020F9026E01FF0
13FE023F90380003F8DA7FFCEB00FCDAFFF0EC7E01010349141F4949EC0F834949EC07C3
4990C813E34948ED03E74948ED01F701FF17FF4A815A4849167FA24849163F5A5C48181F
5CA25AA291CAFC5AA4485AAE6C7EA47EA280A27E807EA26C6D163FA26C6D167F7E6E16FF
6C5F6D7E6D6C5D011F5E6D6CED0FDF6D6DEC1F9F6D6DEC3F1F6D6D14FE6D01F8EB01FCDA
3FFEEB0FF8913A1FFF807FE0020790B512C002011500DA003F13F8030313C092C9FCB3A4
4F7EA24EB512E00503B712F0A6546D7ACB5B>I<023FECFF800003B5010713F0B6011F7F
4C13FE9338FF83FF923801FC07922603F00F1380DB07E014C0C64B5A011FEB0F806DEB1F
00151E6D133E153C037C6D138003786D130003F86D5A4B6D5A94C8FCA25DA35DA65DB3B3
A2497F81017F13FCB87EA63A4C7CCB43>I<91260FFF8013E049B5EAF8030107ECFE0701
3FECFF8F90267FF80013DF2601FF80EB1FFF4848C71207D807F8140148488049157F4848
153F4848151FA2007F160F90C9FCA2481607A317037FA27F7FA213F86C6C92C7FC13FF14
E06C13FEECFFF06CECFF806C15F86C15FF6C16C06C16F06C826D81011F816D8101031680
D9007F15C0020715E0DA003F14F01501DB001F13F81603040013FC0078167F00F8163FEF
1FFE170F6C1607A21703A26C1601A37EA26D16FCA26D150318F87F17076D16F06DED0FE0
7F6DED1FC06DED7F80D99FC0903801FF00D90FF0EB07FE26FE07FEEB7FF8486CB65A48C6
15C048013F49C7FC48010313E0374F7ACC44>I<EC03E0A81407A5140FA4141FA2143FA3
147FA214FF5BA25B5B5B5B137F48B812E0120FB9FCA4D8000101E0C8FCB3B3187CB06D16
F881A3027FEC01F081143F6FEB03E0141F6E6CEB07C06E6CEB0F806E9038801F006EEBE0
7F6EEBFFFE033F13F8030F5B03011380366C7DE943>I<DA1F80163F0003B50307B5FCB6
4AB6FCA6C6EE0001011FEE003F6D83A26D83B3B3A661A461A36D5FA296B5FC816D5EDE03
EF7F6D17CF6F020780027FDB0F8F13F86E6CDA3F0FEBFFF86E6C147EDA0FFEEB01FC913A
07FFE00FF86E90B512E0020015C0031F0200ECFE00030101F002C0C7FC554E7ACB60>I<
B700F049B612F0A6C66C01FCC8001FEBFE00011F01F06F13F06D49030313C06D495F7390
C7FC6D606F5E7F62816D606F1503027F5FA26F1507023F5F6F150F021F5FA26F151F6E94
C8FC705C6E163EA270147E6E167C7014FC6E5EA27013016E5E82037F4A5AA2701307033F
5DA270130F031F5D70131F6F92C9FCA2715A6F143EEFC07E6F147CA2EFE0FC6F5C17F16F
5CA217FB047F5B17FF705BA3705BA27090CAFCA3705AA2705AA3705A705A544C7DC95B>
I<B7D8E03FB600E090B612F8A6C602F8C76C01F8C7000F1480013F01C0021F01C00203EB
FC006D496E496E13F06D70705B785A72607F6F6E71C7FC6D841E7E6F6E7F6D1C7C606F70
15FC6D4C5FA26F701401027F4B5F19DF6E6C704A5A180F078F15076E6C705D181F070715
0F6E6C705D183F70D93E03151F6E7291C8FC187E70D97C015D6E72133E18FC70496C6D13
7E6E1A7C4D48137F04F07013FC6E02035F4E133FDB7FF870485A17074E131FDB3FFC7048
5A170F4E010F1307DB1FFE04FE5B171F95C70007130FDB0FFF04FF5B5F05BE6E131F6F06
9FC9FC17FE4D6E13BF6F18FE4D80A26F604D157FA26F604D153F047F5FA24D151F043F5F
A24D150F041F5F70C96C5A754C7DC97C>I<007FB600F0010FB612E0A6D8003F02800103
ECF800010749C76C148001017049C7FC6D4916F8027FEE7FE06F4B5A023F5F6E6C93C8FC
6E6D5C6E4B5A705C6E6D495A6E6D495A6E150F6F6C495A705C6F6C49C9FC6F6C137E6F14
FEEF81FC6FEBC1F86FEBE3F06FEBE7E017FF6F5C705B7090CAFCA282707F82707F4C7F4C
7FA24C7F4C6C7E4C6C7E9338FE1FFF4C7EDB01F8804B486C7F03076D7F4C7EDB0FC0804B
486C7F033F6E7E4BC7123F037E814B6E7E4A486E7F0203814A486E7F020F834A486E7F02
3F6F7F027F8302FF167F010384010F94B5FC013F6D17C00003B56C020314F8B600FE021F
ECFFFCA6564A7EC95B>I<B700F049B612F0A6C66C01FCC8003FEBFE00011F01F0030F13
F06D49030313C06D495F7390C7FC6D6D5E627F6F5E7F626F1503027F5F6F1507023F5FA2
6F150F021F5F6F151F6E94C8FCA2705C6E163E70147E6E167C8219FC6E5E7013016E5E70
1303037F5DA2701307033F5D70130F031F5DA270131F6F92C9FC715A6F143EA2EFC07E6F
147CEFE0FC6F5CA217F16F5C17FB047F5BA217FF705BA2705BA37090CAFCA2705AA3705A
A2705AA25FA216035F16075FA2160F5F161F94CBFCA25ED807C0143ED81FF0147E486C14
7C487E16FC486C5C15015E4B5A1507495C007F4A5A49131F4949CCFCD83FC0137E6C485B
9038C003F8390FF80FF00003B55A6C14806C6C48CDFCEB0FF0546D7DC95B>I<000FB912
FC19FEA302FCC813FC02C05C49C814F848484B13F0494B13E0495D4917C0494B13805F49
4B1300604D5A90C85A604C5B4C5B5E485F003E4B5B5E4C90C7FC5F4C5A5DC85C4B5B4B5B
5D5F4B5B5D4B90C8FC5E4B5A5C4A5B5E4A5B4A161F5E4A5B4A90C8FC5C4B153E4A5A5B49
5B5D495B5B4B157E495B4990C9FC4917FE4A16FC495A481701485B4A1503485B4817074A
150F4849153F4890C912FF48160349033F13F8BAFCA37E404A7BC94D>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmbx12 29.8656 35
/Fk 35 123 df[<F001FE18034E7E181F6095B5FC5F1707171F94B6FC1603161F4BB7FC
151F0203B8FC0107B9FCBBFCA616EFEDFE0F15E0ECFC0001F8C7FCC9FCB3B3B3B3B3B3B1
003FBE12C0AA0480C8121F>98 163 107 290 139 49 D[<52B4FC0A077F527FA2646464
A299B5FC6363A263636363A26398B6FC62A262626262A2626297B7FCA2616161A26161F1
3FFDF17FF91AF119FF4E13E14E13C11A814E130160F01FFE19FCF03FF8187FF0FFF04D13
E019C05F4D13804D1300604D5A173F4D5A4D5A605E4C5B4C5B95C7FC4C5A161F4C5A5F4C
5A16FF4B5B4B5B5F5D4B90C8FC4B5A5E4B5A157F4B5A5E4A5B5C4A5B4A90C9FC5D141F4A
5A4A5A5D4A5A5B495B495B92CAFC5B495A495A5C495A13FF485B5C485B5A4890CBFC485A
5B123F485A485A90C112C0ABCD000703C0C8FCB3AB053FBC12C0AA08F8C87E>122
163 120 290 139 52 D[<F51FF8F57FFEA29AB5FCA25280A25280A35280A25280A35280
A25280A35280A299B7FCA35182A25182A35182A25182A35182A25182A35182A298B9FC1C
FB1CF350841CF15001E1821CE064506E81A250018082891C00506E81A250488389504883
89A2504883894F498489A24F4984894F49848AA24F49848A4F90C8828AA24F48858A4F48
858AA24F48858A4E49868AA24E49868A4E49868BA24E49868B4E90CA828B61063F888B4E
48878B6106FF7281A24D49888B614D7382A24D49888C4D49888C96BEFC4D8AA24D8AA34D
8AA294C1FCA34C01F0CC0003828C4C498A8CA24C498A8D4C498A8DA24C90CE828D4C488B
8DA24C488B8D4C488B8DA24B498C8D4B498C8D5F4B8E8E4B498C8E94D0FC4B7881A24B48
8D8E5E037F78814AB5FC91B600FE8CBA00F04DBDFCAA9126C000010CC0C71201>192
173 119 300 211 65 D[<0A03B500E0F00F800907B76CEF1FC098B800F8173F081F05FF
177F4FBA00E016FF070F07FC5D077F07FF5D0603BC00C05C060F09F05C063F09FC5C4DBE
5C05079426FC00036F90B5FC4D4CC8001FECE001053F04C003016E5A94B700FCCA003FEB
FC07040304E0050F6D5A4C93CB00036D5A041F03FC060014BF4C03F0073F90B6FC4C03C0
190F4BB7CD7E4B03FC864B4B1A004B03E0874B4B87037F4B8792B7CF7E4A03FC884A4B88
4E884A4B884A8D4A5D4A4B894A92D17E4D8A91B6FC494B8A495DA17E494B8AA2494B8A5B
4D8B5B5F498FA290B7D37EA25A4C8CA25A5E48A17EA35A5EA17F5AA35E48A16C1380A190
C8FCA45AA35EA4B7FCB3A27EA482A37EA57E82A1ECFF80A14913C07EA2827EA36C81A26C
A15AA11580827EA26D6F67A115007F71676DA15A836D231F6D6F68A1133F6D8171555A7F
6D6F555A6E6971686E6F535B6E6F656E6F676E6F656E5790C7FC72535A6E03FE535A6E6F
1DFF6F6F515B031F6F515B6F03F0090F5B6F6F515B6F03FE515B6F6F98B5C8FC6F6C03C0
4F5B7003F007075B7003FC071F5B0407DBFF80067F13E07004E04DB55A040004FC050F5C
053FDBFFC0047F49C9FC050F04FE0307B55A71DCFFFC49B612F0050194B95ADD003F1C80
060F51CAFC06031BF8DE007F1AC0070F97CBFC070119F8DF001F18C008004DCCFC090716
C0E1000302F0CDFC>170 176 113 300 201 67 D[<C51280A4A112C0A7C8003F03E0C9
1201F60003E5003F15E0200720017A7E211F21078D8D7B14F08E8E8E8EA28EA28EA112F8
8EA28EA2237FA3A112FC233FA4231FA3A112FEA2230FA2F67FF0A5FB07FFA4A0C7FCA21E
FFA565A365A2656565656552B5FC1C0F99B6FC96B9FCAB07E0C7FC1C0F1C01767E898989
8989A289A389A51E7FAB9BCCFCB3B3A3BE12F0AA03E0C8120F>152
169 118 296 175 70 D[<B600F0031FB512FE92BAFCAAC8001F03F0C8FCB3B3B3B3B3B3
B3B3A4BD12FEAA03F0C8121F>87 170 120 297 104 73 D[<BA00E09EBA12F073687368
7368A37368A27368A27467C8003FA105C0C8FC74F77FEFA304FD6FF7FFCFA204FC6F5413
8FA2716E54130FA2716EF607FEA3716EF60FFCA2716EF61FF8A2716FF53FF0A2716FF57F
E0A3716FF5FFC0A2716F521380A2726E521300A2726E525AA3726E525AA2726E525AA272
6F515AA2726F515AA3726F515AA2726F505BA2736E5090C7FCA2736E505AA3736E505AA2
736E505AA2736F4F5AA2736F4F5AA3736F4F5AA2736F4E5BA2746E4E90C8FCA2746E4E5A
A3746E4E5AA2746E4E5AA2746F4D5AA2746F4D5AA3746F4D5AA2746F4C5BA2756E4C90C9
FCA2756E4C5AA3756E4C5AA2756E4C5AA2756F4B5AA2756F4B5AA3756F4B5AA2756F4A5B
A2766E4A90CAFCA2766E4A5AA3766E4A5AA2766E4A5AA2766F495AA2766F495AA3766F49
5AA2766F485BA2776E4890CBFCA2776E485AA3776E485AA2776E485AA277EDBFF0A277ED
FFE0A3775EA2775EA27892CCFCA2785CA3785CA2785CA2785CA2785C92B5FC027F14FEBB
704A043FBC12F0A2785CA27990CAFCA2795AA2795AA202F0C7000FDF07F008F0C8123F>
244 170 118 297 265 77 D[<BA00F80807B56C91387FFFF8739AB8FCA285858686A286
8686C8003F7096C7000303F0C7FCA1D8000701F8C8FC740A0113E086878787A28704FD82
04FC82878371817182718271828883718271827281888472827282728272828984728273
8173818A857382738273828A7382857481748174828B867482748274828B867581758175
8275828C877582758275828C8876817682768276828D887682768277818D897782778277
828E7782897782788178818F8A7882788278828F8A788279817981791680A112C08B7916
E07916F07916F8A112FC8B7A15FE7A15FF7A16817A16C1A113E18C7A16F17A16F97A16FD
A190B5FC8D8D8D8D8DA28D8D8D8EA28E8E8E8EA28E8E8E8F8FA28F8F8F8FA28F8FA17EA1
7EA17EA2A17EA17EA17E92B58B027F14FEBB88A17FA17FA17FA17FA2A17FA17FA17FA16D
5B02F0C7120F>197 170 118 297 218 I[<0903B512F050B712E0087FEEFF800707B912
F8073F18FF4EBB12E0060F1AFC063F1AFF4DBD12E00507DCC00016F8051F03F0C7000315
FE057F0380DA007F6E7E94B600FCC9000F81040303F0040315F0040F0380DC007F14FC4C
92CB6C80047F02FC060F6E7E93B600F00603814B4B728103074B7215F84B92CD003F804B
4A74804B4A74804B4A748192B64874814A4B74814A4B74814A4B75804A8E4A92CF6C804D
884A8E4A4A768191B6487681A2494B768149A17E4D8849A17E494B7681A2494B7780A249
A17E94D17E49A17FA290B6487881A248A1804C8AA248A180A3484B7881A348A180A24C8A
48A180A448A180A44C8AA248A11580A7B7A112C0B3A36CA11580A37066A56CA11500A470
666CA15CA46CA15CA270666CA15CA36C6F545DA36CA15C70666CA15CA271656DA15BA26D
6F9AB7C7FCA26D6F525DA26DA15A6D6F525DA26D6F525D6DA15A71646D6F525D6E6B7164
6EA0C8FC6E6F515C6E6F98B65A6E6F505D6E6A6E6F505D6E6F505D6F6E505D6F6E5092C9
FC6F6E505C6F6F4F5C6F03E04EB65A6F6F4E5D03006F4E15C07002FE061F5D706E6C057F
92CAFC040F6F94B612FC7003F004035D040103FE041F15E0706CDAFFC092B71280051F03
F802074BCBFC0507DBFFC090B712F8050193B912E0716C1B80060F08FCCCFC06031AF0DE
003F96CDFC070718F8DF007F1780080304F0CEFCE0000302F0CFFC>178
176 113 300 209 I[<C012FCF7FFFCF8FFE021FEF9FFC022F822FEFAFFC023F08F23FE
C8003F03C0C90007707EE4001F820D0116F0E5003F810E0F810E03817A817A6C817B817B
817B817B818DA17F7B81A27B81A2A114808EA114C0A3A114E0A28EA114F0A5A114F8ACA1
14F0A5A114E06AA2A114C0A2A11480A29FB71200A2A15B69A15B575D69A15B575D575D57
5D5792C7FC56B65A565D0E0F5D0E3F15E055B75A0D1F93C8FC0C07B75A96BD12F823E023
8058C9FC22F022800FF8CAFC21800EE0CBFC07E0D2FCB3B3B3ABBD12F8AA03E0C8123F>
165 170 118 297 191 I[<0507B5EF03E04CB600FC4C7E041FDBFFC0150F93B800F815
1F030305FF153F031F06C0147F037F06F014FF4ABA00FC5B4A07FF5B020FF2C0074ADB00
0315E0027F02E0D9000FECF80F91B6C96E5A4902F8041F6D5A4902E004036D5A494A0400
91B5FC4991CB123F494984494918074B844949180090B5864B85484A8548884B854888A2
4891CD7E894889A24A875A8AA28A5A8AA38AB6FCA28AA281A26F86A281A2816F1B7F8181
816C8104E0745A7097C8FC16FC6C15FF17C017FC6CEEFFC018FEF0FFE06C18FF1AF06CF1
FF801BFC6CF2FFC01CFC6CF3FF806C1CE01DF86D1BFE6D757E1EE06D886D1CFC6D886D88
6D1DC06D896E886E88020F886E8814016E88033F88030F880303881500043F87040787EE
007F050386EF003F060185F0001F0700841A0FE0007F17801B07F3007F0A1F16C01C071C
01880B3F15E0898989897715F0EA3FC0486C8700FF89A28AA28AA38A7FA38A21E07FA47F
21C07FA27F54148080A26E1E006E6368806E515B806E515B806F97B55A15E06F4F5C03FC
4F5C6F4F5C6F6C6004E04E91C7FC04FC067F5B04FF95B55A05F004035C02C702FE040F5C
0283DAFFF0037F5C0200DBFFE0010FB65A496D92B9C8FC031F624901071AF84901016249
6D6C19C049020F96C9FC49020318FC49DA003F17E090C9000394CAFC48DC001F15F0007C
DD003F01FCCBFC>124 176 113 300 155 83 D<94B6FC93B712FE031FEEFFE092B912FE
0203727E020F19F0023F19FC91BCFC499226C0001F814902E0C7000115E0494A6E6C8049
6E031F14FC70030780497280706F81496E6F817580498570857580878A8A878AA26D4A82
8BA26D5C876D4A866D5C6D5C6D5C6D6C48CAFCEC1FF891CCFCAA98B7FC073FB8FC063FB9
FC050FBAFC94BBFC160F93BCFC03071781031FEE800192B7EAF000020393C7FC020F15F0
023F158091B648C8FC4915F8010715E0491580494AC9FC495C495C90B65A485D485D485D
5A93CAFC485CA2485CA2485CA4B65AA363A463A26F5F7E63816CF23FBF6F177F6C6EDDFF
3F80F201FE6C6FDB03FC15F86C6F030F16FE6C03F0DB1FF8EDFFE06C6FDB7FF0EEFFFC6C
03FE4A48487E6D6E6C010F496C16FE6DDBF801B51280010F92B648487E01034E7F010006
F07F023F05C06D7E020794C8121F020004FC030315FC030703E0ED003FDB000F01FCCEFC
7F7178EF88>97 D[<EEFFE0011FB6FCB8FCABEA001F13017FA280B3B3A850B5FC087F14
FC0707B712C0071F16F896B9FC060318C0060F18F0063F18FC95B526FE003F14FF05E102
C0010315C005E749C86C8005EF01F0031F8094B500C0030714FC96C96C8006FC0400804E
71804E718006C071804E8695CB6C804D72805F4D728078805F8E7881A28E8B8EA28E8BA2
8EA38EA28BA28EA52380B12300A66A67A26AA36AA2676AA26A9CB6FC6AA2545DA2714E92
C7FC69714E5C83545C714E5C724D5C7262724D5C06F84CB6C8FC4C6C6C4C5C4C6C6C4C5C
716C6C031F5C4C6C01E0037F14E04C6C01F84AB65ADCE00101FF020F92C9FC4C6CDAF001
B65A4C013F90B812F87218E093C7000795CAFC4B020117FC4B6E6C16E04B030F93CBFC4B
030115F091CB000F01F8CCFC>137 173 120 299 155 I<061FB57E0507B7FC94B812F8
040717FF043F18C093BA12F0030319FC030F85033F737E92B648C7814A03E00203804A92
C84880020F02FC5D4A4A844A02E05D4A4A4B8091B65A4992C9FC494A4C80495C5B495C5E
5B495CA290B648705C5A5E48745CA248745C93CA6C5C48745C755C756C48C7FC484AF01F
F899C9FCA25AA4485CA5B6FCB17EA381A37EA46C80A37E827EF6FF806C6F4E13C0A27E70
606C1E8070606D1D006D6E6070616D1B1F6D6E4E5A6D806D6F4D5A6D6F4D5A6D6F5E6E6E
04075B6E02FC4C5B6E6E043F5B6E6E6C4B90C7FC6E03E0913803FFFE020103FC021F5B6E
9226FFE001B512F0033F92B75A030F61030396C8FC030018FC043F17F00407178004004C
C9FC050F15E0DD001F01F8CAFC6A7177EF7C>I[<F707FF9AB7FC0907B8FCAB98C7FC1D0F
89A289B3B3A895380FFFF80507B612C0057F15FC0403B8FC041F17E093B912F8030318FE
030F18FF033FDBC00714C34B02F8C7003F13E34AB600C0020713FB4A92C8000190B7FC02
0F02FC6F7E4A02F0161F4A4A824A02808291B6CA1201494A834987494A84494A84494A84
A2494A845B90B65AA2485DA25A93CCFC5AA25A5DA25AA35AA25D5AA6B6FCB17EA57EA281
A27EA37EA2817EA27E827EA26C6F607F656D6E606D6E60A26D6E95B7FC6D6E5F6D1A076D
6E5F6D6E4D826E6E5E6E02E093B87E6E6E030317FC020702FC030F01F792B512806E02FF
033F13C7020003E049B512876F02FE013FEBFE07031F91B712FC030718F0030118C06F6C
1700040F16FC040116E0DC001F4AC7FCDD007F01C005E0C8FC>137
173 119 299 155 I<95383FFFF0050FB612C04CB712FC040FEEFF80047F17F04BB912FC
030718FF031F19C0037FDAFC00814AB600C0010F14F84A92C70003804A02FC020080021F
02F06F7F4A4A031F804A02806F8091B6C96C80494A7080494A82494A85497380494A838A
494A8349884C1A8090B684485D7614C05A93CB15E05A88481EF05DA248871FF8A25AA35D
5A7614FCA4B6FCA392BDFCA51FF8A203FCCFFCA87EA481A27EA37EA2817EA36C6FF10FF8
A26CF51FFC826C1D3F7E70F17FF87F70F1FFF07F6D6E4E13E06D6E60704E13C06D511380
6D6E606D03C04D13006D6F4D5A6E6E4C485A6E02FC4C5B6E6E040F5B02076E6C033F5B6E
03F092B55A6E03FE02075C6E6CDAFFF090B6C7FC031F92B712FC030761030119E06F6C18
80040F05FCC8FC040117F0DC003F1680050303F8C9FCDD000749CAFC6E7178EF7F>I[<96
381FFFE0060FB512FE95B712C0050716F0053F8294B812FE040383040F1880043FDAFC00
14C04CDAE00114E04BB6C64814F04B02FC5B4B4A4914F84B14E04B4A4914FC5D4B4A16FE
92B6C75A5F5C4A5CA24A5CA25C4D6E14FCA24A7114F8A27414F04A4A6E14E07414C07414
80751300F30FF898C8FCB3AABCFCABC7003F02F0CBFCB3B3B3B3B0007FBA7EAA02F0C712
1F>95 173 119 300 85 I<F77FF09B3807FFFC94261FFFFE043F13FF0407B600F892B6
1280047FDBFF80010315C00303B800F0010F15E0030F05FC133F033F05FF4915F092BA00
C0B500CF13F8020307F3EBF81F020FDB003F91B5EAC03F4A02F00103040014FC4A02C001
0015F84A91C8003F5C49B500FC030F4A5B494A6F6E7F494A6F80A2494A6F6E15F849757F
494A6F6E15F08B494A706E6C13E079138090B69739C000FE009DC7FC488993CA7EA24889
A44889AB6C65A46C65A2705E6C65A26D64A26D6E93B6C9FCA26D6E4B5C6D636D6E4B5CA2
6D6E4B5C6D6E4B5C6D6C01FF033F14806E02C091B6CAFC05F001035C4A02FF013F5C91BB
12F0494819C0033F95CBFC902603FC0F17FC030317F04948C66C1680040703F8CCFC010F
DA001F49CDFC94D0FC131FA3133FA380A38080A2818115F081EDFF8093B812FEF3FFFE6D
F2FFF01DFF1EC06D1CF81EFE6D767E1FE06D891FFC6D896D896E898C6E8980020789023F
8949BFFC01078A131F498A90B6CA12074802F8DD0007814802E0F0007F480280190F4891
CD000115804849864A1B3F48894A874820C08AA2B55A8AA76C6D511480A36C6D511400A2
6C6D515B6E636C6E505BA26C02E04FB55A6C6E4F5C6C6E4F5C6C02FE071F5C6D6D6C067F
5C6D02E04DB6C7FC010F02F8050714FC6D02FF053F5C010103F80307B612E06D6CDAFFE0
49B71280021F92B948C8FC02071BF802011BE0DA003F97C9FC030719F8DB007F18800401
05E0CAFCDC000103E0CBFC7EA378F08B>I[<EEFFE0011FB6FCB8FCABEA001F13017FA280
B3B3A898380FFFF850B612E0080F15FC083F15FF4FB812C04F17F0070F83073F17FE4FD9
E00F809627FFFC000181060301E06D814E01806E804E48C87EDE1FF86F804E48844E4881
0780844EC9FCDDE1FE82DDE3FC8560EFE7F005EF8660DDFFC082A2608D95CAFCA25FA25F
A35FA55FB3B3B3A6BA00F80107BA12C0AA02F0C76C9538800003>138
172 118 299 155 I[<EC01FE91380FFFC0023F13F091B512FC4980498049814981A249
81A24981A24981AA6D5DA26D5DA26D5DA26D5D6D92C8FC6D5C6D5C023F13F0020F13C0DA
01FEC9FC91CBFCB3A8EEFFE0011FB6FC007FB7FCABEA000F13017FA280B3B3B3B3ABBA12
C0AA02E0C7FC>58 173 118 300 77 I[<EEFFE0011FB6FCB8FCABEA000F13017FA280B3
B3A999B500E0EB0FFE9BB6FCAA0A0703E0C7FC0A0002F8C8FC7713E09AB55A5291C9FC52
5B0A0F5B525B525B5213C051B55A5191CAFC515B5113F8515B097F5B98B55A505C5049CB
FC080F5B505B505B5013C04FB55A4F91CCFC4F5B4F13F84F5B077F5B96B55A604E80060F
80604E804E8095B67E05E38117E705EF8294B87E88A2888806FD8118F84E6C804E6C8006
80824E7E4D6D814D6D8105F06D814D834D7F738174808986748174818A86748174818A86
7580758075818B87758175818B87758176808B88768176817681A276818C0A0F15FFBA00
E00103B912F8AA02E0C79638C00003>133 172 120 299 147 107
D[<EEFFE0011FB6FCB8FCABEA000F13017FA280B3B3B3B3B3B3B3B2BA12F0AA02E0C77E>
60 172 118 299 77 I<922601FFC092260FFFF896387FFFC0013FB64BB600E0050FB6FC
B8030F03FC057F15E0083F03FF4CB712F84FB800C0030F16FE4F05F04B707E070F71037F
83073F05FE4AB912F04FD9E00F6E4ADA007F809627FFFC00016F4901E0010F80060301E0
6D6F011F90C76C804E01806E6ED93FFC6E804E48C86CDC7FF080D8000FDC1FF86F6ED9FF
C06E8101014C48724849846D4C486F4B90C97E078006FC01FC856E4BC94C5ADDC1FE704B
4882DDC3FC734848854E63DDC7F0505A05CFE0FF7F864E98CAFCDDDFC07003FE83A2DDFF
8062A18495CA5EA24D63A24D63A34D63A54D63B3B3B3A6BA00F80107BA00C0013FB912FE
AA02F0C76C952680000306FCC7121FD76F76EEE8>I<922601FFC092380FFFF8013FB64B
B612E0B8030F15FC083F15FF4FB812C04F17F0070F83073F17FE4FD9E00F809627FFFC00
0181060301E06D814E01806E804E48C87ED8000FDC1FF86F8001014C48846D4C48810780
846E4BC9FCDDC1FE82DDC3FC8560EFC7F005CF8660DDDFC082A2EFFF808D95CAFCA25FA2
5FA35FA55FB3B3B3A6BA00F80107BA12C0AA02F0C76C95388000038A6F76EE9B>I<9538
0FFFFC0507B612F8057FEDFF800403B812F0041F17FE93BA12C0030319F0030F19FC033F
9126FE001F14FF4B02E00101814AB6C8003F14E04A02FC030F80020F02F0030314FC4A02
C00300804A4A707F4A91CA6C8091B5487180494A7180494A7180494A7180494A71804989
4C834989494A7280A290B68893CC7E488B488BA2484A7380A3488BA2488BA24B85A2488B
A4482080A6B61EC0B06C2080A56C20006F61A36C67A36C67A26F616C67A26C6770606C67
A26C6F95B65A6D66705F6D9BC7FC6D6E4D5CA26D6E4D5C6D6E4D5C6D6E4D5C6D6E4D5C6D
6F4C5C6E6E93B65A6E02F0030392C8FC020F02FC030F14FC6E02FF033F5C6E03E049B65A
020003FE011F15C0033F91B9C9FC6F61030719F8030019C0043F95CAFC040717F8DC007F
1680050703F8CBFCDD000F01FCCCFC7A7178EF8B>I<DCFFE092B57E011FB6033F14FEB8
0203B712E0071F16FC077F16FF0603B912E0060F18F8063F18FE4E8405E1B526FC007F15
C005E302C001078105EF01FCC815F894B500F06F80D8000F05C0031F80010194C96C806D
04FC0403814E70816E03E070814E864E718095CB6C804D72805F4D72804D888A8E8A8E8A
8EA27881A37980A38E8BA38EA48B2380B12300A267A46AA2676AA36A9CB6FCA26A666AA2
545DA2545DA25492C7FC7163714E5C716069714E5C7294B65A724C5D724C5D724C92C8FC
06FC4C5C724C5C726C037F5C07E04AB612E005F701F802075D05F101FF021F92C9FC05F0
DAF001B65A063F90B812F87218E006071880060105FCCAFC726C16E0070F93CBFC070115
F0DF000F01F8CCFC97CFFCB3B2BA12F8AA02F0C77E899F78EE9B>I<95261FFFF0EE03FF
0507B65E057F03E05D0407B712FC041F04FF5D93B912C00303725C030F06F85C033F844B
DBC00F01FF91B5FC4AB600FCC76E5A4A03E0021F13C0020F038002076D5A4A92C8000113
F04A02FC6F6D5A4A4A706C5A91B648EE1FFE4903C0706C5A49745B494B18BF4992CA6C90
B6FC494A83494A83A2494A8490B6855E48885E48885E4888A2485D895A93CCFCA25AA25D
A25AA55DB6FCB07EA281A47EA3817EA36C81A27EA2826C64A26C6F60A26C6F606D63826D
636D6E95B7FC6D6E5F646D6E5F6D6F5E6D6F5E6D6F5E6E6E5E6E6E923801FFF76E6E0307
13E7020702FF4B13C76E03C0027F1387020003F00103B512076F02FF013F13FC031F92B6
12F8030718E0030118806F6CEEFE00040F16F8040116C0DC001F4AC7FCDD007F13C095CA
FCB3B2090FBA1280AA9BC71207899F77EE93>I<4BB46CEC3FFC013FB64AB512C0B80207
14F8071F14FE077F6E7E4EB77E4E16F04E824ED9E03F7F4EEB007FDE3FFC90B57E95267F
F0018019C0D8000F4C484815800101038113006D4C4915C0EF83FC6EEC87F8A2EF8FF060
179F60A2DDBF806D1580A205FFC76C1500A2745C4D6F5B755B755B4D030713C0090190C7
FC98C9FC5FA55FA65FB3B3B2BBFCAA02E0C7123F626F78EE72>I<93263FFFFCEC03E003
1FB600E0EB0FF092B700FE133F02079338FF807F023FEFE1FF91BBFC1303499138F0000F
011F01FCC8FC4901E0151F49018015034948C97E4849707E4849834849834A8348855C48
854A835AA24885A4B56C187FA3808080806E725A6E6C94C8FC15E015FCEDFF806C15F8EE
FFE0EFFF806C17FCF0FFE06C18FCF1FF806C19F01AFC6C19FF6C866C1AE06C866D19FC6D
856D856D860103866D866D6C85021F851407020185DA003F841507DB007F831601DC000F
1780EF003F1801DE001F15C019071901736C14E0D83FC0181F486C8400FF85866D8486A2
877FA2877F1DC07FA27F1D8080636E1A00806E4E5AA26E616E5F6E4D5B6E6C4C5B6F5E6F
4C5B03F8047F5B03FF4BB55A04E0021F91C7FC02BF01FE0103B512FC021F90B85AD9FE07
18E0D9F8036049C695C8FC01C0013F16F849010716C090C84BC9FC007C030791CAFC5B71
77EF6E>I[<EE0FFEA9161FA6163FA4167FA316FFA35DA25DA25DA25DA25DA25D5D92B5FC
A25C5C5C5C5C147F91B6FC1303010F92B812C0137F0003BCFCBDFCA8C7000F4ACAFCB3B3
B3F30FFEB3A21B1F6E19FC83A21B3F6E19F8846EF07FF0A26E6FECFFE0A26F6E4913C06F
6E5B724913806F02FE011F13006F9139FFC07FFE6F92B55A6F5F03005F705E041F5E0407
93C7FC040015FC051F14F0DD007F1380>87 158 123 284 108 I<DC7FF0963803FF8001
1FB695B7FCB80407B8FCABD8000F96C77E01011B0F6D87A26E86B3B3B3A765A465A365A2
658065A29AB7FC6E617117FD6E1903F407F96EDF0FF18171EE1FE16E073F8271DCFFC115
FE6E6E4B018192B512C06E6F020713016F02F0EC3FFE6F02FF903803FFFC030F92B612F8
6F18E0030118C06F6C1700041F16FC040316F0DC003F1580050002F8C703F8C8FC8A7076
EE9B>I<B56C0103B56C922607FFF0EB3FFC91B895B6FCAAC703F0CB000FECE000710600
49C7FC6EF47FF8836E525A836E515BA271606E65846E515B846E5190C8FC846E515AA26E
6F4D5AA272177F6F63846F505A846F4F5B846F4F5BA26F6F4B5BA2735D6F98C9FC856F4F
5A856F4F5A85704E5AA2706E4B5AA2735C706185704D5B86704D5B86704D90CAFCA2706F
495AA274133F706086714C5A86714C5A86714B5BA2716E485BA21B837103875B1BC77103
CF90CBFC1BEF71EDFFFEA2715EA3725DA2725DA2725DA2725DA2725DA37292CCFCA2725C
A2725CA2735BA2735BA3735BA2735B735B7390CDFC866F7AED93>I<B56C0107B5278007
FFF049B500C091261FFFE0EB3FFC91B892B894B6FCAAD8000103E0C9000F02F0CA000FEC
F0006D6F9C26007FFEC7FC766E725A6EA15A7173187F886E6E565A76806EA15A71735F88
6E6E555B77806EA15A72735E9AB6FC6E6F5490C8FC8C6E4F637273161F646E6F545A8C64
6F6E734C5A646F6E545A8C646F6E734B5BF43FFC6F565B724C6C801C7F6F6F734A5B5248
7E6F9FC9FC734B6C6E5C636F6F525A51496C806F69734B6C6E143F63706E525A51496C80
7068734A6D6E14FF1B1F706E515B51486D807068734A6E6E5A1B7F700380505B51486E14
C0709DCAFC74735A08C149807003E1505A08E3496E14F0706708F3F1F83F08F749807191
B54F5A99C86C14FC7166FAFEFF51817199B55A51817166A2518271665182A2719BCBFC51
8271655182A271655182726498CA7EA27264508372645083A27264508472645084A27299
CCFC7249725A720180F007FCBE6F7BEDC9>I<267FFFC049B500C0922603FFF8EB1FFE91
B895B6FCAAC76C02F8CB0007ECF00071DE007F90C7FC6EF43FFC836E525A836E525A846E
515BA2725F6E65846E515B846E5190C8FC846F505A846F505AA26F6E4D5AA27217FF6F63
856F4F5B856F4F5B856F4F5B856F4F90C9FCA2735D706185704E5A85704E5A85704E5A86
704D5BA2745B706186704D5B86704D90CAFC86714C5A86714C5AA2716E495AA27413FF71
5F877103815B1BC17103C35B1BE37103E75B1BF77192B5CBFCA3725DA2725DA2725DA272
5DA2725DA3725DA2725DA27292CCFCA2735BA2735BA2735BA3735BA2735BA2735BA24F5B
A24F90CDFCA26162A24F5AA24F5AA24F5AEB7FE02601FFF84B5B000713FE486D5D486E5E
486E5C6248804E90CEFCA2B66C4A5A183F614E5AA24E5A4D5B5F6C4A495B4D5B4D90CFFC
6C4A5B4B495A6C91C7485A4A01035B6C01BC010F5B6C01F0013F13C0DAFC01B55A6C90B7
D0FC6C16FC6C6C5D6D15E0010F158001034AD1FC010014F0020F90D2FC879F7BED93>
121 D<48BE12F81EFC1EFEA5481DFC94C8120304C04B15F84BC916F003F84C15E003E05E
4B4C15C092CA16804A4D15004A94B7FC654A4C5D4A4C5D614849624F5D4A4C5D61654A4C
92C7FC96B65A6091C95E4E5D4E5D60644E5D484D5D495E99C8FC95B65A4D5D5F63CA485D
4D5D5F634D5D4D92C9FC94B7FC624C5D4C5D5E624C5D5E4C5D624C92CAFC93B7FC614B4B
ED0FFE4B5D5D614B5D4B5D4BF11FFC614B92C9FC92B65A5C604A5D4A4B163F5C604A5D4A
5D4AF27FF895CAFC91B65A494B17FF5B5F494B5E495D49625F494B5E4992CA5A90B75F4C
19F0484B177F484B94B5FC48624C1607484B161F481A7F484B0307B6FC4C4AB7FC4892BB
FCBFFCA21EE0A47E7E676E78ED7C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmbx10 20.74 24
/Fl 24 122 df<EB7F803801FFF000077F487F487F487F15804814C0A215E0B6FCA215F0
A315F8A27EA37EA27E7E6C13FD000113F138007FC1EB000315F0A4140715E0A2140F15C0
A2141F1580143F15005C147E14FE495AA2495A495A130F495A495A495A49C7FC5A485A48
5A13F06C5A6C5A1D3C729A37>44 D<92387FFFF0020FB612C091B712FC010316FF010F17
E0013F8390B5D8C00114FC4801FCC7003F7F4801E0020F7F480180020314804848C815C0
001F7014E06D7E486D17F06E80486D17F880B518FC80A76C5B1AF85F6C5B6C4917F06C49
5C000390C815E0D800FC5D90C94814C01A804D14004D5B4D5B94B512F04C14C0614C49C7
FC4C5B18F04C5B4C5B604C90C8FC5F4C5A5F4C5A5F5F5D5F94C9FC5D5EA34B5AA35EAF5E
6F5A92CBFCADED07F0ED1FFCED7FFF92B57E4A804A804A80A24A80A24A80A76E5CA26E5C
A26E5C6E5C6E5C6F90C9FCED1FFCED07F0467975F85D>63 D<96261FFFF8161E060FB600
C0153F4DB700FC15FF051FDCFF805B94B900E05B040306F85B041F06FE5B047F726C5A4B
B7D88001ECC07F030703F0C7001F01F0B5FC4B92C8000313F9033F02F8030090B6FC92B6
00C0163F4A92CA120F4A4A1703020F02F8834A02E0834A4A183F4A4A8491B6CC7E494A85
495C494A854C85494A855B494A868B495C90B6CE7EA2488A5D5A4B875AA2488A5DA25A8B
5D5AA2F700FE20005AA25DA4B6FCB07EA481A27EA3207E6C1FFF81A27EA2817E676C1FFE
817E6F1B036C1FFCA26D6E1A076D6E1BF81F0F6D6EF21FF06D806DF53FE0701A7F6D6EF2
FFC06D6E1B806D6E616E6E4E13006E6EF00FFE6E02F04E5A6E6E4E5A020302FEF0FFF06E
6E4D5B6E03C004075B033F02F8043F5B030F02FFDCFFFEC7FC6F03F0020F5B03019226FF
8001B512F06F6C92B75A041F198004034EC8FC040018F8051F17C005014CC9FCDD000F15
E0DE001F01FCCAFC787A75F78F>67 D<C01280A41FC0A4C7001F02F0C81207F3003F1C07
1C007713E01D1F8989898989A21E7F1FF01E3FA21E1FA31E0FA21FF8A21E07A3F203FCA3
F603FCA49BC7FCA21A07A31A0FA21A1FA21A3F1AFF1903191F94B7FCA89438F0001F1903
19001A3F1A1FA21A0FA21A07A31A03A997CBFCB3A9BB12E0A86E757AF47D>70
D<BA00FE49BA12FCA8C7001F02F0CB003F02E0C7FCB3B3A994BDFCA805F0CB123FB3B3AD
BA00FE49BA12FCA88E767AF59B>72 D<BA12FEA8C7001F02F0C7FCB3B3B3B3B3ACBA12FE
A83F767AF54B>I<BB12E0A8C7001F02F0CCFCB3B3B3A91EFFA4651EFEA51D03A41EFC1D
07A31D0FA21D1FA3F53FF81D7FA21DFF64A26464641C3F5213F051B5FC631B1F98B6FC1A
0FBFFCA31EE0A568767AF577>76 D<BDFC1CFCF4FFC01DFC1DFF1EC01EF01EFCC7001F02
E0C86C8009076E7E0900810A3F800A0F807680768076808B8820808920C0A220E08920F0
A420F8AB20F0A320E0A26520C0A220809AB6FC2000525C6764525C0A1F5C5214C099B65A
090792C7FC98B612FC94BA5A1EE09BC8FC1DFC1DE052C9FC99CAFC05F0CEFCB3B3A8BA12
FEA875767AF587>80 D<000FC012FEA5488BA303F8C76C9138C0000392C8EF001F02FC1B
0702F01B0102C0757E4A8891C985484877138049894989A24989A24989A4491E7F007F20
C0A3491E3FA748CAF21FE0A5CB97C7FCB3B3B3AD4ABC12F0A87B7479F38A>84
D<BA00FE030FB812E0A8C7001F02F0CC003F01F8C7FC0D0190C8FCB3B3B3B3A46E6468A2
836E1C0768A26E1C0F686E801F1F6E6571193F6F515A836F515A6F6E4D5B6F6E5F6F5090
C9FC724D5A6F6EEF3FFC030002FC4D5A706D4C485A706D6C03075B7002E0033F5B040702
FC0203B55A70DAFFE0017F91CAFC040092B712FC053F18F0050F18C0050395CBFCDD007F
16FC060F16E0DE007F92CCFC070114C08B787AF598>I<030FB5FC0203B612F8021F15FF
91B812E0010317F84917FE011F9026FC001F6D7E4901800103806F010080496D6E13F890
B56F7F6F80727F486E6E7F8784878487A26C5C72806D5BA26D5B6D5BD907FEC9FCEB00F0
91CAFCA5183F0403B7FC93B8FC151F92B9FC140F023F150049B612C0010702FCC7FC4914
E0013F14804949C8FC48B512F84814E0485C5D4891C9FC485B5A5C5A5CA2B5FC5CA360A3
60806C5F6E5D6C18DF6EED1F9F6C6D037F14FC6C6EDAFF1FEBFF806C02E0902603FE0FEC
FF806C02F8D90FFC16C06C02FF9038FFF8076C92B5487E013FEEC001010F4C7E01014BC7
123FD9001F02F002031480DA007F90CCFC5A507BCE60>97 D<973807FFF00607B6FCA8F0
0003190086B3AD93381FFF800303B512FC033F14FF92B712C0020716F0021F16FC4A9138
007FFE91B500F0010FB6FC4902C01301010791C87E4949814901F881494981498390B548
814B814884485CA24891CAFCA25A5C5AA25AA25C5AA5B5FCAE7EA47E80A27EA37E807EA2
6C6E5D6C60816C606D6D5D6D6D5D6D6D5D6D6D92B67E6D6D4A15FE6D6D020792B5FC6D02
E0EB3FFE6D6C9039FC01FFFC021F90B612F06E16C0020116006E6C14FC030F14F0922600
7FFEC791C7FC607979F76E>100 D<93381FFFE00303B6FC033F15E092B712F8020716FE
021F707E4AD9FC0114E091B526E0001F7F49028001077F010749C76C7F494902007F4949
6F7E49496F1380494917C08590B5486F13E0485C487213F0A24891C914F885481AFC5C5A
7313FE5AA25C5AA21BFF85A2B5FCA291BBFCA51BFE02FCCCFCA67EA3807EA37EA26C7F1B
7E1BFF6C807E6F5E6C1AFE6C6E16036FEE07FC6D180F6D6DEE1FF86D6DEE3FF06D01FFEE
FFE06D6E4A13C06D02E0020F1380010002FC023F13006E903AFFC007FFFE021F91B65A02
0717F0020117C06E6C93C7FC030F15FC030115C0DB000701F8C8FC50507BCE5B>I<F33F
E0922601FFFE913801FFF8033FD9FFF0010F13FE4AB600FE133F020F9226FFC07F7F023F
04F1B6128091BA12EF49DAE01FDAFE1F13C0499026FE000114F849496D14E04901F0023F
13C049496E13E04918F049496E6D6C138090B5486E13FC75130048736C5AF300F84891C8
6C6D90C7FCA44886A96C97C8FCA46C6E4A5BA26C61A26D6D4A5B6D6D4A5B6D606D6D4A5B
6D01FC91B55A6D6D4991C9FC499026FFE01F5B4991B65A19F0D91FCF16C002814BCAFC90
263F803F14F0030149CBFC017F90CEFCA313FFA280A280A28014FC14FF92B712E06DEFFF
801AF81AFF6D19C01BF06D19FC876D85886D866D866D861307013F8690BCFC4887000749
C97E4801F00401804849EE003F484917074A834890CB6C7F86485A87A66D96B5FC6C636E
5F6C636E5F6C6D4D5B6C6D4D5B6C6D4D5B6C01FE057F5B6C6D6C4BB55A6C02E0030791C7
FC6D01FE037F5B011FD9FFF0010FB512F8010791B812E001011980D9003F05FCC8FC0207
17E0DA007F4BC9FC030092CAFC5A727BCE63>103 D<14FE903803FF80010F13E0497F49
7F497F90B57EA24880A24881A76C92C7FCA26C5CA26D5B6D5B6D5B6D5B01031380D900FE
C8FC91C9FCB0ECFFFE007FB5FCA8C67E131F7FB3B3B3A5B812C0A82A7979F836>105
D<ECFFFEB6FCA8C67E131F7FB3B3B3B3B3ABB812E0A82B7879F736>108
D<902601FFFC912603FFF0933807FFE0B6033FD9FF80037F13FF4DB600E00203B612C005
0703F8020F15F0051F03FE023F15FC057F6F91B77E9426FFFC076E48D9F80F7F4CD9C001
6E48D98003804C48C79128E007FC000180C66CDA07F86EDA0FF07F011F4A48704848826D
DA1FC0EF3F804C486E6D48C86C7F4CC815FE047E7148834CEFFDF8DBFDF86FD9FFF081A2
DBFFF04E834C60A24C60A34C95C9FCA493C95CB3B3A6B8D8F001B8D8E003B812C0A89A4E
79CDA5>I<902601FFFC913803FFF0B6033FEBFF804DB612E0050715F8051F15FE057F81
9426FFFC07804CD9C001804C48C780C66CDA07F880011F4A48826DEC1FC04C486E7F4CC8
FC047E835EDBFDF881A2DBFFF0835EA25EA35EA493C9FCB3B3A6B8D8F001B812E0A8634E
79CD6E>I<93380FFFF04BB67E031F15F892B8FC020317C0020F17F0023F49C66C13FC4A
01E001077F49B5008001016D7E4949C86C7F49496F7F49496F7F49496F7F49496F7F4949
6F7F90B5486F7F481B8092CAFC481BC0481BE04A83481BF0A2481BF8A348497113FCA348
1BFEA5B51AFFAE6C1BFEA46C1BFC6E5FA26C1BF8A36C6D94B512F0A26C1BE06F5D6C1BC0
6C1B806F5D6C6E4B14006D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D6C49B55A010102E0
010714806D02FE017F91C7FC023F90B712FC6E5F020717E0020094C8FC031F15F8030315
C0DB000F01F0C9FC58507BCE63>I<DAFFFEEC7FFEB60207B512F0053F14FF4CB712C004
0716F0041F16FC4C16FF93B5D8803F8092B526F8000780C66C03C06D14F0011F92C8806D
4A6F7F04F86F7F4C814C6F7F4C18804C6F14C093C97E1DE0A27414F0A27414F8A21DFCA2
871DFEA4871DFFAE1DFEA263A31DFCA298B5FC1DF8A21DF0621DE0621DC062701880704B
1400A2704B5B704B5B704B5B04FE92B55A704A5C05C00107148005F0011F91C7FCDC7FFE
90B512FC041FB75A7016E0040393C8FC040015FC051F14C0050101F8C9FC94CCFCB3A6B8
12F0A8606F7ACD6E>I<902601FFF8903803FF80B6021F13F0057F13FC94B6FC04031580
4C15C093260FFE0F13E093261FF01F13F005E014F8C66C91383F803F011FEC7F006D027E
4913FC16FEEDF9FC5E5E15FB5E03FF6E13F8A24C6D13F07213E07213C04C01011300F000
7C96C7FC93CAFCA65DB3B3A2B812FCA8464E7ACD52>114 D<912603FFFEEB03C0027F90
39FFE00FE00103B6EAFC3F010F92B5FC133F49EB00072601FFF0EB007F480180141F4890
C812074848814981484881003F177F5B183F127FA2181F12FF7FA27F7F6D6CED0FC06E92
C7FC14F814FF6C14FCEDFFE0EEFF806C16F017FC6C16FF18C06C17F06C836C836C836C83
6D1780011F17C0010717E0010117F06D7E020F16F81400030315FCED000F1600051F13FE
83007E1603B48283187F6D163FA36D161FA219FC7FA27F6DEE3FF8A26D17F06D167F6D17
E06E15FF02E0020313C06E4A138002FE021F1300913AFFC003FFFE92B65A01E316F001C0
16C0D9003F92C7FC48010714F80078D9007F90C8FC3F5079CE4E>I<ED7F80A715FFA55C
A35CA35CA25CA25C5CA25C91B5FC5B5B5B5B133F90B912C01207BAFCA6D800070280C8FC
B3B3A3F007F8AE180F6D6E14F0A2181F6D17E070133F6D17C070137F6E6DEBFF806ED9FF
0313006E91B5FC6E5D02035D6E15F06E6C5C030F14809226007FFCC7FC3D6E7CEC4D>I<
B86C023FB512FEA8D8001F91C90001EBFC006D6E9238003FE0A26D6E4C5AA26D6E4C5AA2
6D6E4B90C7FCA26D6E5E1A036E6D5E1A07A26E6D4B5AA26E6D4B5AA26E6E4A5AA26E6E4A
5AA26E6E5D1AFF6E6E92C8FC61A26E6E495AA26F6D495AA26F6D495AA26F6D495AA26F02
805B193F6F02C05B197FA26F6E485AA26F02F190C9FCA26FECFBFEA270EBFFFCA2705CA2
705CA3705CA2705CA2705CA27091CAFCA2705BA2715AA3715AA2715AA24D5AA24D5AA260
17FF95CBFCD801F85CEA07FE261FFF80495A487F486D495AA24C5AB57E4C5AA24C5A4C5A
16FF4A5C6C4A90CCFCED07FE4A485A6C49485A6C9038007FF09039FE03FFE06CB65A6C92
CDFC00015C6C14F8013F13C0D907FECEFC5F6F7CCC68>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmbx12 24.888 14
/Fm 14 122 df[<F31FF0517E517EA2517EA3507FA25080A25080A35080A25080A35080
A25080A397B67EA24F81A34F82A24F82A34F82A24F821AFD1AF9DF3FF881A24F4881871A
E007FF6D80A24E01C081871A804E6E81A24E0100828761060F6E81A24E48838761063F6E
81A24E4883886106FF6F80A24D498388614D7081A24D90C8828860050F7081A24D488588
60053F7081A24D4885896005FF7180A24C498589604C7281A24C90CA82895F040F728194
BDFC4C88A34C88A24C88A3DCFFE0CB003F80A24B49878A5F4B7481A24B90CC828A5E030F
7481A24B48898A5E033F7481A24B48898B5E03FF7580A24A497480A25E4A7681A24A90CE
6C81A25D91261FFF8074810103B512FEB900C0041FBA12FEA9>159
145 120 272 176 65 D[<BE12FEF5FFFCF6FFC01FFCF7FF8020E020FC20FF21C0C70003
0380C8000116F0E2000F810B0015FE0C1F800C0315C00C00810D3F8079800D0714FE7980
7981796C808C7A807A808F7A807A808C8F7A818DA17E8DA17E8DA17EA27B80A2A17E8DA1
7EA28DA17EA3A113808DA3A113C0A57B15E0A6A113F0B3A2A113E0A569A113C0A5A11380
A269A2A11300A3575CA2A15AA269A15A69A15AA2575CA15A69A15A9EB6FC5692C7FC6B56
5C68565C565C565C565C9DB65A5592C8FC0D075C555C0D3F5C9CB65A0C0315C00C0F5D0C
7F92C9FC0B07B612FC52B712F0C212C09ECAFC20FC20F020800DFCCBFC1FE00CFCCCFC53
CDFC>156 142 120 269 178 68 D[<BC12C0A9C7000103E0C8FCB3B3B3B3B3B3B0BC12
C0A9>74 142 122 269 87 73 D<93B512FC037FECFFF00207B8FC023F17E091B912F849
18FE0107727E499126C0007F14E04901E0C7000F80496D020380496D020014FE6F6F7F90
B570806F6F8085486E6F807380A27380A28885886C5CA26D4982886D5B6D5B010713C001
0190CAFC90CCFCA90603B7FC050FB8FC0403B9FC167F0307BAFC153F4AB7EA807F020FED
E000023F02FCC7FC91B612E0010392C8FC4914FC011F14F04914C0495C90B548C9FC485C
485C485C485C5A5D485CA24891CAFCA3B6FC5CA397B6FCA461806C60F107EF6C6E150F6F
16CF6C183F6FDB7F8F806C6EDBFF0F14E06C02FCDA03FE15FE6C6E91260FFC0791B5FC6C
6E6CD93FF817806C923AF803FFF003013F91B6487E010FEF8000010394C77E010004FC14
1F021F03F0140702010380DA007F1400DA000701F8CDFC695F79DD71>97
D<94387FFFC0040FB6FC93B712E0030716FC031F16FF037F17C04AB912F00207DAF80380
021F912680003F13FE4A49C7000F7F4A01F802038049B5486E804902C06E6C7F494A6F7F
4991C9FC49727F4949707F4B84498490B548707F5A4B198048855D481CC086481CE05D5A
871DF05AA25D5AA21DF887A2B6FCA392BBFCA51DF00380CDFCA77EA4817EA37EA2817EA2
6CF307F06FF00FF87E816C1B1F6F19F06C1B3F6D6DF07FE06D7FF4FFC06D6E4C13806D6E
5E6D02F04C13006D6EEE1FFE6D6E4C5A6D6C01FFEEFFF86E02E002035B6E02FC021F5B02
079126FFC003B55A6E92B7C7FC020060033F17F8030F17E003011780DB003F03FCC8FC04
0315C0DC000F01F8C9FC5D5F7ADD6A>101 D[<95383FFF80050FB512F094B612FE040781
041F16C0047F824BB87E0307DAF8077F031FDAC00F7F4B49C6487F4B495B92B500F0814A
4A5B4A5C4A93B612805F4A91C7FC5C5E5C5E5C731400A24C6E5B91B56F5BA2735B070313
E00700138097C8FCB3A4BA12F8A9C702FCCBFCB3B3B3B3A2003FB9FCA9>81
144 121 271 71 I[<EC3FC0ECFFF0010313FC497F497F498049804980A290B67EA24881
A86C5DA26D5CA26D5C6D5C6D91C8FC6D5B6D5B010013F0EC3FC091CAFCB3A3ED1FF0017F
B5FCB7FCA9EA003F1307A27FB3B3B3B0B91280A9>49 144 119 271
65 105 D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3B3B3B3B3ACB912C0A9>50
143 119 270 65 108 D<DB3FE0913803FFFC017FB5033FEBFFE0B792B612F8060715FE
061F6F7E4E16E095B87E4DD9FC03804DD9C000804D48C76C7FDD0FF880D8003FDB1FE082
01074B486E804D5A6D03FEC881DCE1FC815F04E385EEE7F04D81EEEFC0A2DCFF8084A294
C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9725D77DC81>110
D<94381FFFF00407B612C0047F15FC0303B87E030F17E0037F17FC4ABAFC4A9126FC007F
80020F02C0010714E04A49C880027F01F8033F13FC91B5486F7F4902C003077F494A6F80
4991C96C80494970804949717F49874949717FA290B548717F48884B83481D80A2481DC0
4B83481DE0A2481DF0A3484A7114F8A4481DFCA5B61BFEAF6C1DFCA56C6E4D14F8A36C1D
F0A36C1DE06F5F6C1DC0A26C6E4D1480A26C1D006F5F6C646D6D4D5B6F94B5FC6D636D6D
4C5C6D6E4B5C6D6E4B5C6D02F0031F5C6D6E4B91C7FC6D6C01FE92B512FC6ED9FFC00107
5C6E02FC017F5C020791B812C0020196C8FC6E6C17FC031F17F003031780DB007F03FCC9
FC040715C0DC001F01F0CAFC675F7ADD74>I<DB7FC049B47E90B6021F13F8B7027F13FE
4DB67E4D15E04D814D814D01077F94263FF00F7F94387FC01F4D48487FD8003F16000107
DAC1FE491480EEC3FC6D5DEEC7F05F16CF5F16DF4D6D1400A204FFC76C5BA2735B4C6E5B
735B070013C04C92C8FCA45EA65EB3B3AAB912FCA9515D79DC5F>114
D<92261FFFF814F80203B638C001FC023FEDFC0791B8121F010317FF130F013F9038F800
1F4990C8FCD9FFF8153F4801E0150F484915034849814890CAFC197F4848173F191F485A
A2007F180FA31907487EA27FA28002E0705A6E93C8FC14FC14FF15F06CECFF8016FCEEFF
F06CEEFF8018F06C17FE727E6C18E0856C18FC6C846C727E6C856D84011F846D84130301
0084023F83140F020183EC001FDB007F16801603DC000F15C01700183F060F14E0007F17
03486C82727E857F85857FA2857F1BC07FA27F1B806D5F7F1B006E5E6E5F6E163F6E4C5A
02FC4C5A6E03035B6E6C4A5B03F0023F5B03FF0107B55A01F991B7C7FCD9F07F16FCD9E0
1F16F0D9800716C0D9000193C8FC48D9003F14F8007C020349C9FC4B5F78DD5C>I[<ED03
FEA81507A5150FA4151FA3153FA2157FA215FFA25CA25C5CA25C5C5C5C91B5FC13035B13
1F017F91B712F00007BAFCBBFCA7C74AC9FCB3B3AAF101FFB1616E17FE82A219076E17FC
836EEE0FF871131F6E6EEB3FF071137F6E6EEBFFE06EDAFF0313C06E92B512806E170003
3F5D6F5D03075D030015E0041F1480040001FCC7FC>72 132 124
258 90 I<007FB800C04AB71280A9D800034ACA000791C7FC6D080013F0775A6D6E4E5A
A26E6E6064836E4F90C8FC836E4F5A836E4F5AA26E6E4C5AA26E6E5F1C3F6E6E5F1C7F83
6E4F5A846F4D5B846F4D90C9FCA26F6E4A5AA26F6E5D1B0F846F4D5A846F4D5A846F4D5A
A26F6E4A5AA2706E5C627002C091CAFC6219E0704B5A19F0704B5AA2706E485AA2706E48
5AA27002FE5B1A7F19FF704B5AA2715DA27192CBFCA2715CA2715CA3715CA2715CA2715C
A2715CA2725BA27290CCFCA3725AA2725AA24E5AA24E5AA261187FA24E5AA24D5B13FE26
03FF804A90CDFC000F13E0486D4A5A487F486D4A5AA260B56C141F4D5AA24D5A17FF604C
5B4A4990CEFC6C5D4C5A6C49EB3FFC4A495A6C4948485A9026FE80075B270FFFC03F5B6C
90B6CFFC6C5D6C15F86C6C5C011F14C0010749D0FC9038007FE071857CDB7B>121
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 @landscape
%%EndSetup
%%Page: 1 1
1 0 bop 1611 1500 a Fm(Analysis)75 b(of)j(In)-6 b(ternet)78
b(Data)1040 1947 y Fl(T)-17 b(on)-6 b(y)67 b(Field,)h(P)-6
b(eter)66 b(Harrison)g(and)g(Uli)j(Harder)1835 2240 y(Imp)6
b(erial)67 b(College)h(London)p eop
%%Page: 2 2
2 1 bop -242 377 a Fk(Net)-8 b(w)g(ork)95 b(la)-8 b(y)g(ers)-242
865 y Fj(Net)j(w)g(ork)58 b(connection)e(b)5 b(et)-5
b(w)g(een)56 b(user)h(application)h(and)f(the)g(transmission)i(media)f
(are)f(are)-242 1109 y(divided)g(in)-5 b(to)58 b(la)-5
b(y)g(ers)59 b(\(OSI)e(mo)5 b(del\))-152 1449 y(1.)86
b(Ph)-5 b(ysical)58 b(\(Ethernet)f(cable\))-152 1790
y(2.)86 b(Data)57 b(link)h(\(frame)g(format,)g(MA)-5
b(C,)58 b(single)g(link\))-152 2130 y(3.)86 b(Net)-5
b(w)g(ork)58 b(\(m)-5 b(ultiple)59 b(links\))-152 2470
y(4.)86 b(T)-14 b(ransp)5 b(ort)57 b(\(IP\))-152 2810
y(5.)86 b(Session)57 b(\(TCP/UDP\))-152 3150 y(6.)86
b(Presen)-5 b(tation)-152 3491 y(7.)86 b(Application)59
b(\(e-mail,)g(h)-5 b(ttp,)57 b(.)28 b(.)h(.)f(\))p eop
%%Page: 3 3
3 2 bop -242 417 a Fk(1)279 b(Monitoring)-104 868 y Fi(\017)86
b Fh(tcpdump)60 b Fj(on)d(single)h(mac)-5 b(hine)58 b(and)f(on)g
(dedicated)f(mac)-5 b(hine)57 b(using)h(mirrored)h(p)5
b(orts)57 b(and)68 1112 y(MA)-5 b(C)58 b(lev)-5 b(el)58
b(replication)-104 1452 y Fi(\017)86 b Fj(GILK)-104 1793
y Fi(\017)g Fh(/proc/net/dev)-104 2133 y Fi(\017)g Fj(application)58
b(logs)h(\(w)-5 b(eb)57 b(serv)-5 b(er,)57 b(and)g(NFS)g(home)h
(directories\))-242 2473 y(Other)f(options)-104 2813
y Fi(\017)86 b Fj(switc)-5 b(h)58 b(summary)g(data)-104
3153 y Fi(\017)86 b Fj(ping)57 b(times)-104 3494 y Fi(\017)86
b Fj(router)57 b(information)p eop
%%Page: 4 4
4 3 bop 1392 3944 a @beginspecial 0 @llx 0 @lly 457 @urx
591 @ury 2267 @rhi @setspecial
%%BeginDocument: pictures/monitor-bd.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\cygwin\home\uh\tungsten\paper\pictures\monitor-bd.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 457 591
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 457 591
%AI3_TileBox: 0 0 457 591
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
3.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  74.4908 377.4029 m
  80.1085 362.6232 L
  87.5001 349.0258 L
  95.1875 336.9065 L
  104.3531 326.5607 L
  114.1101 317.9884 L
  124.4585 311.7809 L
  134.8068 307.3470 L
  146.3378 304.6867 L
  157.2775 304.6867 L
  167.9215 306.4602 L
  179.1568 310.3030 L
  189.5051 316.8060 L
  198.9665 325.3783 L
  208.4278 335.7241 L
  217.0021 325.3783 L
  227.3505 316.8060 L
  237.1075 310.3030 L
  248.0471 306.4602 L
  259.5781 304.6867 L
  269.9265 304.6867 L
  280.5705 307.3470 L
  291.5101 311.7809 L
  302.1541 317.9884 L
  311.6155 326.5607 L
  320.4855 336.9065 L
  328.7641 349.0258 L
  335.5645 362.6232 L
  342.0691 377.4029 L
  349.4608 375.3338 L
  357.7395 376.2205 L
  365.7225 378.2897 L
  373.4098 383.0192 L
  380.5058 389.8179 L
  386.1235 398.6857 L
  391.1498 409.3271 L
  394.1065 420.8553 L
  396.7675 433.2703 L
  397.6545 445.9809 L
  396.7675 459.2826 L
  394.1065 471.9932 L
  391.1498 483.2258 L
  386.1235 493.2760 L
  380.5058 502.1438 L
  373.4098 508.9425 L
  365.7225 514.2632 L
  357.7395 516.6279 L
  349.4608 517.2191 L
  342.0691 514.5588 L
  335.5645 529.6341 L
  328.7641 543.8226 L
  320.4855 555.9420 L
  311.6155 565.6966 L
  302.1541 574.8601 L
  291.5101 580.7720 L
  280.5705 585.5015 L
  269.9265 587.5706 L
  259.5781 587.5706 L
  248.0471 586.0927 L
  237.1075 581.6587 L
  227.3505 575.1557 L
  217.0021 567.1746 L
  208.4278 557.1244 L
  198.9665 567.1746 L
  189.5051 575.1557 L
  179.1568 581.6587 L
  167.9215 586.0927 L
  157.2775 587.5706 L
  146.3378 587.5706 L
  134.8068 585.5015 L
  124.4585 580.7720 L
  114.1101 574.8601 L
  104.3531 565.6966 L
  95.1875 555.9420 L
  87.5001 543.8226 L
  80.1085 529.6341 L
  74.4908 514.5588 L
  66.5078 517.2191 L
  58.2291 516.6279 L
  50.5418 514.2632 L
  42.8544 508.9425 L
  36.0541 502.1438 L
  30.4364 493.2760 L
  25.1144 483.2258 L
  21.2708 471.9932 L
  19.4968 459.2826 L
  19.2011 445.9809 L
  19.4968 433.2703 L
  21.2708 420.8553 L
  25.1144 409.3271 L
  30.4364 398.6857 L
  36.0541 389.8179 L
  42.8544 383.0192 L
  50.5418 378.2897 L
  58.2291 376.2205 L
  66.5078 375.3338 L
  74.4908 377.4029 L
B
U
u
  0.000 0.000 0.000 1.000 K
1 J
  74.4908 377.4029 m
  80.1085 362.6232 L
  87.5001 349.0258 L
  95.1875 336.9065 L
  104.3531 326.5607 L
  114.1101 317.9884 L
  124.4585 311.7809 L
  134.8068 307.3470 L
  146.3378 304.6867 L
  157.2775 304.6867 L
  167.9215 306.4602 L
  179.1568 310.3030 L
  189.5051 316.8060 L
  198.9665 325.3783 L
  208.4278 335.7241 L
  217.0021 325.3783 L
  227.3505 316.8060 L
  237.1075 310.3030 L
  248.0471 306.4602 L
  259.5781 304.6867 L
  269.9265 304.6867 L
  280.5705 307.3470 L
  291.5101 311.7809 L
  302.1541 317.9884 L
  311.6155 326.5607 L
  320.4855 336.9065 L
  328.7641 349.0258 L
  335.5645 362.6232 L
  342.0691 377.4029 L
  349.4608 375.3338 L
  357.7395 376.2205 L
  365.7225 378.2897 L
  373.4098 383.0192 L
  380.5058 389.8179 L
  386.1235 398.6857 L
  391.1498 409.3271 L
  394.1065 420.8553 L
  396.7675 433.2703 L
  397.6545 445.9809 L
  396.7675 459.2826 L
  394.1065 471.9932 L
  391.1498 483.2258 L
  386.1235 493.2760 L
  380.5058 502.1438 L
  373.4098 508.9425 L
  365.7225 514.2632 L
  357.7395 516.6279 L
  349.4608 517.2191 L
  342.0691 514.5588 L
  335.5645 529.6341 L
  328.7641 543.8226 L
  320.4855 555.9420 L
  311.6155 565.6966 L
  302.1541 574.8601 L
  291.5101 580.7720 L
  280.5705 585.5015 L
  269.9265 587.5706 L
  259.5781 587.5706 L
  248.0471 586.0927 L
  237.1075 581.6587 L
  227.3505 575.1557 L
  217.0021 567.1746 L
  208.4278 557.1244 L
  198.9665 567.1746 L
  189.5051 575.1557 L
  179.1568 581.6587 L
  167.9215 586.0927 L
  157.2775 587.5706 L
  146.3378 587.5706 L
  134.8068 585.5015 L
  124.4585 580.7720 L
  114.1101 574.8601 L
  104.3531 565.6966 L
  95.1875 555.9420 L
  87.5001 543.8226 L
  80.1085 529.6341 L
  74.4908 514.5588 L
  66.5078 517.2191 L
  58.2291 516.6279 L
  50.5418 514.2632 L
  42.8544 508.9425 L
  36.0541 502.1438 L
  30.4364 493.2760 L
  25.1144 483.2258 L
  21.2708 471.9932 L
  19.4968 459.2826 L
  19.2011 445.9809 L
  19.4968 433.2703 L
  21.2708 420.8553 L
  25.1144 409.3271 L
  30.4364 398.6857 L
  36.0541 389.8179 L
  42.8544 383.0192 L
  50.5418 378.2897 L
  58.2291 376.2205 L
  66.5078 375.3338 L
  74.4908 377.4029 L
S
U
u
  0.000 0.000 0.000 0.051 k
0.7500 w
  0.000 0.000 0.000 1.000 K
  252.5918 388.2363 m
  252.5515 388.5184 L
  252.4709 388.7602 L
  252.3501 389.0021 L
  252.1890 389.2439 L
  251.9474 389.4052 L
  251.7058 389.5261 L
  251.4642 389.6067 L
  251.1823 389.6470 L
  165.4049 389.6470 L
  165.1230 389.6067 L
  164.8813 389.5261 L
  164.6397 389.4052 L
  164.3981 389.2439 L
  164.2370 389.0021 L
  164.1162 388.7602 L
  164.0356 388.5184 L
  163.9954 388.2363 L
  163.9954 242.7268 L
  164.0356 242.4446 L
  164.1162 242.2028 L
  164.2370 241.9609 L
  164.3981 241.7191 L
  164.6397 241.5579 L
  164.8813 241.4369 L
  165.1230 241.3563 L
  165.4049 241.3160 L
  251.1823 241.3160 L
  251.4642 241.3563 L
  251.7058 241.4369 L
  251.9474 241.5579 L
  252.1890 241.7191 L
  252.3501 241.9609 L
  252.4709 242.2028 L
  252.5515 242.4446 L
  252.5918 242.7268 L
  252.5918 388.2363 L
B
U
u
  252.5918 388.2363 m
  252.5515 388.5184 L
  252.4709 388.7602 L
  252.3501 389.0021 L
  252.1890 389.2439 L
  251.9474 389.4052 L
  251.7058 389.5261 L
  251.4642 389.6067 L
  251.1823 389.6470 L
  165.4049 389.6470 L
  165.1230 389.6067 L
  164.8813 389.5261 L
  164.6397 389.4052 L
  164.3981 389.2439 L
  164.2370 389.0021 L
  164.1162 388.7602 L
  164.0356 388.5184 L
  163.9954 388.2363 L
  163.9954 242.7268 L
  164.0356 242.4446 L
  164.1162 242.2028 L
  164.2370 241.9609 L
  164.3981 241.7191 L
  164.6397 241.5579 L
  164.8813 241.4369 L
  165.1230 241.3563 L
  165.4049 241.3160 L
  251.1823 241.3160 L
  251.4642 241.3563 L
  251.7058 241.4369 L
  251.9474 241.5579 L
  252.1890 241.7191 L
  252.3501 241.9609 L
  252.4709 242.2028 L
  252.5515 242.4446 L
  252.5918 242.7268 L
  252.5918 388.2363 L
S
U
u
  163.9954 369.0903 m
  252.3904 369.0903 L
S
U
u
  0.000 0.000 0.000 0.051 k
0.2500 w
  0.000 0.000 0.000 1.000 K
  236.0806 384.4877 m
  186.1445 384.4877 L
  186.1445 376.2247 L
  236.0806 376.2247 L
  236.0806 384.4877 L
B
U
u
  236.0806 384.4877 m
  186.1445 384.4877 L
  186.1445 376.2247 L
  236.0806 376.2247 L
  236.0806 384.4877 L
S
U
u
  0.000 0.000 0.000 1.000 k
  249.6922 384.6086 m
  241.8394 384.6086 L
  241.8394 382.9963 L
  249.6922 382.9963 L
  249.6922 384.6086 L
B
U
u
  249.6922 384.6086 m
  241.8394 384.6086 L
  241.8394 382.9963 L
  249.6922 382.9963 L
  249.6922 384.6086 L
S
U
u
  0.000 0.000 0.000 1.000 k
  249.6922 380.9809 m
  241.8394 380.9809 L
  241.8394 379.3686 L
  249.6922 379.3686 L
  249.6922 380.9809 L
B
U
u
  249.6922 380.9809 m
  241.8394 380.9809 L
  241.8394 379.3686 L
  249.6922 379.3686 L
  249.6922 380.9809 L
S
U
u
  0.000 0.000 0.000 1.000 k
  249.6922 377.7563 m
  241.8394 377.7563 L
  241.8394 376.1441 L
  249.6922 376.1441 L
  249.6922 377.7563 L
B
U
u
  249.6922 377.7563 m
  241.8394 377.7563 L
  241.8394 376.1441 L
  249.6922 376.1441 L
  249.6922 377.7563 L
S
U
u
1.0000 w
  0.000 0.000 0.000 1.000 K
  188.5607 341.4797 m
  234.6711 341.4797 L
S
U
u
  188.5607 314.0708 m
  234.6711 314.0708 L
S
U
u
  188.5607 286.8633 m
  234.6711 286.8633 L
S
U
u
0.2500 w
  0.000 0.000 0.000 0.251 K
  183.1241 389.2439 m
  183.1241 241.1145 L
S
U
u
  239.9064 389.2439 m
  239.9064 241.1145 L
S
U
u
0.7500 w
  0.000 0.000 0.000 1.000 K
  164.1967 258.4466 m
  252.5918 258.4466 L
S
U
u
  164.1967 255.0205 m
  252.5918 255.0205 L
S
U
u
  164.1967 251.5944 m
  252.5918 251.5944 L
S
U
u
  164.1967 248.3698 m
  252.5918 248.3698 L
S
U
u
  164.1967 244.7421 m
  252.5918 244.7421 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.2500 w
  0.000 0.000 0.000 1.000 K
  189.7689 382.7948 m
  188.5607 382.7948 L
  188.5607 377.9579 L
  189.7689 377.9579 L
  189.7689 382.7948 L
B
U
u
  189.7689 382.7948 m
  188.5607 382.7948 L
  188.5607 377.9579 L
  189.7689 377.9579 L
  189.7689 382.7948 L
S
U
u
  0.000 0.000 0.000 1.000 k
  189.9702 381.9886 m
  190.0105 382.0289 L
  190.0508 382.0692 L
  190.0910 382.1095 L
  190.1313 382.1498 L
  190.1716 382.1902 L
  190.2118 382.2305 L
  190.2521 382.2708 L
  190.2924 382.2708 L
  190.2924 382.3111 L
  190.3327 382.3514 L
  190.3729 382.3917 L
  190.4132 382.4320 L
  190.4535 382.4723 L
  190.4937 382.5126 L
  190.5340 382.5529 L
  190.5743 382.5932 L
  190.8159 382.5932 L
  191.0173 382.5932 L
  191.2186 382.5932 L
  191.4200 382.5529 L
  191.5811 382.5126 L
  191.7421 382.4723 L
  191.8630 382.3917 L
  191.9838 382.3514 L
  192.1046 382.2708 L
  192.1851 382.1498 L
  192.3059 382.0692 L
  192.3462 381.9483 L
  192.4268 381.8274 L
  192.4670 381.7065 L
  192.5073 381.5855 L
  192.5476 381.4646 L
  192.5878 381.3034 L
  192.6281 381.1825 L
  192.6281 381.0212 L
  192.6281 380.8600 L
  192.6281 380.7391 L
  192.6281 380.5779 L
  192.6281 380.4166 L
  192.6281 380.2554 L
  192.6281 380.0942 L
  192.6281 379.9329 L
  192.6281 379.7717 L
  192.6281 379.6105 L
  192.5878 379.4493 L
  192.5878 379.2880 L
  192.5878 379.1268 L
  192.5878 378.9656 L
  192.6281 378.9656 L
  192.6684 378.9656 L
  192.7086 378.9656 L
  192.7489 378.9656 L
  192.7892 378.9656 L
  192.8697 378.9656 L
  192.9100 378.9656 L
  192.9905 378.9656 L
  193.0308 378.9656 L
  193.1114 378.9656 L
  193.1516 378.9656 L
  193.2322 378.9656 L
  193.3127 378.9656 L
  193.3530 378.9656 L
  193.4335 378.9656 L
  193.4738 378.9656 L
  193.5543 378.9656 L
  193.5946 378.9656 L
  193.6752 378.9656 L
  193.7154 378.9656 L
  193.7960 378.9656 L
  193.8362 378.9656 L
  193.8765 378.9656 L
  193.9168 378.9656 L
  193.9571 378.9656 L
  193.9973 378.9656 L
  193.9973 378.9253 L
  193.9571 378.9253 L
  193.9571 378.8850 L
  193.9168 378.8850 L
  193.9168 378.8446 L
  193.8765 378.8043 L
  193.8362 378.7640 L
  193.7960 378.7237 L
  193.7960 378.6834 L
  193.7557 378.6431 L
  193.7154 378.6028 L
  193.6752 378.5625 L
  193.6349 378.5222 L
  193.5946 378.4416 L
  193.5543 378.4013 L
  193.5141 378.3610 L
  193.4738 378.3206 L
  193.4335 378.2803 L
  193.3933 378.2400 L
  193.3933 378.1997 L
  193.3530 378.1594 L
  193.3127 378.1191 L
  193.2724 378.0788 L
  193.2724 378.0385 L
  193.2322 378.0385 L
  193.2322 377.9982 L
  193.1919 377.9982 L
  193.1919 377.9579 L
  192.9905 377.9579 L
  192.7892 377.9982 L
  192.5878 378.0385 L
  192.4268 378.0788 L
  192.2657 378.1191 L
  192.1449 378.1997 L
  191.9838 378.2803 L
  191.9032 378.4013 L
  191.7824 378.4819 L
  191.7019 378.6028 L
  191.6213 378.7237 L
  191.5408 378.8446 L
  191.5005 379.0059 L
  191.4602 379.1268 L
  191.4200 379.2880 L
  191.3797 379.4493 L
  191.3394 379.6105 L
  191.3394 379.7717 L
  191.3394 379.9329 L
  191.2992 380.0942 L
  191.2992 380.2554 L
  191.2992 380.4166 L
  191.2992 380.5779 L
  191.3394 380.7794 L
  191.3394 380.9406 L
  191.3394 381.1019 L
  191.3394 381.2631 L
  191.3394 381.4243 L
  191.3797 381.5452 L
  191.3797 381.7065 L
  191.3797 381.8677 L
  191.3797 381.9886 L
  191.3394 381.9886 L
  191.2992 381.9886 L
  191.2589 381.9886 L
  191.2186 381.9886 L
  191.1783 381.9886 L
  191.0978 381.9886 L
  191.0575 381.9886 L
  190.9770 381.9886 L
  190.9367 381.9886 L
  190.8562 381.9886 L
  190.8159 381.9886 L
  190.7354 381.9886 L
  190.6951 381.9886 L
  190.6146 381.9886 L
  190.5340 381.9886 L
  190.4937 381.9886 L
  190.4132 381.9886 L
  190.3729 381.9886 L
  190.2924 381.9886 L
  190.2521 381.9886 L
  190.1716 381.9886 L
  190.1313 381.9886 L
  190.0910 381.9886 L
  190.0508 381.9886 L
  190.0105 381.9886 L
  189.9702 381.9886 L
B
U
u
  189.9702 381.9886 m
  190.0105 382.0289 L
  190.0508 382.0692 L
  190.0910 382.1095 L
  190.1313 382.1498 L
  190.1716 382.1902 L
  190.2118 382.2305 L
  190.2521 382.2708 L
  190.2924 382.2708 L
  190.2924 382.3111 L
  190.3327 382.3514 L
  190.3729 382.3917 L
  190.4132 382.4320 L
  190.4535 382.4723 L
  190.4937 382.5126 L
  190.5340 382.5529 L
  190.5743 382.5932 L
  190.8159 382.5932 L
  191.0173 382.5932 L
  191.2186 382.5932 L
  191.4200 382.5529 L
  191.5811 382.5126 L
  191.7421 382.4723 L
  191.8630 382.3917 L
  191.9838 382.3514 L
  192.1046 382.2708 L
  192.1851 382.1498 L
  192.3059 382.0692 L
  192.3462 381.9483 L
  192.4268 381.8274 L
  192.4670 381.7065 L
  192.5073 381.5855 L
  192.5476 381.4646 L
  192.5878 381.3034 L
  192.6281 381.1825 L
  192.6281 381.0212 L
  192.6281 380.8600 L
  192.6281 380.7391 L
  192.6281 380.5779 L
  192.6281 380.4166 L
  192.6281 380.2554 L
  192.6281 380.0942 L
  192.6281 379.9329 L
  192.6281 379.7717 L
  192.6281 379.6105 L
  192.5878 379.4493 L
  192.5878 379.2880 L
  192.5878 379.1268 L
  192.5878 378.9656 L
  192.6281 378.9656 L
  192.6684 378.9656 L
  192.7086 378.9656 L
  192.7489 378.9656 L
  192.7892 378.9656 L
  192.8697 378.9656 L
  192.9100 378.9656 L
  192.9905 378.9656 L
  193.0308 378.9656 L
  193.1114 378.9656 L
  193.1516 378.9656 L
  193.2322 378.9656 L
  193.3127 378.9656 L
  193.3530 378.9656 L
  193.4335 378.9656 L
  193.4738 378.9656 L
  193.5543 378.9656 L
  193.5946 378.9656 L
  193.6752 378.9656 L
  193.7154 378.9656 L
  193.7960 378.9656 L
  193.8362 378.9656 L
  193.8765 378.9656 L
  193.9168 378.9656 L
  193.9571 378.9656 L
  193.9973 378.9656 L
  193.9973 378.9253 L
  193.9571 378.9253 L
  193.9571 378.8850 L
  193.9168 378.8850 L
  193.9168 378.8446 L
  193.8765 378.8043 L
  193.8362 378.7640 L
  193.7960 378.7237 L
  193.7960 378.6834 L
  193.7557 378.6431 L
  193.7154 378.6028 L
  193.6752 378.5625 L
  193.6349 378.5222 L
  193.5946 378.4416 L
  193.5543 378.4013 L
  193.5141 378.3610 L
  193.4738 378.3206 L
  193.4335 378.2803 L
  193.3933 378.2400 L
  193.3933 378.1997 L
  193.3530 378.1594 L
  193.3127 378.1191 L
  193.2724 378.0788 L
  193.2724 378.0385 L
  193.2322 378.0385 L
  193.2322 377.9982 L
  193.1919 377.9982 L
  193.1919 377.9579 L
  192.9905 377.9579 L
  192.7892 377.9982 L
  192.5878 378.0385 L
  192.4268 378.0788 L
  192.2657 378.1191 L
  192.1449 378.1997 L
  191.9838 378.2803 L
  191.9032 378.4013 L
  191.7824 378.4819 L
  191.7019 378.6028 L
  191.6213 378.7237 L
  191.5408 378.8446 L
  191.5005 379.0059 L
  191.4602 379.1268 L
  191.4200 379.2880 L
  191.3797 379.4493 L
  191.3394 379.6105 L
  191.3394 379.7717 L
  191.3394 379.9329 L
  191.2992 380.0942 L
  191.2992 380.2554 L
  191.2992 380.4166 L
  191.2992 380.5779 L
  191.3394 380.7794 L
  191.3394 380.9406 L
  191.3394 381.1019 L
  191.3394 381.2631 L
  191.3394 381.4243 L
  191.3797 381.5452 L
  191.3797 381.7065 L
  191.3797 381.8677 L
  191.3797 381.9886 L
  191.3394 381.9886 L
  191.2992 381.9886 L
  191.2589 381.9886 L
  191.2186 381.9886 L
  191.1783 381.9886 L
  191.0978 381.9886 L
  191.0575 381.9886 L
  190.9770 381.9886 L
  190.9367 381.9886 L
  190.8562 381.9886 L
  190.8159 381.9886 L
  190.7354 381.9886 L
  190.6951 381.9886 L
  190.6146 381.9886 L
  190.5340 381.9886 L
  190.4937 381.9886 L
  190.4132 381.9886 L
  190.3729 381.9886 L
  190.2924 381.9886 L
  190.2521 381.9886 L
  190.1716 381.9886 L
  190.1313 381.9886 L
  190.0910 381.9886 L
  190.0508 381.9886 L
  190.0105 381.9886 L
  189.9702 381.9886 L
S
U
u
  0.000 0.000 0.000 1.000 k
  192.9905 380.9809 m
  193.0308 381.0212 L
  193.0711 381.0615 L
  193.1114 381.1019 L
  193.1919 381.1422 L
  193.2322 381.2228 L
  193.3127 381.2631 L
  193.3933 381.3437 L
  193.4738 381.3840 L
  193.5543 381.4646 L
  193.6349 381.5452 L
  193.7154 381.6258 L
  193.7960 381.7065 L
  193.9168 381.7871 L
  193.9973 381.8677 L
  194.0779 381.9886 L
  194.1987 382.0692 L
  194.2792 382.1498 L
  194.3598 382.2305 L
  194.4403 382.3111 L
  194.5208 382.3917 L
  194.6014 382.4320 L
  194.6819 382.5126 L
  194.7625 382.5529 L
  194.8027 382.6335 L
  194.8833 382.6738 L
  194.9236 382.7141 L
  194.9638 382.7545 L
  195.0041 382.7948 L
  195.0041 382.7545 L
  195.0041 382.7141 L
  195.0041 382.6335 L
  195.0041 382.5529 L
  195.0041 382.4320 L
  195.0041 382.3111 L
  195.0041 382.1902 L
  195.0041 382.0692 L
  195.0041 381.9080 L
  195.0041 381.7468 L
  195.0041 381.5855 L
  195.0041 381.4243 L
  195.0041 381.2228 L
  195.0041 381.0615 L
  195.0041 380.8600 L
  195.0041 380.6988 L
  195.0041 380.5376 L
  195.0041 380.3360 L
  195.0041 380.1748 L
  195.0041 380.0136 L
  195.0041 379.8523 L
  195.0041 379.6911 L
  195.0041 379.5702 L
  195.0041 379.4493 L
  195.0041 379.3283 L
  195.0041 379.2074 L
  195.0041 379.1268 L
  195.0041 379.0462 L
  195.0041 379.0059 L
  195.0041 378.9656 L
  195.0444 378.9656 L
  195.0846 378.9656 L
  195.1249 378.9656 L
  195.1652 378.9656 L
  195.2055 378.9656 L
  195.2457 378.9656 L
  195.3263 378.9656 L
  195.3665 378.9656 L
  195.4471 378.9656 L
  195.5276 378.9656 L
  195.5679 378.9656 L
  195.6484 378.9656 L
  195.7290 378.9656 L
  195.8095 378.9656 L
  195.8901 378.9656 L
  195.9706 378.9656 L
  196.0511 378.9656 L
  196.0914 378.9656 L
  196.1720 378.9656 L
  196.2525 378.9656 L
  196.2928 378.9656 L
  196.3733 378.9656 L
  196.4136 378.9656 L
  196.4539 378.9656 L
  196.4941 378.9656 L
  196.5344 378.9656 L
  196.5747 378.9656 L
  196.6149 378.9656 L
  196.5747 378.9253 L
  196.5344 378.8850 L
  196.4941 378.8850 L
  196.4539 378.8446 L
  196.4136 378.8043 L
  196.3733 378.7640 L
  196.3330 378.7237 L
  196.2928 378.6834 L
  196.2525 378.6431 L
  196.1720 378.6028 L
  196.1317 378.5625 L
  196.0511 378.5222 L
  196.0109 378.4416 L
  195.9706 378.4013 L
  195.8901 378.3610 L
  195.8498 378.3206 L
  195.7693 378.2803 L
  195.7290 378.2400 L
  195.6887 378.1997 L
  195.6484 378.1594 L
  195.6082 378.1191 L
  195.5679 378.0788 L
  195.5276 378.0385 L
  195.4874 378.0385 L
  195.4471 377.9982 L
  195.4068 377.9579 L
  195.2457 377.9579 L
  195.0846 377.9982 L
  194.9638 377.9982 L
  194.8430 378.0385 L
  194.7222 378.1191 L
  194.6417 378.1594 L
  194.5208 378.2400 L
  194.4403 378.3206 L
  194.4000 378.4013 L
  194.3195 378.4819 L
  194.2792 378.6028 L
  194.2390 378.6834 L
  194.1987 378.8043 L
  194.1584 378.9253 L
  194.1584 379.0462 L
  194.1181 379.1671 L
  194.1181 379.2880 L
  194.1181 379.4089 L
  194.1181 379.5299 L
  194.1181 379.6508 L
  194.1181 379.8120 L
  194.1181 379.9329 L
  194.1181 380.0539 L
  194.1181 380.1748 L
  194.1584 380.2957 L
  194.1584 380.4166 L
  194.1584 380.4972 L
  194.1584 380.6182 L
  194.1987 380.7391 L
  194.1987 380.8197 L
  194.1987 380.9003 L
  194.1987 380.9809 L
  194.1584 380.9809 L
  194.1181 380.9809 L
  194.0779 380.9809 L
  194.0376 380.9809 L
  193.9973 380.9809 L
  193.9571 380.9809 L
  193.9168 380.9809 L
  193.8765 380.9809 L
  193.8362 380.9809 L
  193.7557 380.9809 L
  193.7154 380.9809 L
  193.6349 380.9809 L
  193.5946 380.9809 L
  193.5543 380.9809 L
  193.4738 380.9809 L
  193.4335 380.9809 L
  193.3530 380.9809 L
  193.3127 380.9809 L
  193.2724 380.9809 L
  193.2322 380.9809 L
  193.1919 380.9809 L
  193.1516 380.9809 L
  193.1114 380.9809 L
  193.0711 380.9809 L
  193.0308 380.9809 L
  192.9905 380.9809 L
B
U
u
  192.9905 380.9809 m
  193.0308 381.0212 L
  193.0711 381.0615 L
  193.1114 381.1019 L
  193.1919 381.1422 L
  193.2322 381.2228 L
  193.3127 381.2631 L
  193.3933 381.3437 L
  193.4738 381.3840 L
  193.5543 381.4646 L
  193.6349 381.5452 L
  193.7154 381.6258 L
  193.7960 381.7065 L
  193.9168 381.7871 L
  193.9973 381.8677 L
  194.0779 381.9886 L
  194.1987 382.0692 L
  194.2792 382.1498 L
  194.3598 382.2305 L
  194.4403 382.3111 L
  194.5208 382.3917 L
  194.6014 382.4320 L
  194.6819 382.5126 L
  194.7625 382.5529 L
  194.8027 382.6335 L
  194.8833 382.6738 L
  194.9236 382.7141 L
  194.9638 382.7545 L
  195.0041 382.7948 L
  195.0041 382.7545 L
  195.0041 382.7141 L
  195.0041 382.6335 L
  195.0041 382.5529 L
  195.0041 382.4320 L
  195.0041 382.3111 L
  195.0041 382.1902 L
  195.0041 382.0692 L
  195.0041 381.9080 L
  195.0041 381.7468 L
  195.0041 381.5855 L
  195.0041 381.4243 L
  195.0041 381.2228 L
  195.0041 381.0615 L
  195.0041 380.8600 L
  195.0041 380.6988 L
  195.0041 380.5376 L
  195.0041 380.3360 L
  195.0041 380.1748 L
  195.0041 380.0136 L
  195.0041 379.8523 L
  195.0041 379.6911 L
  195.0041 379.5702 L
  195.0041 379.4493 L
  195.0041 379.3283 L
  195.0041 379.2074 L
  195.0041 379.1268 L
  195.0041 379.0462 L
  195.0041 379.0059 L
  195.0041 378.9656 L
  195.0444 378.9656 L
  195.0846 378.9656 L
  195.1249 378.9656 L
  195.1652 378.9656 L
  195.2055 378.9656 L
  195.2457 378.9656 L
  195.3263 378.9656 L
  195.3665 378.9656 L
  195.4471 378.9656 L
  195.5276 378.9656 L
  195.5679 378.9656 L
  195.6484 378.9656 L
  195.7290 378.9656 L
  195.8095 378.9656 L
  195.8901 378.9656 L
  195.9706 378.9656 L
  196.0511 378.9656 L
  196.0914 378.9656 L
  196.1720 378.9656 L
  196.2525 378.9656 L
  196.2928 378.9656 L
  196.3733 378.9656 L
  196.4136 378.9656 L
  196.4539 378.9656 L
  196.4941 378.9656 L
  196.5344 378.9656 L
  196.5747 378.9656 L
  196.6149 378.9656 L
  196.5747 378.9253 L
  196.5344 378.8850 L
  196.4941 378.8850 L
  196.4539 378.8446 L
  196.4136 378.8043 L
  196.3733 378.7640 L
  196.3330 378.7237 L
  196.2928 378.6834 L
  196.2525 378.6431 L
  196.1720 378.6028 L
  196.1317 378.5625 L
  196.0511 378.5222 L
  196.0109 378.4416 L
  195.9706 378.4013 L
  195.8901 378.3610 L
  195.8498 378.3206 L
  195.7693 378.2803 L
  195.7290 378.2400 L
  195.6887 378.1997 L
  195.6484 378.1594 L
  195.6082 378.1191 L
  195.5679 378.0788 L
  195.5276 378.0385 L
  195.4874 378.0385 L
  195.4471 377.9982 L
  195.4068 377.9579 L
  195.2457 377.9579 L
  195.0846 377.9982 L
  194.9638 377.9982 L
  194.8430 378.0385 L
  194.7222 378.1191 L
  194.6417 378.1594 L
  194.5208 378.2400 L
  194.4403 378.3206 L
  194.4000 378.4013 L
  194.3195 378.4819 L
  194.2792 378.6028 L
  194.2390 378.6834 L
  194.1987 378.8043 L
  194.1584 378.9253 L
  194.1584 379.0462 L
  194.1181 379.1671 L
  194.1181 379.2880 L
  194.1181 379.4089 L
  194.1181 379.5299 L
  194.1181 379.6508 L
  194.1181 379.8120 L
  194.1181 379.9329 L
  194.1181 380.0539 L
  194.1181 380.1748 L
  194.1584 380.2957 L
  194.1584 380.4166 L
  194.1584 380.4972 L
  194.1584 380.6182 L
  194.1987 380.7391 L
  194.1987 380.8197 L
  194.1987 380.9003 L
  194.1987 380.9809 L
  194.1584 380.9809 L
  194.1181 380.9809 L
  194.0779 380.9809 L
  194.0376 380.9809 L
  193.9973 380.9809 L
  193.9571 380.9809 L
  193.9168 380.9809 L
  193.8765 380.9809 L
  193.8362 380.9809 L
  193.7557 380.9809 L
  193.7154 380.9809 L
  193.6349 380.9809 L
  193.5946 380.9809 L
  193.5543 380.9809 L
  193.4738 380.9809 L
  193.4335 380.9809 L
  193.3530 380.9809 L
  193.3127 380.9809 L
  193.2724 380.9809 L
  193.2322 380.9809 L
  193.1919 380.9809 L
  193.1516 380.9809 L
  193.1114 380.9809 L
  193.0711 380.9809 L
  193.0308 380.9809 L
  192.9905 380.9809 L
S
U
u
  0.000 0.000 0.000 1.000 k
  195.9303 381.8677 m
  194.5208 381.8677 L
  194.5208 381.2631 L
  195.9303 381.2631 L
  195.9303 381.8677 L
B
U
u
  195.9303 381.8677 m
  194.5208 381.8677 L
  194.5208 381.2631 L
  195.9303 381.2631 L
  195.9303 381.8677 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 179.5793 302.6644 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Black Diamond\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
2.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  144.2653 64.5134 m
  147.0901 57.0802 L
  150.8068 50.2416 L
  154.6722 44.1463 L
  159.2810 38.9431 L
  164.1871 34.6318 L
  169.3906 31.5099 L
  174.5940 29.2799 L
  180.3922 27.9419 L
  185.8930 27.9419 L
  191.2451 28.8339 L
  196.8946 30.7665 L
  202.0980 34.0372 L
  206.8555 38.3484 L
  211.6129 43.5517 L
  215.9243 38.3484 L
  221.1278 34.0372 L
  226.0339 30.7665 L
  231.5347 28.8339 L
  237.3328 27.9419 L
  242.5363 27.9419 L
  247.8884 29.2799 L
  253.3892 31.5099 L
  258.7413 34.6318 L
  263.4988 38.9431 L
  267.9589 44.1463 L
  272.1217 50.2416 L
  275.5411 57.0802 L
  278.8118 64.5134 L
  282.5286 63.4727 L
  286.6913 63.9187 L
  290.7054 64.9594 L
  294.5708 67.3380 L
  298.1389 70.7573 L
  300.9637 75.2172 L
  303.4911 80.5691 L
  304.9778 86.3671 L
  306.3158 92.6110 L
  306.7618 99.0035 L
  306.3158 105.6934 L
  304.9778 112.0860 L
  303.4911 117.7353 L
  300.9637 122.7899 L
  298.1389 127.2498 L
  294.5708 130.6691 L
  290.7054 133.3450 L
  286.6913 134.5343 L
  282.5286 134.8317 L
  278.8118 133.4937 L
  275.5411 141.0756 L
  272.1217 148.2115 L
  267.9589 154.3067 L
  263.4988 159.2127 L
  258.7413 163.8212 L
  253.3892 166.7945 L
  247.8884 169.1732 L
  242.5363 170.2138 L
  237.3328 170.2138 L
  231.5347 169.4705 L
  226.0339 167.2405 L
  221.1278 163.9699 L
  215.9243 159.9560 L
  211.6129 154.9014 L
  206.8555 159.9560 L
  202.0980 163.9699 L
  196.8946 167.2405 L
  191.2451 169.4705 L
  185.8930 170.2138 L
  180.3922 170.2138 L
  174.5940 169.1732 L
  169.3906 166.7945 L
  164.1871 163.8212 L
  159.2810 159.2127 L
  154.6722 154.3067 L
  150.8068 148.2115 L
  147.0901 141.0756 L
  144.2653 133.4937 L
  140.2512 134.8317 L
  136.0885 134.5343 L
  132.2230 133.3450 L
  128.3576 130.6691 L
  124.9382 127.2498 L
  122.1135 122.7899 L
  119.4374 117.7353 L
  117.5047 112.0860 L
  116.6127 105.6934 L
  116.4640 99.0035 L
  116.6127 92.6110 L
  117.5047 86.3671 L
  119.4374 80.5691 L
  122.1135 75.2172 L
  124.9382 70.7573 L
  128.3576 67.3380 L
  132.2230 64.9594 L
  136.0885 63.9187 L
  140.2512 63.4727 L
  144.2653 64.5134 L
B
U
u
  144.2653 64.5134 m
  147.0901 57.0802 L
  150.8068 50.2416 L
  154.6722 44.1463 L
  159.2810 38.9431 L
  164.1871 34.6318 L
  169.3906 31.5099 L
  174.5940 29.2799 L
  180.3922 27.9419 L
  185.8930 27.9419 L
  191.2451 28.8339 L
  196.8946 30.7665 L
  202.0980 34.0372 L
  206.8555 38.3484 L
  211.6129 43.5517 L
  215.9243 38.3484 L
  221.1278 34.0372 L
  226.0339 30.7665 L
  231.5347 28.8339 L
  237.3328 27.9419 L
  242.5363 27.9419 L
  247.8884 29.2799 L
  253.3892 31.5099 L
  258.7413 34.6318 L
  263.4988 38.9431 L
  267.9589 44.1463 L
  272.1217 50.2416 L
  275.5411 57.0802 L
  278.8118 64.5134 L
  282.5286 63.4727 L
  286.6913 63.9187 L
  290.7054 64.9594 L
  294.5708 67.3380 L
  298.1389 70.7573 L
  300.9637 75.2172 L
  303.4911 80.5691 L
  304.9778 86.3671 L
  306.3158 92.6110 L
  306.7618 99.0035 L
  306.3158 105.6934 L
  304.9778 112.0860 L
  303.4911 117.7353 L
  300.9637 122.7899 L
  298.1389 127.2498 L
  294.5708 130.6691 L
  290.7054 133.3450 L
  286.6913 134.5343 L
  282.5286 134.8317 L
  278.8118 133.4937 L
  275.5411 141.0756 L
  272.1217 148.2115 L
  267.9589 154.3067 L
  263.4988 159.2127 L
  258.7413 163.8212 L
  253.3892 166.7945 L
  247.8884 169.1732 L
  242.5363 170.2138 L
  237.3328 170.2138 L
  231.5347 169.4705 L
  226.0339 167.2405 L
  221.1278 163.9699 L
  215.9243 159.9560 L
  211.6129 154.9014 L
  206.8555 159.9560 L
  202.0980 163.9699 L
  196.8946 167.2405 L
  191.2451 169.4705 L
  185.8930 170.2138 L
  180.3922 170.2138 L
  174.5940 169.1732 L
  169.3906 166.7945 L
  164.1871 163.8212 L
  159.2810 159.2127 L
  154.6722 154.3067 L
  150.8068 148.2115 L
  147.0901 141.0756 L
  144.2653 133.4937 L
  140.2512 134.8317 L
  136.0885 134.5343 L
  132.2230 133.3450 L
  128.3576 130.6691 L
  124.9382 127.2498 L
  122.1135 122.7899 L
  119.4374 117.7353 L
  117.5047 112.0860 L
  116.6127 105.6934 L
  116.4640 99.0035 L
  116.6127 92.6110 L
  117.5047 86.3671 L
  119.4374 80.5691 L
  122.1135 75.2172 L
  124.9382 70.7573 L
  128.3576 67.3380 L
  132.2230 64.9594 L
  136.0885 63.9187 L
  140.2512 63.4727 L
  144.2653 64.5134 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 166.5977 94.5977 0 Tp
TP
/_Helvetica 17.7500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Internet\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.251 k
0.2500 w
  0.000 0.000 0.000 1.000 K
1 j
  136.0926 485.3208 m
  56.6634 485.3208 L
  56.6634 477.4084 L
  136.0926 477.4084 L
  136.0926 485.3208 L
B
U
u
  136.0926 485.3208 m
  56.6634 485.3208 L
  56.6634 477.4084 L
  136.0926 477.4084 L
  136.0926 485.3208 L
S
U
0.0000 w
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  59.1004 479.5413 m
  59.0998 479.8264  58.7897 480.0040  58.5415 479.8613 C
  58.2936 479.7183  58.2943 479.3618  58.5427 479.2196 C
  58.7914 479.0779  59.1009 479.2566  59.1004 479.5413 C
s
U
u
  58.4122 479.5184 m
  58.7507 479.8551 L
  58.7507 479.1817 L
  59.0891 479.5745 L
S
U
  0.000 0.000 0.000 1.000 K
  0.486 0.000 1.000 0.000 k
u
  60.2287 479.5974 m
  60.2281 479.8825  59.9179 480.0601  59.6698 479.9174 C
  59.4219 479.7744  59.4225 479.4179  59.6710 479.2757 C
  59.9196 479.1340  60.2291 479.3127  60.2287 479.5974 C
B
U
  0.000 0.000 0.000 1.000 k
u
  60.2287 479.5974 m
  60.2281 479.8825  59.9179 480.0601  59.6698 479.9174 C
  59.4219 479.7744  59.4225 479.4179  59.6710 479.2757 C
  59.9196 479.1340  60.2291 479.3127  60.2287 479.5974 C
s
U
u
  0.000 0.000 0.000 0.502 K
  58.4686 481.0896 m
  58.4573 481.0896 L
  58.4460 481.0784 L
  58.4348 481.0672 L
  58.4235 481.0560 L
  58.4122 481.0560 L
  58.4122 481.0447 L
  58.4009 481.0335 L
  58.3896 481.0223 L
  58.3896 481.0111 L
  58.3783 481.0111 L
  58.3783 480.9998 L
  58.3783 480.9886 L
  58.3671 480.9774 L
  58.3671 480.9662 L
  58.3671 480.9550 L
  58.3671 480.9437 L
  58.3671 480.9325 L
  58.3558 480.9213 L
  58.3558 480.9101 L
  58.3558 480.8988 L
  58.3558 480.8876 L
  58.3558 480.8764 L
  58.3558 480.8652 L
  58.3558 480.8539 L
  58.3558 480.8427 L
  58.3558 480.8315 L
  58.3558 480.8203 L
  58.3558 480.8090 L
  58.3558 480.7866 L
  58.3558 480.7642 L
  58.3558 480.7529 L
  58.3558 480.7305 L
  58.3671 480.7080 L
  58.3671 480.6856 L
  58.3671 480.6744 L
  58.3783 480.6519 L
  58.3783 480.6407 L
  58.3896 480.6183 L
  58.4009 480.6070 L
  58.4009 480.5846 L
  58.4122 480.5734 L
  58.4235 480.5509 L
  58.4348 480.5397 L
  58.4460 480.5285 L
  58.4460 480.5172 L
  58.4573 480.5060 L
  58.4799 480.4948 L
  58.4912 480.4836 L
  58.5025 480.4724 L
  58.5137 480.4611 L
  58.5250 480.4499 L
  58.5476 480.4499 L
  58.5589 480.4387 L
  58.5814 480.4387 L
  58.5927 480.4275 L
  58.6153 480.4275 L
  58.6378 480.4162 L
  58.6491 480.4162 L
  58.6717 480.4162 L
  58.6943 480.4162 L
  58.7168 480.4162 L
  58.7394 480.4162 L
  58.7507 480.4162 L
  58.7732 480.4275 L
  58.7958 480.4275 L
  58.8071 480.4387 L
  58.8296 480.4387 L
  58.8409 480.4499 L
  58.8635 480.4499 L
  58.8748 480.4611 L
  58.8861 480.4724 L
  58.8973 480.4836 L
  58.9086 480.4948 L
  58.9312 480.5060 L
  58.9425 480.5172 L
  58.9538 480.5285 L
  58.9538 480.5397 L
  58.9650 480.5509 L
  58.9763 480.5734 L
  58.9876 480.5846 L
  58.9876 480.6070 L
  58.9989 480.6183 L
  59.0102 480.6407 L
  59.0102 480.6519 L
  59.0214 480.6744 L
  59.0214 480.6856 L
  59.0214 480.7080 L
  59.0327 480.7305 L
  59.0327 480.7529 L
  59.0327 480.7642 L
  59.0327 480.7866 L
  59.0327 480.8090 L
  59.0327 480.8203 L
  59.0327 480.8427 L
  59.0327 480.8539 L
  59.0327 480.8652 L
  59.0327 480.8764 L
  59.0327 480.8876 L
  59.0327 480.9101 L
  59.0327 480.9213 L
  59.0327 480.9325 L
  59.0327 480.9437 L
  59.0214 480.9550 L
  59.0214 480.9662 L
  59.0214 480.9774 L
  59.0214 480.9886 L
  59.0214 480.9998 L
  59.0102 481.0111 L
  59.0102 481.0223 L
  58.9989 481.0223 L
  58.9989 481.0335 L
  58.9876 481.0447 L
  58.9763 481.0560 L
  58.9650 481.0672 L
  58.9538 481.0672 L
  58.9538 481.0784 L
  58.9425 481.0784 L
  58.9312 481.0896 L
  58.9199 481.0896 L
S
U
u
  60.6123 479.2939 m
  60.6123 479.9112 L
S
U
u
  60.9508 479.2939 m
  60.9508 479.9112 L
S
U
u
  60.4431 479.7990 m
  61.1200 479.7990 L
S
U
u
  60.4431 479.4061 m
  61.1200 479.4061 L
S
U
  0.000 0.000 0.000 1.000 K
  0.486 0.000 1.000 0.000 k
u
  60.2287 480.8320 m
  60.2281 481.1171  59.9179 481.2947  59.6698 481.1520 C
  59.4219 481.0089  59.4225 480.6524  59.6710 480.5103 C
  59.9196 480.3685  60.2291 480.5473  60.2287 480.8319 C
B
U
  0.000 0.000 0.000 1.000 k
u
  60.2287 480.8320 m
  60.2281 481.1171  59.9179 481.2947  59.6698 481.1520 C
  59.4219 481.0089  59.4225 480.6524  59.6710 480.5103 C
  59.9196 480.3685  60.2291 480.5473  60.2287 480.8319 C
s
U
  0.486 0.000 1.000 0.000 k
u
  62.0339 479.5974 m
  62.0333 479.8825  61.7231 480.0601  61.4750 479.9174 C
  61.2271 479.7744  61.2277 479.4179  61.4762 479.2757 C
  61.7249 479.1340  62.0343 479.3127  62.0339 479.5974 C
B
U
  0.000 0.000 0.000 1.000 k
u
  62.0339 479.5974 m
  62.0333 479.8825  61.7231 480.0601  61.4750 479.9174 C
  61.2271 479.7744  61.2277 479.4179  61.4762 479.2757 C
  61.7249 479.1340  62.0343 479.3127  62.0339 479.5974 C
s
U
  0.486 0.000 1.000 0.000 k
u
  65.6443 479.5413 m
  65.6438 479.7832  65.3806 479.9338  65.1701 479.8128 C
  64.9597 479.6914  64.9603 479.3889  65.1711 479.2683 C
  65.3821 479.1480  65.6447 479.2997  65.6443 479.5412 C
B
U
  0.000 0.000 0.000 1.000 k
u
  65.6443 479.5413 m
  65.6438 479.7832  65.3806 479.9338  65.1701 479.8128 C
  64.9597 479.6914  64.9603 479.3889  65.1711 479.2683 C
  65.3821 479.1480  65.6447 479.2997  65.6443 479.5412 C
s
U
  0.486 0.000 1.000 0.000 k
u
  64.5725 479.5413 m
  64.5719 479.7832  64.3088 479.9338  64.0982 479.8128 C
  63.8879 479.6914  63.8885 479.3889  64.0993 479.2683 C
  64.3103 479.1480  64.5728 479.2997  64.5725 479.5412 C
B
U
  0.000 0.000 0.000 1.000 k
u
  64.5725 479.5413 m
  64.5719 479.7832  64.3088 479.9338  64.0982 479.8128 C
  63.8879 479.6914  63.8885 479.3889  64.0993 479.2683 C
  64.3103 479.1480  64.5728 479.2997  64.5725 479.5412 C
s
U
u
  0.000 0.000 0.000 1.000 k
  66.9869 480.4724 m
  65.8587 480.4724 L
  65.8587 479.3500 L
  66.9869 479.3500 L
  66.9869 480.4724 L
B
U
u
  66.9869 480.4724 m
  65.8587 480.4724 L
  65.8587 479.3500 L
  66.9869 479.3500 L
  66.9869 480.4724 L
S
U
u
  0.000 0.000 0.000 0.051 k
  66.8177 480.3040 m
  66.0279 480.3040 L
  66.0279 479.5184 L
  66.8177 479.5184 L
  66.8177 480.3040 L
B
U
u
  66.8177 480.3040 m
  66.0279 480.3040 L
  66.0279 479.5184 L
  66.8177 479.5184 L
  66.8177 480.3040 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 67.5511 478.6205 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.4537 478.6205 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 69.4127 478.6205 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 70.2589 478.6205 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.2179 478.6205 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 72.1205 478.6205 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 67.5511 481.2019 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.4537 481.2019 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 69.4127 481.2019 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 70.0896 481.2019 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 70.6425 481.2019 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.0487 481.2019 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.6015 481.2019 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.9513 481.2019 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 72.5041 481.2019 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  0.486 0.000 1.000 0.000 k
u
  72.5831 479.5413 m
  72.5826 479.7832  72.3194 479.9338  72.1089 479.8128 C
  71.8985 479.6914  71.8991 479.3889  72.1099 479.2683 C
  72.3209 479.1480  72.5835 479.2997  72.5831 479.5412 C
B
U
  0.000 0.000 0.000 1.000 k
u
  72.5831 479.5413 m
  72.5826 479.7832  72.3194 479.9338  72.1089 479.8128 C
  71.8985 479.6914  71.8991 479.3889  72.1099 479.2683 C
  72.3209 479.1480  72.5835 479.2997  72.5831 479.5412 C
s
U
  0.486 0.000 1.000 0.000 k
u
  71.6805 479.5413 m
  71.6800 479.7832  71.4168 479.9338  71.2063 479.8128 C
  70.9959 479.6914  70.9965 479.3889  71.2073 479.2683 C
  71.4183 479.1480  71.6809 479.2997  71.6805 479.5412 C
B
U
  0.000 0.000 0.000 1.000 k
u
  71.6805 479.5413 m
  71.6800 479.7832  71.4168 479.9338  71.2063 479.8128 C
  70.9959 479.6914  70.9965 479.3889  71.2073 479.2683 C
  71.4183 479.1480  71.6809 479.2997  71.6805 479.5412 C
s
U
  0.486 0.000 1.000 0.000 k
u
  70.7215 479.5413 m
  70.7209 479.7832  70.4578 479.9338  70.2472 479.8128 C
  70.0369 479.6914  70.0375 479.3889  70.2483 479.2683 C
  70.4592 479.1480  70.7218 479.2997  70.7215 479.5412 C
B
U
  0.000 0.000 0.000 1.000 k
u
  70.7215 479.5413 m
  70.7209 479.7832  70.4578 479.9338  70.2472 479.8128 C
  70.0369 479.6914  70.0375 479.3889  70.2483 479.2683 C
  70.4592 479.1480  70.7218 479.2997  70.7215 479.5412 C
s
U
  0.486 0.000 1.000 0.000 k
u
  69.8753 479.5413 m
  69.8747 479.7832  69.6116 479.9338  69.4010 479.8128 C
  69.1907 479.6914  69.1913 479.3889  69.4021 479.2683 C
  69.6131 479.1480  69.8756 479.2997  69.8753 479.5412 C
B
U
  0.000 0.000 0.000 1.000 k
u
  69.8753 479.5413 m
  69.8747 479.7832  69.6116 479.9338  69.4010 479.8128 C
  69.1907 479.6914  69.1913 479.3889  69.4021 479.2683 C
  69.6131 479.1480  69.8756 479.2997  69.8753 479.5412 C
s
U
  0.486 0.000 1.000 0.000 k
u
  68.9163 479.5413 m
  68.9157 479.7832  68.6526 479.9338  68.4420 479.8128 C
  68.2317 479.6914  68.2322 479.3889  68.4430 479.2683 C
  68.6540 479.1480  68.9166 479.2997  68.9163 479.5412 C
B
U
  0.000 0.000 0.000 1.000 k
u
  68.9163 479.5413 m
  68.9157 479.7832  68.6526 479.9338  68.4420 479.8128 C
  68.2317 479.6914  68.2322 479.3889  68.4430 479.2683 C
  68.6540 479.1480  68.9166 479.2997  68.9163 479.5412 C
s
U
  0.486 0.000 1.000 0.000 k
u
  68.0136 479.5413 m
  68.0131 479.7832  67.7500 479.9338  67.5394 479.8128 C
  67.3291 479.6914  67.3296 479.3889  67.5404 479.2683 C
  67.7514 479.1480  68.0140 479.2997  68.0136 479.5412 C
B
U
  0.000 0.000 0.000 1.000 k
u
  68.0136 479.5413 m
  68.0131 479.7832  67.7500 479.9338  67.5394 479.8128 C
  67.3291 479.6914  67.3296 479.3889  67.5404 479.2683 C
  67.7514 479.1480  68.0140 479.2997  68.0136 479.5412 C
s
U
  0.486 0.000 1.000 0.000 k
u
  72.5831 480.7758 m
  72.5826 481.0177  72.3194 481.1684  72.1089 481.0473 C
  71.8985 480.9259  71.8991 480.6235  72.1099 480.5028 C
  72.3209 480.3826  72.5835 480.5342  72.5831 480.7758 C
B
U
  0.000 0.000 0.000 1.000 k
u
  72.5831 480.7758 m
  72.5826 481.0177  72.3194 481.1684  72.1089 481.0473 C
  71.8985 480.9259  71.8991 480.6235  72.1099 480.5028 C
  72.3209 480.3826  72.5835 480.5342  72.5831 480.7758 C
s
U
  0.486 0.000 1.000 0.000 k
u
  71.6805 480.7758 m
  71.6800 481.0177  71.4168 481.1684  71.2063 481.0473 C
  70.9959 480.9259  70.9965 480.6235  71.2073 480.5028 C
  71.4183 480.3826  71.6809 480.5342  71.6805 480.7758 C
B
U
  0.000 0.000 0.000 1.000 k
u
  71.6805 480.7758 m
  71.6800 481.0177  71.4168 481.1684  71.2063 481.0473 C
  70.9959 480.9259  70.9965 480.6235  71.2073 480.5028 C
  71.4183 480.3826  71.6809 480.5342  71.6805 480.7758 C
s
U
  0.486 0.000 1.000 0.000 k
u
  70.7215 480.7758 m
  70.7209 481.0177  70.4578 481.1684  70.2472 481.0473 C
  70.0369 480.9259  70.0375 480.6235  70.2483 480.5028 C
  70.4592 480.3826  70.7218 480.5342  70.7215 480.7758 C
B
U
  0.000 0.000 0.000 1.000 k
u
  70.7215 480.7758 m
  70.7209 481.0177  70.4578 481.1684  70.2472 481.0473 C
  70.0369 480.9259  70.0375 480.6235  70.2483 480.5028 C
  70.4592 480.3826  70.7218 480.5342  70.7215 480.7758 C
s
U
  0.486 0.000 1.000 0.000 k
u
  69.8753 480.7758 m
  69.8747 481.0177  69.6116 481.1684  69.4010 481.0473 C
  69.1907 480.9259  69.1913 480.6235  69.4021 480.5028 C
  69.6131 480.3826  69.8756 480.5342  69.8753 480.7758 C
B
U
  0.000 0.000 0.000 1.000 k
u
  69.8753 480.7758 m
  69.8747 481.0177  69.6116 481.1684  69.4010 481.0473 C
  69.1907 480.9259  69.1913 480.6235  69.4021 480.5028 C
  69.6131 480.3826  69.8756 480.5342  69.8753 480.7758 C
s
U
  0.486 0.000 1.000 0.000 k
u
  68.9163 480.7758 m
  68.9157 481.0177  68.6526 481.1684  68.4420 481.0473 C
  68.2317 480.9259  68.2322 480.6235  68.4430 480.5028 C
  68.6540 480.3826  68.9166 480.5342  68.9163 480.7758 C
B
U
  0.000 0.000 0.000 1.000 k
u
  68.9163 480.7758 m
  68.9157 481.0177  68.6526 481.1684  68.4420 481.0473 C
  68.2317 480.9259  68.2322 480.6235  68.4430 480.5028 C
  68.6540 480.3826  68.9166 480.5342  68.9163 480.7758 C
s
U
  0.486 0.000 1.000 0.000 k
u
  68.0136 480.7758 m
  68.0131 481.0177  67.7500 481.1684  67.5394 481.0473 C
  67.3291 480.9259  67.3296 480.6235  67.5404 480.5028 C
  67.7514 480.3826  68.0140 480.5342  68.0136 480.7758 C
B
U
  0.000 0.000 0.000 1.000 k
u
  68.0136 480.7758 m
  68.0131 481.0177  67.7500 481.1684  67.5394 481.0473 C
  67.3291 480.9259  67.3296 480.6235  67.5404 480.5028 C
  67.7514 480.3826  68.0140 480.5342  68.0136 480.7758 C
s
U
0 To
1.0000 0.0000 0.0000 1.0000 65.1817 478.6205 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  0.486 0.000 1.000 0.000 k
u
  65.6443 480.7758 m
  65.6438 481.0177  65.3806 481.1684  65.1701 481.0473 C
  64.9597 480.9259  64.9603 480.6235  65.1711 480.5028 C
  65.3821 480.3826  65.6447 480.5342  65.6443 480.7758 C
B
U
  0.000 0.000 0.000 1.000 k
u
  65.6443 480.7758 m
  65.6438 481.0177  65.3806 481.1684  65.1701 481.0473 C
  64.9597 480.9259  64.9603 480.6235  65.1711 480.5028 C
  65.3821 480.3826  65.6447 480.5342  65.6443 480.7758 C
s
U
  0.486 0.000 1.000 0.000 k
u
  64.5725 480.7758 m
  64.5719 481.0177  64.3088 481.1684  64.0982 481.0473 C
  63.8879 480.9259  63.8885 480.6235  64.0993 480.5028 C
  64.3103 480.3826  64.5728 480.5342  64.5725 480.7758 C
B
U
  0.000 0.000 0.000 1.000 k
u
  64.5725 480.7758 m
  64.5719 481.0177  64.3088 481.1684  64.0982 481.0473 C
  63.8879 480.9259  63.8885 480.6235  64.0993 480.5028 C
  64.3103 480.3826  64.5728 480.5342  64.5725 480.7758 C
s
U
  0.486 0.000 1.000 0.000 k
u
  65.6443 481.9543 m
  65.6438 482.1962  65.3806 482.3468  65.1701 482.2258 C
  64.9597 482.1044  64.9603 481.8019  65.1711 481.6813 C
  65.3821 481.5610  65.6447 481.7127  65.6443 481.9542 C
B
U
  0.000 0.000 0.000 1.000 k
u
  65.6443 481.9543 m
  65.6438 482.1962  65.3806 482.3468  65.1701 482.2258 C
  64.9597 482.1044  64.9603 481.8019  65.1711 481.6813 C
  65.3821 481.5610  65.6447 481.7127  65.6443 481.9542 C
s
U
  0.486 0.000 1.000 0.000 k
u
  64.5725 481.9543 m
  64.5719 482.1962  64.3088 482.3468  64.0982 482.2258 C
  63.8879 482.1044  63.8885 481.8019  64.0993 481.6813 C
  64.3103 481.5610  64.5728 481.7127  64.5725 481.9542 C
B
U
  0.000 0.000 0.000 1.000 k
u
  64.5725 481.9543 m
  64.5719 482.1962  64.3088 482.3468  64.0982 482.2258 C
  63.8879 482.1044  63.8885 481.8019  64.0993 481.6813 C
  64.3103 481.5610  64.5728 481.7127  64.5725 481.9542 C
s
U
u
  91.1880 478.6766 m
  91.1880 477.7788 L
  98.8602 477.7788 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 99.2550 477.6104 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(B\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 0.502 K
1 j
  107.8862 484.2883 m
  91.0752 484.2883 L
  91.0752 478.9011 L
  107.8862 478.9011 L
  107.8862 484.2883 L
S
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  107.7170 484.0638 m
  91.2444 484.0638 L
  91.2444 479.1256 L
  107.7170 479.1256 L
  107.7170 484.0638 L
B
U
u
  0.000 0.000 0.000 0.000 K
  107.7170 484.0638 m
  91.2444 484.0638 L
  91.2444 479.1256 L
  107.7170 479.1256 L
  107.7170 484.0638 L
S
U
u
  0.000 0.000 0.000 1.000 K
  107.8862 478.6766 m
  107.8862 477.7788 L
  100.2141 477.7788 L
S
U
u
  0.000 0.000 0.000 1.000 k
  105.0091 482.1558 m
  107.4913 482.1558 L
  107.4913 483.2782 L
  106.9836 483.2782 L
  106.9836 483.6710 L
  106.5323 483.6710 L
  106.5323 484.0638 L
  106.0246 484.0638 L
  106.0246 483.6710 L
  105.5169 483.6710 L
  105.5169 483.2782 L
  105.0091 483.2782 L
  105.0091 482.1558 L
B
U
u
  105.0091 482.1558 m
  107.4913 482.1558 L
  107.4913 483.2782 L
  106.9836 483.2782 L
  106.9836 483.6710 L
  106.5323 483.6710 L
  106.5323 484.0638 L
  106.0246 484.0638 L
  106.0246 483.6710 L
  105.5169 483.6710 L
  105.5169 483.2782 L
  105.0091 483.2782 L
  105.0091 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 105.6861 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 106.2389 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 106.7918 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  107.4913 481.0335 m
  105.0091 481.0335 L
  105.0091 479.9112 L
  105.5169 479.9112 L
  105.5169 479.5184 L
  105.9682 479.5184 L
  105.9682 479.1256 L
  106.4759 479.1256 L
  106.4759 479.5184 L
  106.9836 479.5184 L
  106.9836 479.9112 L
  107.4913 479.9112 L
  107.4913 481.0335 L
B
U
u
  107.4913 481.0335 m
  105.0091 481.0335 L
  105.0091 479.9112 L
  105.5169 479.9112 L
  105.5169 479.5184 L
  105.9682 479.5184 L
  105.9682 479.1256 L
  106.4759 479.1256 L
  106.4759 479.5184 L
  106.9836 479.5184 L
  106.9836 479.9112 L
  107.4913 479.9112 L
  107.4913 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 105.8553 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 106.4082 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  94.1215 482.1558 m
  96.6036 482.1558 L
  96.6036 483.2782 L
  96.0959 483.2782 L
  96.0959 483.6710 L
  95.6446 483.6710 L
  95.6446 484.0638 L
  95.1369 484.0638 L
  95.1369 483.6710 L
  94.6292 483.6710 L
  94.6292 483.2782 L
  94.1215 483.2782 L
  94.1215 482.1558 L
B
U
u
  94.1215 482.1558 m
  96.6036 482.1558 L
  96.6036 483.2782 L
  96.0959 483.2782 L
  96.0959 483.6710 L
  95.6446 483.6710 L
  95.6446 484.0638 L
  95.1369 484.0638 L
  95.1369 483.6710 L
  94.6292 483.6710 L
  94.6292 483.2782 L
  94.1215 483.2782 L
  94.1215 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 94.9677 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 95.5205 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  96.6036 481.0335 m
  94.1215 481.0335 L
  94.1215 479.9112 L
  94.6292 479.9112 L
  94.6292 479.5184 L
  95.0805 479.5184 L
  95.0805 479.1256 L
  95.5882 479.1256 L
  95.5882 479.5184 L
  96.0959 479.5184 L
  96.0959 479.9112 L
  96.6036 479.9112 L
  96.6036 481.0335 L
B
U
u
  96.6036 481.0335 m
  94.1215 481.0335 L
  94.1215 479.9112 L
  94.6292 479.9112 L
  94.6292 479.5184 L
  95.0805 479.5184 L
  95.0805 479.1256 L
  95.5882 479.1256 L
  95.5882 479.5184 L
  96.0959 479.5184 L
  96.0959 479.9112 L
  96.6036 479.9112 L
  96.6036 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 94.9677 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 95.5205 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  96.8857 482.1558 m
  99.3679 482.1558 L
  99.3679 483.2782 L
  98.8602 483.2782 L
  98.8602 483.6710 L
  98.4089 483.6710 L
  98.4089 484.0638 L
  97.9011 484.0638 L
  97.9011 483.6710 L
  97.3934 483.6710 L
  97.3934 483.2782 L
  96.8857 483.2782 L
  96.8857 482.1558 L
B
U
u
  96.8857 482.1558 m
  99.3679 482.1558 L
  99.3679 483.2782 L
  98.8602 483.2782 L
  98.8602 483.6710 L
  98.4089 483.6710 L
  98.4089 484.0638 L
  97.9011 484.0638 L
  97.9011 483.6710 L
  97.3934 483.6710 L
  97.3934 483.2782 L
  96.8857 483.2782 L
  96.8857 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 97.7319 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 98.2847 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  99.3679 481.0335 m
  96.8857 481.0335 L
  96.8857 479.9112 L
  97.3934 479.9112 L
  97.3934 479.5184 L
  97.8447 479.5184 L
  97.8447 479.1256 L
  98.3524 479.1256 L
  98.3524 479.5184 L
  98.8602 479.5184 L
  98.8602 479.9112 L
  99.3679 479.9112 L
  99.3679 481.0335 L
B
U
u
  99.3679 481.0335 m
  96.8857 481.0335 L
  96.8857 479.9112 L
  97.3934 479.9112 L
  97.3934 479.5184 L
  97.8447 479.5184 L
  97.8447 479.1256 L
  98.3524 479.1256 L
  98.3524 479.5184 L
  98.8602 479.5184 L
  98.8602 479.9112 L
  99.3679 479.9112 L
  99.3679 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 97.7319 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 98.2847 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  99.5935 482.1558 m
  102.0757 482.1558 L
  102.0757 483.2782 L
  101.5680 483.2782 L
  101.5680 483.6710 L
  101.1167 483.6710 L
  101.1167 484.0638 L
  100.6090 484.0638 L
  100.6090 483.6710 L
  100.1012 483.6710 L
  100.1012 483.2782 L
  99.5935 483.2782 L
  99.5935 482.1558 L
B
U
u
  99.5935 482.1558 m
  102.0757 482.1558 L
  102.0757 483.2782 L
  101.5680 483.2782 L
  101.5680 483.6710 L
  101.1167 483.6710 L
  101.1167 484.0638 L
  100.6090 484.0638 L
  100.6090 483.6710 L
  100.1012 483.6710 L
  100.1012 483.2782 L
  99.5935 483.2782 L
  99.5935 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 100.2141 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 100.7669 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.3198 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  102.0757 481.0335 m
  99.5935 481.0335 L
  99.5935 479.9112 L
  100.1012 479.9112 L
  100.1012 479.5184 L
  100.5525 479.5184 L
  100.5525 479.1256 L
  101.0603 479.1256 L
  101.0603 479.5184 L
  101.5680 479.5184 L
  101.5680 479.9112 L
  102.0757 479.9112 L
  102.0757 481.0335 L
B
U
u
  102.0757 481.0335 m
  99.5935 481.0335 L
  99.5935 479.9112 L
  100.1012 479.9112 L
  100.1012 479.5184 L
  100.5525 479.5184 L
  100.5525 479.1256 L
  101.0603 479.1256 L
  101.0603 479.5184 L
  101.5680 479.5184 L
  101.5680 479.9112 L
  102.0757 479.9112 L
  102.0757 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 100.4397 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 100.9926 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  102.3013 482.1558 m
  104.7835 482.1558 L
  104.7835 483.2782 L
  104.2758 483.2782 L
  104.2758 483.6710 L
  103.8245 483.6710 L
  103.8245 484.0638 L
  103.3168 484.0638 L
  103.3168 483.6710 L
  102.8090 483.6710 L
  102.8090 483.2782 L
  102.3013 483.2782 L
  102.3013 482.1558 L
B
U
u
  102.3013 482.1558 m
  104.7835 482.1558 L
  104.7835 483.2782 L
  104.2758 483.2782 L
  104.2758 483.6710 L
  103.8245 483.6710 L
  103.8245 484.0638 L
  103.3168 484.0638 L
  103.3168 483.6710 L
  102.8090 483.6710 L
  102.8090 483.2782 L
  102.3013 483.2782 L
  102.3013 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 102.9783 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 103.5311 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 104.0840 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  104.7835 481.0335 m
  102.3013 481.0335 L
  102.3013 479.9112 L
  102.8090 479.9112 L
  102.8090 479.5184 L
  103.2604 479.5184 L
  103.2604 479.1256 L
  103.7681 479.1256 L
  103.7681 479.5184 L
  104.2758 479.5184 L
  104.2758 479.9112 L
  104.7835 479.9112 L
  104.7835 481.0335 L
B
U
u
  104.7835 481.0335 m
  102.3013 481.0335 L
  102.3013 479.9112 L
  102.8090 479.9112 L
  102.8090 479.5184 L
  103.2604 479.5184 L
  103.2604 479.1256 L
  103.7681 479.1256 L
  103.7681 479.5184 L
  104.2758 479.5184 L
  104.2758 479.9112 L
  104.7835 479.9112 L
  104.7835 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 103.1475 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 103.7004 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  91.4137 482.1558 m
  93.8958 482.1558 L
  93.8958 483.2782 L
  93.3881 483.2782 L
  93.3881 483.6710 L
  92.9368 483.6710 L
  92.9368 484.0638 L
  92.4291 484.0638 L
  92.4291 483.6710 L
  91.9214 483.6710 L
  91.9214 483.2782 L
  91.4137 483.2782 L
  91.4137 482.1558 L
B
U
u
  91.4137 482.1558 m
  93.8958 482.1558 L
  93.8958 483.2782 L
  93.3881 483.2782 L
  93.3881 483.6710 L
  92.9368 483.6710 L
  92.9368 484.0638 L
  92.4291 484.0638 L
  92.4291 483.6710 L
  91.9214 483.6710 L
  91.9214 483.2782 L
  91.4137 483.2782 L
  91.4137 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 92.3163 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 92.8691 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  93.8958 481.0335 m
  91.4137 481.0335 L
  91.4137 479.9112 L
  91.9214 479.9112 L
  91.9214 479.5184 L
  92.3727 479.5184 L
  92.3727 479.1256 L
  92.8804 479.1256 L
  92.8804 479.5184 L
  93.3881 479.5184 L
  93.3881 479.9112 L
  93.8958 479.9112 L
  93.8958 481.0335 L
B
U
u
  93.8958 481.0335 m
  91.4137 481.0335 L
  91.4137 479.9112 L
  91.9214 479.9112 L
  91.9214 479.5184 L
  92.3727 479.5184 L
  92.3727 479.1256 L
  92.8804 479.1256 L
  92.8804 479.5184 L
  93.3881 479.5184 L
  93.3881 479.9112 L
  93.8958 479.9112 L
  93.8958 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 92.3163 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 92.8691 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 57.3411 479.6306 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(E\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 57.3411 480.2928 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 57.3411 480.5734 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 57.3411 481.1233 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 57.3411 481.6732 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 57.3411 482.0099 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 57.3411 482.5599 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 57.3411 483.1098 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  74.0385 478.6766 m
  74.0385 477.7788 L
  81.7107 477.7788 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 82.1056 477.6104 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 0.502 K
1 j
  90.7367 484.2883 m
  73.9257 484.2883 L
  73.9257 478.9011 L
  90.7367 478.9011 L
  90.7367 484.2883 L
S
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  90.5675 484.0638 m
  74.0949 484.0638 L
  74.0949 479.1256 L
  90.5675 479.1256 L
  90.5675 484.0638 L
B
U
u
  0.000 0.000 0.000 0.000 K
  90.5675 484.0638 m
  74.0949 484.0638 L
  74.0949 479.1256 L
  90.5675 479.1256 L
  90.5675 484.0638 L
S
U
u
  0.000 0.000 0.000 1.000 K
  90.7367 478.6766 m
  90.7367 477.7788 L
  83.0646 477.7788 L
S
U
u
  0.000 0.000 0.000 1.000 k
  87.8597 482.1558 m
  90.3418 482.1558 L
  90.3418 483.2782 L
  89.8341 483.2782 L
  89.8341 483.6710 L
  89.3828 483.6710 L
  89.3828 484.0638 L
  88.8751 484.0638 L
  88.8751 483.6710 L
  88.3674 483.6710 L
  88.3674 483.2782 L
  87.8597 483.2782 L
  87.8597 482.1558 L
B
U
u
  87.8597 482.1558 m
  90.3418 482.1558 L
  90.3418 483.2782 L
  89.8341 483.2782 L
  89.8341 483.6710 L
  89.3828 483.6710 L
  89.3828 484.0638 L
  88.8751 484.0638 L
  88.8751 483.6710 L
  88.3674 483.6710 L
  88.3674 483.2782 L
  87.8597 483.2782 L
  87.8597 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 88.5366 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 89.0895 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 89.6423 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  90.3418 481.0335 m
  87.8597 481.0335 L
  87.8597 479.9112 L
  88.3674 479.9112 L
  88.3674 479.5184 L
  88.8187 479.5184 L
  88.8187 479.1256 L
  89.3264 479.1256 L
  89.3264 479.5184 L
  89.8341 479.5184 L
  89.8341 479.9112 L
  90.3418 479.9112 L
  90.3418 481.0335 L
B
U
u
  90.3418 481.0335 m
  87.8597 481.0335 L
  87.8597 479.9112 L
  88.3674 479.9112 L
  88.3674 479.5184 L
  88.8187 479.5184 L
  88.8187 479.1256 L
  89.3264 479.1256 L
  89.3264 479.5184 L
  89.8341 479.5184 L
  89.8341 479.9112 L
  90.3418 479.9112 L
  90.3418 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 88.7059 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 89.2587 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  77.0284 482.1558 m
  79.5106 482.1558 L
  79.5106 483.2782 L
  79.0029 483.2782 L
  79.0029 483.6710 L
  78.5516 483.6710 L
  78.5516 484.0638 L
  78.0438 484.0638 L
  78.0438 483.6710 L
  77.5361 483.6710 L
  77.5361 483.2782 L
  77.0284 483.2782 L
  77.0284 482.1558 L
B
U
u
  77.0284 482.1558 m
  79.5106 482.1558 L
  79.5106 483.2782 L
  79.0029 483.2782 L
  79.0029 483.6710 L
  78.5516 483.6710 L
  78.5516 484.0638 L
  78.0438 484.0638 L
  78.0438 483.6710 L
  77.5361 483.6710 L
  77.5361 483.2782 L
  77.0284 483.2782 L
  77.0284 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 77.8746 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 78.4274 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  79.5106 481.0335 m
  77.0284 481.0335 L
  77.0284 479.9112 L
  77.5361 479.9112 L
  77.5361 479.5184 L
  77.9874 479.5184 L
  77.9874 479.1256 L
  78.4951 479.1256 L
  78.4951 479.5184 L
  79.0029 479.5184 L
  79.0029 479.9112 L
  79.5106 479.9112 L
  79.5106 481.0335 L
B
U
u
  79.5106 481.0335 m
  77.0284 481.0335 L
  77.0284 479.9112 L
  77.5361 479.9112 L
  77.5361 479.5184 L
  77.9874 479.5184 L
  77.9874 479.1256 L
  78.4951 479.1256 L
  78.4951 479.5184 L
  79.0029 479.5184 L
  79.0029 479.9112 L
  79.5106 479.9112 L
  79.5106 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 77.8746 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 78.4274 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  79.7362 482.1558 m
  82.2184 482.1558 L
  82.2184 483.2782 L
  81.7107 483.2782 L
  81.7107 483.6710 L
  81.2594 483.6710 L
  81.2594 484.0638 L
  80.7517 484.0638 L
  80.7517 483.6710 L
  80.2439 483.6710 L
  80.2439 483.2782 L
  79.7362 483.2782 L
  79.7362 482.1558 L
B
U
u
  79.7362 482.1558 m
  82.2184 482.1558 L
  82.2184 483.2782 L
  81.7107 483.2782 L
  81.7107 483.6710 L
  81.2594 483.6710 L
  81.2594 484.0638 L
  80.7517 484.0638 L
  80.7517 483.6710 L
  80.2439 483.6710 L
  80.2439 483.2782 L
  79.7362 483.2782 L
  79.7362 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 80.5824 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 81.1353 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  82.2184 481.0335 m
  79.7362 481.0335 L
  79.7362 479.9112 L
  80.2439 479.9112 L
  80.2439 479.5184 L
  80.6952 479.5184 L
  80.6952 479.1256 L
  81.2030 479.1256 L
  81.2030 479.5184 L
  81.7107 479.5184 L
  81.7107 479.9112 L
  82.2184 479.9112 L
  82.2184 481.0335 L
B
U
u
  82.2184 481.0335 m
  79.7362 481.0335 L
  79.7362 479.9112 L
  80.2439 479.9112 L
  80.2439 479.5184 L
  80.6952 479.5184 L
  80.6952 479.1256 L
  81.2030 479.1256 L
  81.2030 479.5184 L
  81.7107 479.5184 L
  81.7107 479.9112 L
  82.2184 479.9112 L
  82.2184 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 80.5824 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 81.1353 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  82.4440 482.1558 m
  84.9262 482.1558 L
  84.9262 483.2782 L
  84.4185 483.2782 L
  84.4185 483.6710 L
  83.9672 483.6710 L
  83.9672 484.0638 L
  83.4595 484.0638 L
  83.4595 483.6710 L
  82.9518 483.6710 L
  82.9518 483.2782 L
  82.4440 483.2782 L
  82.4440 482.1558 L
B
U
u
  82.4440 482.1558 m
  84.9262 482.1558 L
  84.9262 483.2782 L
  84.4185 483.2782 L
  84.4185 483.6710 L
  83.9672 483.6710 L
  83.9672 484.0638 L
  83.4595 484.0638 L
  83.4595 483.6710 L
  82.9518 483.6710 L
  82.9518 483.2782 L
  82.4440 483.2782 L
  82.4440 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 83.0646 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 83.6174 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 84.1703 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  84.9262 481.0335 m
  82.4440 481.0335 L
  82.4440 479.9112 L
  82.9518 479.9112 L
  82.9518 479.5184 L
  83.4031 479.5184 L
  83.4031 479.1256 L
  83.9108 479.1256 L
  83.9108 479.5184 L
  84.4185 479.5184 L
  84.4185 479.9112 L
  84.9262 479.9112 L
  84.9262 481.0335 L
B
U
u
  84.9262 481.0335 m
  82.4440 481.0335 L
  82.4440 479.9112 L
  82.9518 479.9112 L
  82.9518 479.5184 L
  83.4031 479.5184 L
  83.4031 479.1256 L
  83.9108 479.1256 L
  83.9108 479.5184 L
  84.4185 479.5184 L
  84.4185 479.9112 L
  84.9262 479.9112 L
  84.9262 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 83.2902 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 83.8431 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  85.2083 482.1558 m
  87.6904 482.1558 L
  87.6904 483.2782 L
  87.1827 483.2782 L
  87.1827 483.6710 L
  86.7314 483.6710 L
  86.7314 484.0638 L
  86.2237 484.0638 L
  86.2237 483.6710 L
  85.7160 483.6710 L
  85.7160 483.2782 L
  85.2083 483.2782 L
  85.2083 482.1558 L
B
U
u
  85.2083 482.1558 m
  87.6904 482.1558 L
  87.6904 483.2782 L
  87.1827 483.2782 L
  87.1827 483.6710 L
  86.7314 483.6710 L
  86.7314 484.0638 L
  86.2237 484.0638 L
  86.2237 483.6710 L
  85.7160 483.6710 L
  85.7160 483.2782 L
  85.2083 483.2782 L
  85.2083 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 85.8288 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.3816 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.9345 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  87.6904 481.0335 m
  85.2083 481.0335 L
  85.2083 479.9112 L
  85.7160 479.9112 L
  85.7160 479.5184 L
  86.1673 479.5184 L
  86.1673 479.1256 L
  86.6750 479.1256 L
  86.6750 479.5184 L
  87.1827 479.5184 L
  87.1827 479.9112 L
  87.6904 479.9112 L
  87.6904 481.0335 L
B
U
u
  87.6904 481.0335 m
  85.2083 481.0335 L
  85.2083 479.9112 L
  85.7160 479.9112 L
  85.7160 479.5184 L
  86.1673 479.5184 L
  86.1673 479.1256 L
  86.6750 479.1256 L
  86.6750 479.5184 L
  87.1827 479.5184 L
  87.1827 479.9112 L
  87.6904 479.9112 L
  87.6904 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 86.0545 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 86.6073 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  74.3206 482.1558 m
  76.8028 482.1558 L
  76.8028 483.2782 L
  76.2950 483.2782 L
  76.2950 483.6710 L
  75.8437 483.6710 L
  75.8437 484.0638 L
  75.3360 484.0638 L
  75.3360 483.6710 L
  74.8283 483.6710 L
  74.8283 483.2782 L
  74.3206 483.2782 L
  74.3206 482.1558 L
B
U
u
  74.3206 482.1558 m
  76.8028 482.1558 L
  76.8028 483.2782 L
  76.2950 483.2782 L
  76.2950 483.6710 L
  75.8437 483.6710 L
  75.8437 484.0638 L
  75.3360 484.0638 L
  75.3360 483.6710 L
  74.8283 483.6710 L
  74.8283 483.2782 L
  74.3206 483.2782 L
  74.3206 482.1558 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 75.1668 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 75.7196 484.4566 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  76.8028 481.0335 m
  74.3206 481.0335 L
  74.3206 479.9112 L
  74.8283 479.9112 L
  74.8283 479.5184 L
  75.2796 479.5184 L
  75.2796 479.1256 L
  75.7873 479.1256 L
  75.7873 479.5184 L
  76.2950 479.5184 L
  76.2950 479.9112 L
  76.8028 479.9112 L
  76.8028 481.0335 L
B
U
u
  76.8028 481.0335 m
  74.3206 481.0335 L
  74.3206 479.9112 L
  74.8283 479.9112 L
  74.8283 479.5184 L
  75.2796 479.5184 L
  75.2796 479.1256 L
  75.7873 479.1256 L
  75.7873 479.5184 L
  76.2950 479.5184 L
  76.2950 479.9112 L
  76.8028 479.9112 L
  76.8028 481.0335 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 75.1668 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 75.7196 478.2277 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 65.1817 482.4364 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 0.502 K
1 j
  63.6586 482.7170 m
  64.2227 482.7170 L
S
U
u
  0.000 0.000 0.000 0.502 k
  0.000 0.000 0.000 1.000 K
  64.2791 482.9415 m
  64.2791 482.4925 L
  64.7304 482.7170 L
  64.2791 482.9415 L
B
U
u
  0.000 0.000 0.000 0.502 K
  64.2791 482.9415 m
  64.2791 482.4925 L
  64.7304 482.7170 L
  64.2791 482.9415 L
S
U
u
  0.000 0.000 0.000 0.251 k
  0.000 0.000 0.000 1.000 K
  134.2874 485.1300 m
  108.2247 485.1300 L
  108.2247 477.6104 L
  134.2874 477.6104 L
  134.2874 485.1300 L
B
U
u
  134.2874 485.1300 m
  108.2247 485.1300 L
  108.2247 477.6104 L
  134.2874 477.6104 L
  134.2874 485.1300 L
S
U
  0.000 0.000 0.000 0.051 k
u
  134.0730 484.0869 m
  134.0722 484.4584  133.6681 484.6898  133.3447 484.5039 C
  133.0217 484.3174  133.0226 483.8529  133.3463 483.6677 C
  133.6703 483.4830  134.0736 483.7159  134.0730 484.0868 C
B
U
  0.000 0.000 0.000 1.000 k
u
  134.0730 484.0869 m
  134.0722 484.4584  133.6681 484.6898  133.3447 484.5039 C
  133.0217 484.3174  133.0226 483.8529  133.3463 483.6677 C
  133.6703 483.4830  134.0736 483.7159  134.0730 484.0868 C
s
U
  0.000 0.000 0.000 0.051 k
u
  134.0730 478.6997 m
  134.0722 479.0712  133.6681 479.3026  133.3447 479.1167 C
  133.0217 478.9303  133.0226 478.4658  133.3463 478.2805 C
  133.6703 478.0958  134.0736 478.3287  134.0730 478.6996 C
B
U
  0.000 0.000 0.000 1.000 k
u
  134.0730 478.6997 m
  134.0722 479.0712  133.6681 479.3026  133.3447 479.1167 C
  133.0217 478.9303  133.0226 478.4658  133.3463 478.2805 C
  133.6703 478.0958  134.0736 478.3287  134.0730 478.6996 C
s
U
  0.000 0.000 0.000 0.051 k
u
  109.3642 484.0869 m
  109.3634 484.4584  108.9593 484.6898  108.6359 484.5039 C
  108.3129 484.3174  108.3138 483.8529  108.6375 483.6677 C
  108.9615 483.4830  109.3648 483.7159  109.3642 484.0868 C
B
U
  0.000 0.000 0.000 1.000 k
u
  109.3642 484.0869 m
  109.3634 484.4584  108.9593 484.6898  108.6359 484.5039 C
  108.3129 484.3174  108.3138 483.8529  108.6375 483.6677 C
  108.9615 483.4830  109.3648 483.7159  109.3642 484.0868 C
s
U
  0.000 0.000 0.000 0.051 k
u
  109.3642 478.6997 m
  109.3634 479.0712  108.9593 479.3026  108.6359 479.1167 C
  108.3129 478.9303  108.3138 478.4658  108.6375 478.2805 C
  108.9615 478.0958  109.3648 478.3287  109.3642 478.6996 C
B
U
  0.000 0.000 0.000 1.000 k
u
  109.3642 478.6997 m
  109.3634 479.0712  108.9593 479.3026  108.6359 479.1167 C
  108.3129 478.9303  108.3138 478.4658  108.6375 478.2805 C
  108.9615 478.0958  109.3648 478.3287  109.3642 478.6996 C
s
U
0 To
1.0000 0.0000 0.0000 1.0000 77.0484 493.4224 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Summit 48\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.251 k
0.2500 w
  0.000 0.000 0.000 1.000 K
1 j
  247.9994 463.6847 m
  168.6899 463.6847 L
  168.6899 455.7723 L
  247.9994 455.7723 L
  247.9994 463.6847 L
B
U
u
  247.9994 463.6847 m
  168.6899 463.6847 L
  168.6899 455.7723 L
  247.9994 455.7723 L
  247.9994 463.6847 L
S
U
0.0000 w
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  171.1232 457.9053 m
  171.1226 458.1904  170.8129 458.3679  170.5651 458.2253 C
  170.3176 458.0822  170.3183 457.7257  170.5663 457.5836 C
  170.8146 457.4418  171.1237 457.6205  171.1232 457.9052 C
s
U
u
  170.4360 457.8823 m
  170.7740 458.2190 L
  170.7740 457.5456 L
  171.1119 457.9384 L
S
U
  0.000 0.000 0.000 1.000 K
  0.486 0.000 1.000 0.000 k
u
  172.2498 457.9614 m
  172.2492 458.2465  171.9395 458.4241  171.6917 458.2814 C
  171.4442 458.1383  171.4448 457.7818  171.6929 457.6397 C
  171.9412 457.4979  172.2502 457.6767  172.2498 457.9613 C
B
U
  0.000 0.000 0.000 1.000 k
u
  172.2498 457.9614 m
  172.2492 458.2465  171.9395 458.4241  171.6917 458.2814 C
  171.4442 458.1383  171.4448 457.7818  171.6929 457.6397 C
  171.9412 457.4979  172.2502 457.6767  172.2498 457.9613 C
s
U
u
  0.000 0.000 0.000 0.502 K
  170.4923 459.4536 m
  170.4811 459.4536 L
  170.4698 459.4423 L
  170.4585 459.4311 L
  170.4473 459.4199 L
  170.4360 459.4199 L
  170.4360 459.4087 L
  170.4247 459.3975 L
  170.4135 459.3862 L
  170.4135 459.3750 L
  170.4022 459.3750 L
  170.4022 459.3638 L
  170.4022 459.3526 L
  170.3910 459.3413 L
  170.3910 459.3301 L
  170.3910 459.3189 L
  170.3910 459.3077 L
  170.3910 459.2964 L
  170.3797 459.2852 L
  170.3797 459.2740 L
  170.3797 459.2628 L
  170.3797 459.2516 L
  170.3797 459.2403 L
  170.3797 459.2291 L
  170.3797 459.2179 L
  170.3797 459.2067 L
  170.3797 459.1954 L
  170.3797 459.1842 L
  170.3797 459.1730 L
  170.3797 459.1505 L
  170.3797 459.1281 L
  170.3797 459.1169 L
  170.3797 459.0944 L
  170.3910 459.0720 L
  170.3910 459.0495 L
  170.3910 459.0383 L
  170.4022 459.0159 L
  170.4022 459.0046 L
  170.4135 458.9822 L
  170.4247 458.9710 L
  170.4247 458.9485 L
  170.4360 458.9373 L
  170.4473 458.9149 L
  170.4585 458.9036 L
  170.4698 458.8924 L
  170.4698 458.8812 L
  170.4811 458.8700 L
  170.5036 458.8587 L
  170.5149 458.8475 L
  170.5261 458.8363 L
  170.5374 458.8251 L
  170.5487 458.8138 L
  170.5712 458.8138 L
  170.5825 458.8026 L
  170.6050 458.8026 L
  170.6163 458.7914 L
  170.6388 458.7914 L
  170.6613 458.7802 L
  170.6726 458.7802 L
  170.6951 458.7802 L
  170.7177 458.7802 L
  170.7402 458.7802 L
  170.7627 458.7802 L
  170.7740 458.7802 L
  170.7965 458.7914 L
  170.8190 458.7914 L
  170.8303 458.8026 L
  170.8528 458.8026 L
  170.8641 458.8138 L
  170.8866 458.8138 L
  170.8979 458.8251 L
  170.9092 458.8363 L
  170.9204 458.8475 L
  170.9317 458.8587 L
  170.9542 458.8700 L
  170.9655 458.8812 L
  170.9768 458.8924 L
  170.9768 458.9036 L
  170.9880 458.9149 L
  170.9993 458.9373 L
  171.0106 458.9485 L
  171.0106 458.9710 L
  171.0218 458.9822 L
  171.0331 459.0046 L
  171.0331 459.0159 L
  171.0444 459.0383 L
  171.0444 459.0495 L
  171.0444 459.0720 L
  171.0556 459.0944 L
  171.0556 459.1169 L
  171.0556 459.1281 L
  171.0556 459.1505 L
  171.0556 459.1730 L
  171.0556 459.1842 L
  171.0556 459.2067 L
  171.0556 459.2179 L
  171.0556 459.2291 L
  171.0556 459.2403 L
  171.0556 459.2516 L
  171.0556 459.2740 L
  171.0556 459.2852 L
  171.0556 459.2964 L
  171.0556 459.3077 L
  171.0444 459.3189 L
  171.0444 459.3301 L
  171.0444 459.3413 L
  171.0444 459.3526 L
  171.0444 459.3638 L
  171.0331 459.3750 L
  171.0331 459.3862 L
  171.0218 459.3862 L
  171.0218 459.3975 L
  171.0106 459.4087 L
  170.9993 459.4199 L
  170.9880 459.4311 L
  170.9768 459.4311 L
  170.9768 459.4423 L
  170.9655 459.4423 L
  170.9542 459.4536 L
  170.9430 459.4536 L
S
U
u
  172.6328 457.6578 m
  172.6328 458.2751 L
S
U
u
  172.9708 457.6578 m
  172.9708 458.2751 L
S
U
u
  172.4638 458.1629 m
  173.1397 458.1629 L
S
U
u
  172.4638 457.7701 m
  173.1397 457.7701 L
S
U
  0.000 0.000 0.000 1.000 K
  0.486 0.000 1.000 0.000 k
u
  172.2498 459.1959 m
  172.2492 459.4810  171.9395 459.6586  171.6917 459.5159 C
  171.4442 459.3729  171.4448 459.0164  171.6929 458.8742 C
  171.9412 458.7325  172.2502 458.9112  172.2498 459.1959 C
B
U
  0.000 0.000 0.000 1.000 k
u
  172.2498 459.1959 m
  172.2492 459.4810  171.9395 459.6586  171.6917 459.5159 C
  171.4442 459.3729  171.4448 459.0164  171.6929 458.8742 C
  171.9412 458.7325  172.2502 458.9112  172.2498 459.1959 C
s
U
  0.486 0.000 1.000 0.000 k
u
  174.0523 457.9614 m
  174.0516 458.2465  173.7420 458.4241  173.4942 458.2814 C
  173.2467 458.1383  173.2473 457.7818  173.4954 457.6397 C
  173.7437 457.4979  174.0527 457.6767  174.0523 457.9613 C
B
U
  0.000 0.000 0.000 1.000 k
u
  174.0523 457.9614 m
  174.0516 458.2465  173.7420 458.4241  173.4942 458.2814 C
  173.2467 458.1383  173.2473 457.7818  173.4954 457.6397 C
  173.7437 457.4979  174.0527 457.6767  174.0523 457.9613 C
s
U
  0.486 0.000 1.000 0.000 k
u
  177.6572 457.9052 m
  177.6567 458.1471  177.3940 458.2978  177.1837 458.1767 C
  176.9737 458.0553  176.9743 457.7528  177.1847 457.6322 C
  177.3954 457.5120  177.6576 457.6636  177.6572 457.9051 C
B
U
  0.000 0.000 0.000 1.000 k
u
  177.6572 457.9052 m
  177.6567 458.1471  177.3940 458.2978  177.1837 458.1767 C
  176.9737 458.0553  176.9743 457.7528  177.1847 457.6322 C
  177.3954 457.5120  177.6576 457.6636  177.6572 457.9051 C
s
U
  0.486 0.000 1.000 0.000 k
u
  176.5870 457.9052 m
  176.5865 458.1471  176.3237 458.2978  176.1135 458.1767 C
  175.9035 458.0553  175.9040 457.7528  176.1145 457.6322 C
  176.3252 457.5120  176.5874 457.6636  176.5870 457.9051 C
B
U
  0.000 0.000 0.000 1.000 k
u
  176.5870 457.9052 m
  176.5865 458.1471  176.3237 458.2978  176.1135 458.1767 C
  175.9035 458.0553  175.9040 457.7528  176.1145 457.6322 C
  176.3252 457.5120  176.5874 457.6636  176.5870 457.9051 C
s
U
u
  0.000 0.000 0.000 1.000 k
  178.9978 458.8363 m
  177.8713 458.8363 L
  177.8713 457.7140 L
  178.9978 457.7140 L
  178.9978 458.8363 L
B
U
u
  178.9978 458.8363 m
  177.8713 458.8363 L
  177.8713 457.7140 L
  178.9978 457.7140 L
  178.9978 458.8363 L
S
U
u
  0.000 0.000 0.000 0.051 k
  178.8289 458.6679 m
  178.0403 458.6679 L
  178.0403 457.8823 L
  178.8289 457.8823 L
  178.8289 458.6679 L
B
U
u
  178.8289 458.6679 m
  178.0403 458.6679 L
  178.0403 457.8823 L
  178.8289 457.8823 L
  178.8289 458.6679 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 179.5611 456.9845 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 180.4624 456.9845 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 181.4199 456.9845 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 182.2649 456.9845 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 183.2224 456.9845 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 184.1237 456.9845 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 179.5611 459.5658 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 180.4624 459.5658 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 181.4199 459.5658 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 182.0959 459.5658 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 182.6479 459.5658 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 183.0534 459.5658 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 183.6055 459.5658 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 183.9547 459.5658 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 184.5067 459.5658 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  0.486 0.000 1.000 0.000 k
u
  184.5856 457.9052 m
  184.5850 458.1471  184.3223 458.2978  184.1121 458.1767 C
  183.9020 458.0553  183.9026 457.7528  184.1131 457.6322 C
  184.3237 457.5120  184.5859 457.6636  184.5856 457.9051 C
B
U
  0.000 0.000 0.000 1.000 k
u
  184.5856 457.9052 m
  184.5850 458.1471  184.3223 458.2978  184.1121 458.1767 C
  183.9020 458.0553  183.9026 457.7528  184.1131 457.6322 C
  184.3237 457.5120  184.5859 457.6636  184.5856 457.9051 C
s
U
  0.486 0.000 1.000 0.000 k
u
  183.6843 457.9052 m
  183.6838 458.1471  183.4210 458.2978  183.2108 458.1767 C
  183.0008 458.0553  183.0013 457.7528  183.2118 457.6322 C
  183.4225 457.5120  183.6847 457.6636  183.6843 457.9051 C
B
U
  0.000 0.000 0.000 1.000 k
u
  183.6843 457.9052 m
  183.6838 458.1471  183.4210 458.2978  183.2108 458.1767 C
  183.0008 458.0553  183.0013 457.7528  183.2118 457.6322 C
  183.4225 457.5120  183.6847 457.6636  183.6843 457.9051 C
s
U
  0.486 0.000 1.000 0.000 k
u
  182.7267 457.9052 m
  182.7262 458.1471  182.4635 458.2978  182.2532 458.1767 C
  182.0432 458.0553  182.0438 457.7528  182.2543 457.6322 C
  182.4649 457.5120  182.7271 457.6636  182.7267 457.9051 C
B
U
  0.000 0.000 0.000 1.000 k
u
  182.7267 457.9052 m
  182.7262 458.1471  182.4635 458.2978  182.2532 458.1767 C
  182.0432 458.0553  182.0438 457.7528  182.2543 457.6322 C
  182.4649 457.5120  182.7271 457.6636  182.7267 457.9051 C
s
U
  0.486 0.000 1.000 0.000 k
u
  181.8818 457.9052 m
  181.8813 458.1471  181.6185 458.2978  181.4083 458.1767 C
  181.1983 458.0553  181.1989 457.7528  181.4093 457.6322 C
  181.6200 457.5120  181.8822 457.6636  181.8818 457.9051 C
B
U
  0.000 0.000 0.000 1.000 k
u
  181.8818 457.9052 m
  181.8813 458.1471  181.6185 458.2978  181.4083 458.1767 C
  181.1983 458.0553  181.1989 457.7528  181.4093 457.6322 C
  181.6200 457.5120  181.8822 457.6636  181.8818 457.9051 C
s
U
  0.486 0.000 1.000 0.000 k
u
  180.9243 457.9052 m
  180.9237 458.1471  180.6610 458.2978  180.4507 458.1767 C
  180.2407 458.0553  180.2413 457.7528  180.4518 457.6322 C
  180.6624 457.5120  180.9246 457.6636  180.9243 457.9051 C
B
U
  0.000 0.000 0.000 1.000 k
u
  180.9243 457.9052 m
  180.9237 458.1471  180.6610 458.2978  180.4507 458.1767 C
  180.2407 458.0553  180.2413 457.7528  180.4518 457.6322 C
  180.6624 457.5120  180.9246 457.6636  180.9243 457.9051 C
s
U
  0.486 0.000 1.000 0.000 k
u
  180.0230 457.9052 m
  180.0225 458.1471  179.7597 458.2978  179.5495 458.1767 C
  179.3395 458.0553  179.3400 457.7528  179.5505 457.6322 C
  179.7612 457.5120  180.0234 457.6636  180.0230 457.9051 C
B
U
  0.000 0.000 0.000 1.000 k
u
  180.0230 457.9052 m
  180.0225 458.1471  179.7597 458.2978  179.5495 458.1767 C
  179.3395 458.0553  179.3400 457.7528  179.5505 457.6322 C
  179.7612 457.5120  180.0234 457.6636  180.0230 457.9051 C
s
U
  0.486 0.000 1.000 0.000 k
u
  184.5856 459.1397 m
  184.5850 459.3817  184.3223 459.5323  184.1121 459.4113 C
  183.9020 459.2899  183.9026 458.9874  184.1131 458.8668 C
  184.3237 458.7465  184.5859 458.8982  184.5856 459.1397 C
B
U
  0.000 0.000 0.000 1.000 k
u
  184.5856 459.1397 m
  184.5850 459.3817  184.3223 459.5323  184.1121 459.4113 C
  183.9020 459.2899  183.9026 458.9874  184.1131 458.8668 C
  184.3237 458.7465  184.5859 458.8982  184.5856 459.1397 C
s
U
  0.486 0.000 1.000 0.000 k
u
  183.6843 459.1397 m
  183.6838 459.3817  183.4210 459.5323  183.2108 459.4113 C
  183.0008 459.2899  183.0013 458.9874  183.2118 458.8668 C
  183.4225 458.7465  183.6847 458.8982  183.6843 459.1397 C
B
U
  0.000 0.000 0.000 1.000 k
u
  183.6843 459.1397 m
  183.6838 459.3817  183.4210 459.5323  183.2108 459.4113 C
  183.0008 459.2899  183.0013 458.9874  183.2118 458.8668 C
  183.4225 458.7465  183.6847 458.8982  183.6843 459.1397 C
s
U
  0.486 0.000 1.000 0.000 k
u
  182.7267 459.1397 m
  182.7262 459.3817  182.4635 459.5323  182.2532 459.4113 C
  182.0432 459.2899  182.0438 458.9874  182.2543 458.8668 C
  182.4649 458.7465  182.7271 458.8982  182.7267 459.1397 C
B
U
  0.000 0.000 0.000 1.000 k
u
  182.7267 459.1397 m
  182.7262 459.3817  182.4635 459.5323  182.2532 459.4113 C
  182.0432 459.2899  182.0438 458.9874  182.2543 458.8668 C
  182.4649 458.7465  182.7271 458.8982  182.7267 459.1397 C
s
U
  0.486 0.000 1.000 0.000 k
u
  181.8818 459.1397 m
  181.8813 459.3817  181.6185 459.5323  181.4083 459.4113 C
  181.1983 459.2899  181.1989 458.9874  181.4093 458.8668 C
  181.6200 458.7465  181.8822 458.8982  181.8818 459.1397 C
B
U
  0.000 0.000 0.000 1.000 k
u
  181.8818 459.1397 m
  181.8813 459.3817  181.6185 459.5323  181.4083 459.4113 C
  181.1983 459.2899  181.1989 458.9874  181.4093 458.8668 C
  181.6200 458.7465  181.8822 458.8982  181.8818 459.1397 C
s
U
  0.486 0.000 1.000 0.000 k
u
  180.9243 459.1397 m
  180.9237 459.3817  180.6610 459.5323  180.4507 459.4113 C
  180.2407 459.2899  180.2413 458.9874  180.4518 458.8668 C
  180.6624 458.7465  180.9246 458.8982  180.9243 459.1397 C
B
U
  0.000 0.000 0.000 1.000 k
u
  180.9243 459.1397 m
  180.9237 459.3817  180.6610 459.5323  180.4507 459.4113 C
  180.2407 459.2899  180.2413 458.9874  180.4518 458.8668 C
  180.6624 458.7465  180.9246 458.8982  180.9243 459.1397 C
s
U
  0.486 0.000 1.000 0.000 k
u
  180.0230 459.1397 m
  180.0225 459.3817  179.7597 459.5323  179.5495 459.4113 C
  179.3395 459.2899  179.3400 458.9874  179.5505 458.8668 C
  179.7612 458.7465  180.0234 458.8982  180.0230 459.1397 C
B
U
  0.000 0.000 0.000 1.000 k
u
  180.0230 459.1397 m
  180.0225 459.3817  179.7597 459.5323  179.5495 459.4113 C
  179.3395 459.2899  179.3400 458.9874  179.5505 458.8668 C
  179.7612 458.7465  180.0234 458.8982  180.0230 459.1397 C
s
U
0 To
1.0000 0.0000 0.0000 1.0000 177.1954 456.9845 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  0.486 0.000 1.000 0.000 k
u
  177.6572 459.1397 m
  177.6567 459.3817  177.3940 459.5323  177.1837 459.4113 C
  176.9737 459.2899  176.9743 458.9874  177.1847 458.8668 C
  177.3954 458.7465  177.6576 458.8982  177.6572 459.1397 C
B
U
  0.000 0.000 0.000 1.000 k
u
  177.6572 459.1397 m
  177.6567 459.3817  177.3940 459.5323  177.1837 459.4113 C
  176.9737 459.2899  176.9743 458.9874  177.1847 458.8668 C
  177.3954 458.7465  177.6576 458.8982  177.6572 459.1397 C
s
U
  0.486 0.000 1.000 0.000 k
u
  176.5870 459.1397 m
  176.5865 459.3817  176.3237 459.5323  176.1135 459.4113 C
  175.9035 459.2899  175.9040 458.9874  176.1145 458.8668 C
  176.3252 458.7465  176.5874 458.8982  176.5870 459.1397 C
B
U
  0.000 0.000 0.000 1.000 k
u
  176.5870 459.1397 m
  176.5865 459.3817  176.3237 459.5323  176.1135 459.4113 C
  175.9035 459.2899  175.9040 458.9874  176.1145 458.8668 C
  176.3252 458.7465  176.5874 458.8982  176.5870 459.1397 C
s
U
  0.486 0.000 1.000 0.000 k
u
  177.6572 460.3182 m
  177.6567 460.5601  177.3940 460.7108  177.1837 460.5897 C
  176.9737 460.4683  176.9743 460.1658  177.1847 460.0452 C
  177.3954 459.9250  177.6576 460.0766  177.6572 460.3181 C
B
U
  0.000 0.000 0.000 1.000 k
u
  177.6572 460.3182 m
  177.6567 460.5601  177.3940 460.7108  177.1837 460.5897 C
  176.9737 460.4683  176.9743 460.1658  177.1847 460.0452 C
  177.3954 459.9250  177.6576 460.0766  177.6572 460.3181 C
s
U
  0.486 0.000 1.000 0.000 k
u
  176.5870 460.3182 m
  176.5865 460.5601  176.3237 460.7108  176.1135 460.5897 C
  175.9035 460.4683  175.9040 460.1658  176.1145 460.0452 C
  176.3252 459.9250  176.5874 460.0766  176.5870 460.3181 C
B
U
  0.000 0.000 0.000 1.000 k
u
  176.5870 460.3182 m
  176.5865 460.5601  176.3237 460.7108  176.1135 460.5897 C
  175.9035 460.4683  175.9040 460.1658  176.1145 460.0452 C
  176.3252 459.9250  176.5874 460.0766  176.5870 460.3181 C
s
U
u
  203.1625 457.0406 m
  203.1625 456.1427 L
  210.8231 456.1427 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 211.2174 455.9744 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(B\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 0.502 K
1 j
  219.8355 462.6522 m
  203.0498 462.6522 L
  203.0498 457.2650 L
  219.8355 457.2650 L
  219.8355 462.6522 L
S
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  219.6665 462.4277 m
  203.2188 462.4277 L
  203.2188 457.4895 L
  219.6665 457.4895 L
  219.6665 462.4277 L
B
U
u
  0.000 0.000 0.000 0.000 K
  219.6665 462.4277 m
  203.2188 462.4277 L
  203.2188 457.4895 L
  219.6665 457.4895 L
  219.6665 462.4277 L
S
U
u
  0.000 0.000 0.000 1.000 K
  219.8355 457.0406 m
  219.8355 456.1427 L
  212.1749 456.1427 L
S
U
u
  0.000 0.000 0.000 1.000 k
  216.9628 460.5198 m
  219.4412 460.5198 L
  219.4412 461.6421 L
  218.9343 461.6421 L
  218.9343 462.0349 L
  218.4836 462.0349 L
  218.4836 462.4277 L
  217.9767 462.4277 L
  217.9767 462.0349 L
  217.4697 462.0349 L
  217.4697 461.6421 L
  216.9628 461.6421 L
  216.9628 460.5198 L
B
U
u
  216.9628 460.5198 m
  219.4412 460.5198 L
  219.4412 461.6421 L
  218.9343 461.6421 L
  218.9343 462.0349 L
  218.4836 462.0349 L
  218.4836 462.4277 L
  217.9767 462.4277 L
  217.9767 462.0349 L
  217.4697 462.0349 L
  217.4697 461.6421 L
  216.9628 461.6421 L
  216.9628 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 217.6387 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 218.1907 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 218.7428 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  219.4412 459.3975 m
  216.9628 459.3975 L
  216.9628 458.2751 L
  217.4697 458.2751 L
  217.4697 457.8823 L
  217.9204 457.8823 L
  217.9204 457.4895 L
  218.4273 457.4895 L
  218.4273 457.8823 L
  218.9343 457.8823 L
  218.9343 458.2751 L
  219.4412 458.2751 L
  219.4412 459.3975 L
B
U
u
  219.4412 459.3975 m
  216.9628 459.3975 L
  216.9628 458.2751 L
  217.4697 458.2751 L
  217.4697 457.8823 L
  217.9204 457.8823 L
  217.9204 457.4895 L
  218.4273 457.4895 L
  218.4273 457.8823 L
  218.9343 457.8823 L
  218.9343 458.2751 L
  219.4412 458.2751 L
  219.4412 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 217.8077 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 218.3597 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  206.0915 460.5198 m
  208.5699 460.5198 L
  208.5699 461.6421 L
  208.0630 461.6421 L
  208.0630 462.0349 L
  207.6124 462.0349 L
  207.6124 462.4277 L
  207.1054 462.4277 L
  207.1054 462.0349 L
  206.5985 462.0349 L
  206.5985 461.6421 L
  206.0915 461.6421 L
  206.0915 460.5198 L
B
U
u
  206.0915 460.5198 m
  208.5699 460.5198 L
  208.5699 461.6421 L
  208.0630 461.6421 L
  208.0630 462.0349 L
  207.6124 462.0349 L
  207.6124 462.4277 L
  207.1054 462.4277 L
  207.1054 462.0349 L
  206.5985 462.0349 L
  206.5985 461.6421 L
  206.0915 461.6421 L
  206.0915 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 206.9364 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 207.4885 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  208.5699 459.3975 m
  206.0915 459.3975 L
  206.0915 458.2751 L
  206.5985 458.2751 L
  206.5985 457.8823 L
  207.0491 457.8823 L
  207.0491 457.4895 L
  207.5560 457.4895 L
  207.5560 457.8823 L
  208.0630 457.8823 L
  208.0630 458.2751 L
  208.5699 458.2751 L
  208.5699 459.3975 L
B
U
u
  208.5699 459.3975 m
  206.0915 459.3975 L
  206.0915 458.2751 L
  206.5985 458.2751 L
  206.5985 457.8823 L
  207.0491 457.8823 L
  207.0491 457.4895 L
  207.5560 457.4895 L
  207.5560 457.8823 L
  208.0630 457.8823 L
  208.0630 458.2751 L
  208.5699 458.2751 L
  208.5699 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 206.9364 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 207.4885 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  208.8516 460.5198 m
  211.3300 460.5198 L
  211.3300 461.6421 L
  210.8231 461.6421 L
  210.8231 462.0349 L
  210.3724 462.0349 L
  210.3724 462.4277 L
  209.8655 462.4277 L
  209.8655 462.0349 L
  209.3585 462.0349 L
  209.3585 461.6421 L
  208.8516 461.6421 L
  208.8516 460.5198 L
B
U
u
  208.8516 460.5198 m
  211.3300 460.5198 L
  211.3300 461.6421 L
  210.8231 461.6421 L
  210.8231 462.0349 L
  210.3724 462.0349 L
  210.3724 462.4277 L
  209.8655 462.4277 L
  209.8655 462.0349 L
  209.3585 462.0349 L
  209.3585 461.6421 L
  208.8516 461.6421 L
  208.8516 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 209.6965 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 210.2485 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  211.3300 459.3975 m
  208.8516 459.3975 L
  208.8516 458.2751 L
  209.3585 458.2751 L
  209.3585 457.8823 L
  209.8092 457.8823 L
  209.8092 457.4895 L
  210.3161 457.4895 L
  210.3161 457.8823 L
  210.8231 457.8823 L
  210.8231 458.2751 L
  211.3300 458.2751 L
  211.3300 459.3975 L
B
U
u
  211.3300 459.3975 m
  208.8516 459.3975 L
  208.8516 458.2751 L
  209.3585 458.2751 L
  209.3585 457.8823 L
  209.8092 457.8823 L
  209.8092 457.4895 L
  210.3161 457.4895 L
  210.3161 457.8823 L
  210.8231 457.8823 L
  210.8231 458.2751 L
  211.3300 458.2751 L
  211.3300 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 209.6965 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 210.2485 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  211.5553 460.5198 m
  214.0337 460.5198 L
  214.0337 461.6421 L
  213.5268 461.6421 L
  213.5268 462.0349 L
  213.0762 462.0349 L
  213.0762 462.4277 L
  212.5692 462.4277 L
  212.5692 462.0349 L
  212.0623 462.0349 L
  212.0623 461.6421 L
  211.5553 461.6421 L
  211.5553 460.5198 L
B
U
u
  211.5553 460.5198 m
  214.0337 460.5198 L
  214.0337 461.6421 L
  213.5268 461.6421 L
  213.5268 462.0349 L
  213.0762 462.0349 L
  213.0762 462.4277 L
  212.5692 462.4277 L
  212.5692 462.0349 L
  212.0623 462.0349 L
  212.0623 461.6421 L
  211.5553 461.6421 L
  211.5553 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 212.1749 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 212.7269 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 213.2790 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  214.0337 459.3975 m
  211.5553 459.3975 L
  211.5553 458.2751 L
  212.0623 458.2751 L
  212.0623 457.8823 L
  212.5129 457.8823 L
  212.5129 457.4895 L
  213.0198 457.4895 L
  213.0198 457.8823 L
  213.5268 457.8823 L
  213.5268 458.2751 L
  214.0337 458.2751 L
  214.0337 459.3975 L
B
U
u
  214.0337 459.3975 m
  211.5553 459.3975 L
  211.5553 458.2751 L
  212.0623 458.2751 L
  212.0623 457.8823 L
  212.5129 457.8823 L
  212.5129 457.4895 L
  213.0198 457.4895 L
  213.0198 457.8823 L
  213.5268 457.8823 L
  213.5268 458.2751 L
  214.0337 458.2751 L
  214.0337 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 212.4002 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 212.9523 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  214.2591 460.5198 m
  216.7375 460.5198 L
  216.7375 461.6421 L
  216.2305 461.6421 L
  216.2305 462.0349 L
  215.7799 462.0349 L
  215.7799 462.4277 L
  215.2730 462.4277 L
  215.2730 462.0349 L
  214.7660 462.0349 L
  214.7660 461.6421 L
  214.2591 461.6421 L
  214.2591 460.5198 L
B
U
u
  214.2591 460.5198 m
  216.7375 460.5198 L
  216.7375 461.6421 L
  216.2305 461.6421 L
  216.2305 462.0349 L
  215.7799 462.0349 L
  215.7799 462.4277 L
  215.2730 462.4277 L
  215.2730 462.0349 L
  214.7660 462.0349 L
  214.7660 461.6421 L
  214.2591 461.6421 L
  214.2591 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 214.9350 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 215.4870 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 216.0390 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  216.7375 459.3975 m
  214.2591 459.3975 L
  214.2591 458.2751 L
  214.7660 458.2751 L
  214.7660 457.8823 L
  215.2166 457.8823 L
  215.2166 457.4895 L
  215.7236 457.4895 L
  215.7236 457.8823 L
  216.2305 457.8823 L
  216.2305 458.2751 L
  216.7375 458.2751 L
  216.7375 459.3975 L
B
U
u
  216.7375 459.3975 m
  214.2591 459.3975 L
  214.2591 458.2751 L
  214.7660 458.2751 L
  214.7660 457.8823 L
  215.2166 457.8823 L
  215.2166 457.4895 L
  215.7236 457.4895 L
  215.7236 457.8823 L
  216.2305 457.8823 L
  216.2305 458.2751 L
  216.7375 458.2751 L
  216.7375 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 215.1040 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 215.6560 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  203.3878 460.5198 m
  205.8662 460.5198 L
  205.8662 461.6421 L
  205.3593 461.6421 L
  205.3593 462.0349 L
  204.9086 462.0349 L
  204.9086 462.4277 L
  204.4017 462.4277 L
  204.4017 462.0349 L
  203.8947 462.0349 L
  203.8947 461.6421 L
  203.3878 461.6421 L
  203.3878 460.5198 L
B
U
u
  203.3878 460.5198 m
  205.8662 460.5198 L
  205.8662 461.6421 L
  205.3593 461.6421 L
  205.3593 462.0349 L
  204.9086 462.0349 L
  204.9086 462.4277 L
  204.4017 462.4277 L
  204.4017 462.0349 L
  203.8947 462.0349 L
  203.8947 461.6421 L
  203.3878 461.6421 L
  203.3878 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 204.2890 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.8410 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  205.8662 459.3975 m
  203.3878 459.3975 L
  203.3878 458.2751 L
  203.8947 458.2751 L
  203.8947 457.8823 L
  204.3454 457.8823 L
  204.3454 457.4895 L
  204.8523 457.4895 L
  204.8523 457.8823 L
  205.3593 457.8823 L
  205.3593 458.2751 L
  205.8662 458.2751 L
  205.8662 459.3975 L
B
U
u
  205.8662 459.3975 m
  203.3878 459.3975 L
  203.3878 458.2751 L
  203.8947 458.2751 L
  203.8947 457.8823 L
  204.3454 457.8823 L
  204.3454 457.4895 L
  204.8523 457.4895 L
  204.8523 457.8823 L
  205.3593 457.8823 L
  205.3593 458.2751 L
  205.8662 458.2751 L
  205.8662 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 204.2890 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 204.8410 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 169.3663 457.9945 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(E\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 169.3663 458.6567 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 169.3663 458.9373 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 169.3663 459.4872 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 169.3663 460.0372 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 169.3663 460.3739 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 169.3663 460.9238 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 169.3663 461.4738 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  186.0388 457.0406 m
  186.0388 456.1427 L
  193.6994 456.1427 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 194.0937 455.9744 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 0.502 K
1 j
  202.7119 462.6522 m
  185.9262 462.6522 L
  185.9262 457.2650 L
  202.7119 457.2650 L
  202.7119 462.6522 L
S
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  202.5429 462.4277 m
  186.0951 462.4277 L
  186.0951 457.4895 L
  202.5429 457.4895 L
  202.5429 462.4277 L
B
U
u
  0.000 0.000 0.000 0.000 K
  202.5429 462.4277 m
  186.0951 462.4277 L
  186.0951 457.4895 L
  202.5429 457.4895 L
  202.5429 462.4277 L
S
U
u
  0.000 0.000 0.000 1.000 K
  202.7119 457.0406 m
  202.7119 456.1427 L
  195.0513 456.1427 L
S
U
u
  0.000 0.000 0.000 1.000 k
  199.8391 460.5198 m
  202.3176 460.5198 L
  202.3176 461.6421 L
  201.8106 461.6421 L
  201.8106 462.0349 L
  201.3600 462.0349 L
  201.3600 462.4277 L
  200.8530 462.4277 L
  200.8530 462.0349 L
  200.3461 462.0349 L
  200.3461 461.6421 L
  199.8391 461.6421 L
  199.8391 460.5198 L
B
U
u
  199.8391 460.5198 m
  202.3176 460.5198 L
  202.3176 461.6421 L
  201.8106 461.6421 L
  201.8106 462.0349 L
  201.3600 462.0349 L
  201.3600 462.4277 L
  200.8530 462.4277 L
  200.8530 462.0349 L
  200.3461 462.0349 L
  200.3461 461.6421 L
  199.8391 461.6421 L
  199.8391 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 200.5151 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 201.0671 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 201.6191 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  202.3176 459.3975 m
  199.8391 459.3975 L
  199.8391 458.2751 L
  200.3461 458.2751 L
  200.3461 457.8823 L
  200.7967 457.8823 L
  200.7967 457.4895 L
  201.3037 457.4895 L
  201.3037 457.8823 L
  201.8106 457.8823 L
  201.8106 458.2751 L
  202.3176 458.2751 L
  202.3176 459.3975 L
B
U
u
  202.3176 459.3975 m
  199.8391 459.3975 L
  199.8391 458.2751 L
  200.3461 458.2751 L
  200.3461 457.8823 L
  200.7967 457.8823 L
  200.7967 457.4895 L
  201.3037 457.4895 L
  201.3037 457.8823 L
  201.8106 457.8823 L
  201.8106 458.2751 L
  202.3176 458.2751 L
  202.3176 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 200.6841 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 201.2361 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  189.0242 460.5198 m
  191.5026 460.5198 L
  191.5026 461.6421 L
  190.9957 461.6421 L
  190.9957 462.0349 L
  190.5450 462.0349 L
  190.5450 462.4277 L
  190.0381 462.4277 L
  190.0381 462.0349 L
  189.5311 462.0349 L
  189.5311 461.6421 L
  189.0242 461.6421 L
  189.0242 460.5198 L
B
U
u
  189.0242 460.5198 m
  191.5026 460.5198 L
  191.5026 461.6421 L
  190.9957 461.6421 L
  190.9957 462.0349 L
  190.5450 462.0349 L
  190.5450 462.4277 L
  190.0381 462.4277 L
  190.0381 462.0349 L
  189.5311 462.0349 L
  189.5311 461.6421 L
  189.0242 461.6421 L
  189.0242 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 189.8691 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 190.4211 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  191.5026 459.3975 m
  189.0242 459.3975 L
  189.0242 458.2751 L
  189.5311 458.2751 L
  189.5311 457.8823 L
  189.9818 457.8823 L
  189.9818 457.4895 L
  190.4887 457.4895 L
  190.4887 457.8823 L
  190.9957 457.8823 L
  190.9957 458.2751 L
  191.5026 458.2751 L
  191.5026 459.3975 L
B
U
u
  191.5026 459.3975 m
  189.0242 459.3975 L
  189.0242 458.2751 L
  189.5311 458.2751 L
  189.5311 457.8823 L
  189.9818 457.8823 L
  189.9818 457.4895 L
  190.4887 457.4895 L
  190.4887 457.8823 L
  190.9957 457.8823 L
  190.9957 458.2751 L
  191.5026 458.2751 L
  191.5026 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 189.8691 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 190.4211 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  191.7279 460.5198 m
  194.2064 460.5198 L
  194.2064 461.6421 L
  193.6994 461.6421 L
  193.6994 462.0349 L
  193.2488 462.0349 L
  193.2488 462.4277 L
  192.7418 462.4277 L
  192.7418 462.0349 L
  192.2349 462.0349 L
  192.2349 461.6421 L
  191.7279 461.6421 L
  191.7279 460.5198 L
B
U
u
  191.7279 460.5198 m
  194.2064 460.5198 L
  194.2064 461.6421 L
  193.6994 461.6421 L
  193.6994 462.0349 L
  193.2488 462.0349 L
  193.2488 462.4277 L
  192.7418 462.4277 L
  192.7418 462.0349 L
  192.2349 462.0349 L
  192.2349 461.6421 L
  191.7279 461.6421 L
  191.7279 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 192.5728 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.1249 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  194.2064 459.3975 m
  191.7279 459.3975 L
  191.7279 458.2751 L
  192.2349 458.2751 L
  192.2349 457.8823 L
  192.6855 457.8823 L
  192.6855 457.4895 L
  193.1925 457.4895 L
  193.1925 457.8823 L
  193.6994 457.8823 L
  193.6994 458.2751 L
  194.2064 458.2751 L
  194.2064 459.3975 L
B
U
u
  194.2064 459.3975 m
  191.7279 459.3975 L
  191.7279 458.2751 L
  192.2349 458.2751 L
  192.2349 457.8823 L
  192.6855 457.8823 L
  192.6855 457.4895 L
  193.1925 457.4895 L
  193.1925 457.8823 L
  193.6994 457.8823 L
  193.6994 458.2751 L
  194.2064 458.2751 L
  194.2064 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 192.5728 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 193.1249 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  194.4317 460.5198 m
  196.9101 460.5198 L
  196.9101 461.6421 L
  196.4031 461.6421 L
  196.4031 462.0349 L
  195.9525 462.0349 L
  195.9525 462.4277 L
  195.4456 462.4277 L
  195.4456 462.0349 L
  194.9386 462.0349 L
  194.9386 461.6421 L
  194.4317 461.6421 L
  194.4317 460.5198 L
B
U
u
  194.4317 460.5198 m
  196.9101 460.5198 L
  196.9101 461.6421 L
  196.4031 461.6421 L
  196.4031 462.0349 L
  195.9525 462.0349 L
  195.9525 462.4277 L
  195.4456 462.4277 L
  195.4456 462.0349 L
  194.9386 462.0349 L
  194.9386 461.6421 L
  194.4317 461.6421 L
  194.4317 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 195.0513 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.6033 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 196.1553 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  196.9101 459.3975 m
  194.4317 459.3975 L
  194.4317 458.2751 L
  194.9386 458.2751 L
  194.9386 457.8823 L
  195.3892 457.8823 L
  195.3892 457.4895 L
  195.8962 457.4895 L
  195.8962 457.8823 L
  196.4031 457.8823 L
  196.4031 458.2751 L
  196.9101 458.2751 L
  196.9101 459.3975 L
B
U
u
  196.9101 459.3975 m
  194.4317 459.3975 L
  194.4317 458.2751 L
  194.9386 458.2751 L
  194.9386 457.8823 L
  195.3892 457.8823 L
  195.3892 457.4895 L
  195.8962 457.4895 L
  195.8962 457.8823 L
  196.4031 457.8823 L
  196.4031 458.2751 L
  196.9101 458.2751 L
  196.9101 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 195.2766 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.8286 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  197.1917 460.5198 m
  199.6702 460.5198 L
  199.6702 461.6421 L
  199.1632 461.6421 L
  199.1632 462.0349 L
  198.7126 462.0349 L
  198.7126 462.4277 L
  198.2056 462.4277 L
  198.2056 462.0349 L
  197.6987 462.0349 L
  197.6987 461.6421 L
  197.1917 461.6421 L
  197.1917 460.5198 L
B
U
u
  197.1917 460.5198 m
  199.6702 460.5198 L
  199.6702 461.6421 L
  199.1632 461.6421 L
  199.1632 462.0349 L
  198.7126 462.0349 L
  198.7126 462.4277 L
  198.2056 462.4277 L
  198.2056 462.0349 L
  197.6987 462.0349 L
  197.6987 461.6421 L
  197.1917 461.6421 L
  197.1917 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 197.8113 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 198.3633 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 198.9154 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  199.6702 459.3975 m
  197.1917 459.3975 L
  197.1917 458.2751 L
  197.6987 458.2751 L
  197.6987 457.8823 L
  198.1493 457.8823 L
  198.1493 457.4895 L
  198.6563 457.4895 L
  198.6563 457.8823 L
  199.1632 457.8823 L
  199.1632 458.2751 L
  199.6702 458.2751 L
  199.6702 459.3975 L
B
U
u
  199.6702 459.3975 m
  197.1917 459.3975 L
  197.1917 458.2751 L
  197.6987 458.2751 L
  197.6987 457.8823 L
  198.1493 457.8823 L
  198.1493 457.4895 L
  198.6563 457.4895 L
  198.6563 457.8823 L
  199.1632 457.8823 L
  199.1632 458.2751 L
  199.6702 458.2751 L
  199.6702 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 198.0366 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 198.5887 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  186.3205 460.5198 m
  188.7989 460.5198 L
  188.7989 461.6421 L
  188.2919 461.6421 L
  188.2919 462.0349 L
  187.8413 462.0349 L
  187.8413 462.4277 L
  187.3344 462.4277 L
  187.3344 462.0349 L
  186.8274 462.0349 L
  186.8274 461.6421 L
  186.3205 461.6421 L
  186.3205 460.5198 L
B
U
u
  186.3205 460.5198 m
  188.7989 460.5198 L
  188.7989 461.6421 L
  188.2919 461.6421 L
  188.2919 462.0349 L
  187.8413 462.0349 L
  187.8413 462.4277 L
  187.3344 462.4277 L
  187.3344 462.0349 L
  186.8274 462.0349 L
  186.8274 461.6421 L
  186.3205 461.6421 L
  186.3205 460.5198 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 187.1654 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.7174 462.8205 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  188.7989 459.3975 m
  186.3205 459.3975 L
  186.3205 458.2751 L
  186.8274 458.2751 L
  186.8274 457.8823 L
  187.2780 457.8823 L
  187.2780 457.4895 L
  187.7850 457.4895 L
  187.7850 457.8823 L
  188.2919 457.8823 L
  188.2919 458.2751 L
  188.7989 458.2751 L
  188.7989 459.3975 L
B
U
u
  188.7989 459.3975 m
  186.3205 459.3975 L
  186.3205 458.2751 L
  186.8274 458.2751 L
  186.8274 457.8823 L
  187.2780 457.8823 L
  187.2780 457.4895 L
  187.7850 457.4895 L
  187.7850 457.8823 L
  188.2919 457.8823 L
  188.2919 458.2751 L
  188.7989 458.2751 L
  188.7989 459.3975 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 187.1654 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 187.7174 456.5916 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 177.1954 460.8004 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 0.502 K
1 j
  175.6745 461.0809 m
  176.2378 461.0809 L
S
U
u
  0.000 0.000 0.000 0.502 k
  0.000 0.000 0.000 1.000 K
  176.2941 461.3054 m
  176.2941 460.8565 L
  176.7447 461.0809 L
  176.2941 461.3054 L
B
U
u
  0.000 0.000 0.000 0.502 K
  176.2941 461.3054 m
  176.2941 460.8565 L
  176.7447 461.0809 L
  176.2941 461.3054 L
S
U
u
  0.000 0.000 0.000 0.251 k
  0.000 0.000 0.000 1.000 K
  246.1969 463.4939 m
  220.1735 463.4939 L
  220.1735 455.9744 L
  246.1969 455.9744 L
  246.1969 463.4939 L
B
U
u
  246.1969 463.4939 m
  220.1735 463.4939 L
  220.1735 455.9744 L
  246.1969 455.9744 L
  246.1969 463.4939 L
S
U
  0.000 0.000 0.000 0.051 k
u
  245.9829 462.4508 m
  245.9821 462.8223  245.5786 463.0537  245.2557 462.8678 C
  244.9332 462.6814  244.9340 462.2169  245.2573 462.0316 C
  245.5808 461.8469  245.9835 462.0798  245.9829 462.4508 C
B
U
  0.000 0.000 0.000 1.000 k
u
  245.9829 462.4508 m
  245.9821 462.8223  245.5786 463.0537  245.2557 462.8678 C
  244.9332 462.6814  244.9340 462.2169  245.2573 462.0316 C
  245.5808 461.8469  245.9835 462.0798  245.9829 462.4508 C
s
U
  0.000 0.000 0.000 0.051 k
u
  245.9829 457.0637 m
  245.9821 457.4352  245.5786 457.6666  245.2557 457.4806 C
  244.9332 457.2942  244.9340 456.8297  245.2573 456.6445 C
  245.5808 456.4598  245.9835 456.6927  245.9829 457.0636 C
B
U
  0.000 0.000 0.000 1.000 k
u
  245.9829 457.0637 m
  245.9821 457.4352  245.5786 457.6666  245.2557 457.4806 C
  244.9332 457.2942  244.9340 456.8297  245.2573 456.6445 C
  245.5808 456.4598  245.9835 456.6927  245.9829 457.0636 C
s
U
  0.000 0.000 0.000 0.051 k
u
  221.3113 462.4508 m
  221.3105 462.8223  220.9070 463.0537  220.5841 462.8678 C
  220.2616 462.6814  220.2625 462.2169  220.5857 462.0316 C
  220.9092 461.8469  221.3119 462.0798  221.3113 462.4508 C
B
U
  0.000 0.000 0.000 1.000 k
u
  221.3113 462.4508 m
  221.3105 462.8223  220.9070 463.0537  220.5841 462.8678 C
  220.2616 462.6814  220.2625 462.2169  220.5857 462.0316 C
  220.9092 461.8469  221.3119 462.0798  221.3113 462.4508 C
s
U
  0.000 0.000 0.000 0.051 k
u
  221.3113 457.0637 m
  221.3105 457.4352  220.9070 457.6666  220.5841 457.4806 C
  220.2616 457.2942  220.2625 456.8297  220.5857 456.6445 C
  220.9092 456.4598  221.3119 456.6927  221.3113 457.0636 C
B
U
  0.000 0.000 0.000 1.000 k
u
  221.3113 457.0637 m
  221.3105 457.4352  220.9070 457.6666  220.5841 457.4806 C
  220.2616 457.2942  220.2625 456.8297  220.5857 456.6445 C
  220.9092 456.4598  221.3119 456.6927  221.3113 457.0636 C
s
U
0 To
1.0000 0.0000 0.0000 1.0000 192.2003 475.5125 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Summit 48\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.251 k
0.2500 w
  0.000 0.000 0.000 1.000 K
1 j
  370.4836 427.6246 m
  291.1740 427.6246 L
  291.1740 419.7122 L
  370.4836 419.7122 L
  370.4836 427.6246 L
B
U
u
  370.4836 427.6246 m
  291.1740 427.6246 L
  291.1740 419.7122 L
  370.4836 419.7122 L
  370.4836 427.6246 L
S
U
0.0000 w
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  293.6074 421.8452 m
  293.6067 422.1303  293.2971 422.3078  293.0493 422.1652 C
  292.8018 422.0221  292.8024 421.6656  293.0505 421.5235 C
  293.2988 421.3817  293.6078 421.5604  293.6074 421.8451 C
s
U
u
  292.9202 421.8222 m
  293.2581 422.1589 L
  293.2581 421.4855 L
  293.5961 421.8783 L
S
U
  0.000 0.000 0.000 1.000 K
  0.486 0.000 1.000 0.000 k
u
  294.7339 421.9013 m
  294.7333 422.1864  294.4236 422.3640  294.1758 422.2213 C
  293.9283 422.0782  293.9290 421.7217  294.1770 421.5796 C
  294.4253 421.4378  294.7344 421.6166  294.7339 421.9012 C
B
U
  0.000 0.000 0.000 1.000 k
u
  294.7339 421.9013 m
  294.7333 422.1864  294.4236 422.3640  294.1758 422.2213 C
  293.9283 422.0782  293.9290 421.7217  294.1770 421.5796 C
  294.4253 421.4378  294.7344 421.6166  294.7339 421.9012 C
s
U
u
  0.000 0.000 0.000 0.502 K
  292.9765 423.3935 m
  292.9652 423.3935 L
  292.9540 423.3822 L
  292.9427 423.3710 L
  292.9314 423.3598 L
  292.9202 423.3598 L
  292.9202 423.3486 L
  292.9089 423.3374 L
  292.8976 423.3261 L
  292.8976 423.3149 L
  292.8864 423.3149 L
  292.8864 423.3037 L
  292.8864 423.2925 L
  292.8751 423.2812 L
  292.8751 423.2700 L
  292.8751 423.2588 L
  292.8751 423.2476 L
  292.8751 423.2363 L
  292.8638 423.2251 L
  292.8638 423.2139 L
  292.8638 423.2027 L
  292.8638 423.1915 L
  292.8638 423.1802 L
  292.8638 423.1690 L
  292.8638 423.1578 L
  292.8638 423.1466 L
  292.8638 423.1353 L
  292.8638 423.1241 L
  292.8638 423.1129 L
  292.8638 423.0904 L
  292.8638 423.0680 L
  292.8638 423.0568 L
  292.8638 423.0343 L
  292.8751 423.0119 L
  292.8751 422.9894 L
  292.8751 422.9782 L
  292.8864 422.9558 L
  292.8864 422.9445 L
  292.8976 422.9221 L
  292.9089 422.9109 L
  292.9089 422.8884 L
  292.9202 422.8772 L
  292.9314 422.8548 L
  292.9427 422.8435 L
  292.9540 422.8323 L
  292.9540 422.8211 L
  292.9652 422.8099 L
  292.9877 422.7986 L
  292.9990 422.7874 L
  293.0103 422.7762 L
  293.0215 422.7650 L
  293.0328 422.7537 L
  293.0553 422.7537 L
  293.0666 422.7425 L
  293.0891 422.7425 L
  293.1004 422.7313 L
  293.1229 422.7313 L
  293.1455 422.7201 L
  293.1567 422.7201 L
  293.1793 422.7201 L
  293.2018 422.7201 L
  293.2243 422.7201 L
  293.2469 422.7201 L
  293.2581 422.7201 L
  293.2807 422.7313 L
  293.3032 422.7313 L
  293.3144 422.7425 L
  293.3370 422.7425 L
  293.3482 422.7537 L
  293.3708 422.7537 L
  293.3820 422.7650 L
  293.3933 422.7762 L
  293.4046 422.7874 L
  293.4158 422.7986 L
  293.4384 422.8099 L
  293.4496 422.8211 L
  293.4609 422.8323 L
  293.4609 422.8435 L
  293.4722 422.8548 L
  293.4834 422.8772 L
  293.4947 422.8884 L
  293.4947 422.9109 L
  293.5060 422.9221 L
  293.5172 422.9445 L
  293.5172 422.9558 L
  293.5285 422.9782 L
  293.5285 422.9894 L
  293.5285 423.0119 L
  293.5398 423.0343 L
  293.5398 423.0568 L
  293.5398 423.0680 L
  293.5398 423.0904 L
  293.5398 423.1129 L
  293.5398 423.1241 L
  293.5398 423.1466 L
  293.5398 423.1578 L
  293.5398 423.1690 L
  293.5398 423.1802 L
  293.5398 423.1915 L
  293.5398 423.2139 L
  293.5398 423.2251 L
  293.5398 423.2363 L
  293.5398 423.2476 L
  293.5285 423.2588 L
  293.5285 423.2700 L
  293.5285 423.2812 L
  293.5285 423.2925 L
  293.5285 423.3037 L
  293.5172 423.3149 L
  293.5172 423.3261 L
  293.5060 423.3261 L
  293.5060 423.3374 L
  293.4947 423.3486 L
  293.4834 423.3598 L
  293.4722 423.3710 L
  293.4609 423.3710 L
  293.4609 423.3822 L
  293.4496 423.3822 L
  293.4384 423.3935 L
  293.4271 423.3935 L
S
U
u
  295.1169 421.5977 m
  295.1169 422.2150 L
S
U
u
  295.4549 421.5977 m
  295.4549 422.2150 L
S
U
u
  294.9480 422.1028 m
  295.6239 422.1028 L
S
U
u
  294.9480 421.7100 m
  295.6239 421.7100 L
S
U
  0.000 0.000 0.000 1.000 K
  0.486 0.000 1.000 0.000 k
u
  294.7339 423.1358 m
  294.7333 423.4209  294.4236 423.5985  294.1758 423.4558 C
  293.9283 423.3128  293.9290 422.9563  294.1770 422.8141 C
  294.4253 422.6724  294.7344 422.8511  294.7339 423.1358 C
B
U
  0.000 0.000 0.000 1.000 k
u
  294.7339 423.1358 m
  294.7333 423.4209  294.4236 423.5985  294.1758 423.4558 C
  293.9283 423.3128  293.9290 422.9563  294.1770 422.8141 C
  294.4253 422.6724  294.7344 422.8511  294.7339 423.1358 C
s
U
  0.486 0.000 1.000 0.000 k
u
  296.5364 421.9013 m
  296.5358 422.1864  296.2261 422.3640  295.9783 422.2213 C
  295.7308 422.0782  295.7315 421.7217  295.9795 421.5796 C
  296.2278 421.4378  296.5368 421.6166  296.5364 421.9012 C
B
U
  0.000 0.000 0.000 1.000 k
u
  296.5364 421.9013 m
  296.5358 422.1864  296.2261 422.3640  295.9783 422.2213 C
  295.7308 422.0782  295.7315 421.7217  295.9795 421.5796 C
  296.2278 421.4378  296.5368 421.6166  296.5364 421.9012 C
s
U
  0.486 0.000 1.000 0.000 k
u
  300.1414 421.8451 m
  300.1409 422.0870  299.8781 422.2377  299.6679 422.1166 C
  299.4578 421.9952  299.4584 421.6927  299.6689 421.5721 C
  299.8796 421.4519  300.1418 421.6035  300.1414 421.8450 C
B
U
  0.000 0.000 0.000 1.000 k
u
  300.1414 421.8451 m
  300.1409 422.0870  299.8781 422.2377  299.6679 422.1166 C
  299.4578 421.9952  299.4584 421.6927  299.6689 421.5721 C
  299.8796 421.4519  300.1418 421.6035  300.1414 421.8450 C
s
U
  0.486 0.000 1.000 0.000 k
u
  299.0712 421.8451 m
  299.0706 422.0870  298.8079 422.2377  298.5976 422.1166 C
  298.3876 421.9952  298.3882 421.6927  298.5987 421.5721 C
  298.8093 421.4519  299.0715 421.6035  299.0712 421.8450 C
B
U
  0.000 0.000 0.000 1.000 k
u
  299.0712 421.8451 m
  299.0706 422.0870  298.8079 422.2377  298.5976 422.1166 C
  298.3876 421.9952  298.3882 421.6927  298.5987 421.5721 C
  298.8093 421.4519  299.0715 421.6035  299.0712 421.8450 C
s
U
u
  0.000 0.000 0.000 1.000 k
  301.4820 422.7762 m
  300.3554 422.7762 L
  300.3554 421.6539 L
  301.4820 421.6539 L
  301.4820 422.7762 L
B
U
u
  301.4820 422.7762 m
  300.3554 422.7762 L
  300.3554 421.6539 L
  301.4820 421.6539 L
  301.4820 422.7762 L
S
U
u
  0.000 0.000 0.000 0.051 k
  301.3130 422.6078 m
  300.5244 422.6078 L
  300.5244 421.8222 L
  301.3130 421.8222 L
  301.3130 422.6078 L
B
U
u
  301.3130 422.6078 m
  300.5244 422.6078 L
  300.5244 421.8222 L
  301.3130 421.8222 L
  301.3130 422.6078 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 302.0453 420.9244 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 302.9465 420.9244 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 303.9041 420.9244 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 304.7490 420.9244 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 305.7066 420.9244 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 306.6078 420.9244 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 302.0453 423.5057 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 302.9465 423.5057 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 303.9041 423.5057 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 304.5800 423.5057 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 305.1320 423.5057 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 305.5376 423.5057 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 306.0896 423.5057 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 306.4388 423.5057 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 306.9908 423.5057 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  0.486 0.000 1.000 0.000 k
u
  307.0697 421.8451 m
  307.0692 422.0870  306.8064 422.2377  306.5962 422.1166 C
  306.3862 421.9952  306.3867 421.6927  306.5972 421.5721 C
  306.8079 421.4519  307.0701 421.6035  307.0697 421.8450 C
B
U
  0.000 0.000 0.000 1.000 k
u
  307.0697 421.8451 m
  307.0692 422.0870  306.8064 422.2377  306.5962 422.1166 C
  306.3862 421.9952  306.3867 421.6927  306.5972 421.5721 C
  306.8079 421.4519  307.0701 421.6035  307.0697 421.8450 C
s
U
  0.486 0.000 1.000 0.000 k
u
  306.1685 421.8451 m
  306.1679 422.0870  305.9052 422.2377  305.6949 422.1166 C
  305.4849 421.9952  305.4855 421.6927  305.6960 421.5721 C
  305.9066 421.4519  306.1688 421.6035  306.1685 421.8450 C
B
U
  0.000 0.000 0.000 1.000 k
u
  306.1685 421.8451 m
  306.1679 422.0870  305.9052 422.2377  305.6949 422.1166 C
  305.4849 421.9952  305.4855 421.6927  305.6960 421.5721 C
  305.9066 421.4519  306.1688 421.6035  306.1685 421.8450 C
s
U
  0.486 0.000 1.000 0.000 k
u
  305.2109 421.8451 m
  305.2104 422.0870  304.9476 422.2377  304.7374 422.1166 C
  304.5273 421.9952  304.5279 421.6927  304.7384 421.5721 C
  304.9491 421.4519  305.2113 421.6035  305.2109 421.8450 C
B
U
  0.000 0.000 0.000 1.000 k
u
  305.2109 421.8451 m
  305.2104 422.0870  304.9476 422.2377  304.7374 422.1166 C
  304.5273 421.9952  304.5279 421.6927  304.7384 421.5721 C
  304.9491 421.4519  305.2113 421.6035  305.2109 421.8450 C
s
U
  0.486 0.000 1.000 0.000 k
u
  304.3660 421.8451 m
  304.3654 422.0870  304.1027 422.2377  303.8925 422.1166 C
  303.6824 421.9952  303.6830 421.6927  303.8935 421.5721 C
  304.1041 421.4519  304.3663 421.6035  304.3660 421.8450 C
B
U
  0.000 0.000 0.000 1.000 k
u
  304.3660 421.8451 m
  304.3654 422.0870  304.1027 422.2377  303.8925 422.1166 C
  303.6824 421.9952  303.6830 421.6927  303.8935 421.5721 C
  304.1041 421.4519  304.3663 421.6035  304.3660 421.8450 C
s
U
  0.486 0.000 1.000 0.000 k
u
  303.4084 421.8451 m
  303.4079 422.0870  303.1451 422.2377  302.9349 422.1166 C
  302.7249 421.9952  302.7254 421.6927  302.9359 421.5721 C
  303.1466 421.4519  303.4088 421.6035  303.4084 421.8450 C
B
U
  0.000 0.000 0.000 1.000 k
u
  303.4084 421.8451 m
  303.4079 422.0870  303.1451 422.2377  302.9349 422.1166 C
  302.7249 421.9952  302.7254 421.6927  302.9359 421.5721 C
  303.1466 421.4519  303.4088 421.6035  303.4084 421.8450 C
s
U
  0.486 0.000 1.000 0.000 k
u
  302.5071 421.8451 m
  302.5066 422.0870  302.2439 422.2377  302.0336 422.1166 C
  301.8236 421.9952  301.8242 421.6927  302.0347 421.5721 C
  302.2453 421.4519  302.5075 421.6035  302.5071 421.8450 C
B
U
  0.000 0.000 0.000 1.000 k
u
  302.5071 421.8451 m
  302.5066 422.0870  302.2439 422.2377  302.0336 422.1166 C
  301.8236 421.9952  301.8242 421.6927  302.0347 421.5721 C
  302.2453 421.4519  302.5075 421.6035  302.5071 421.8450 C
s
U
  0.486 0.000 1.000 0.000 k
u
  307.0697 423.0796 m
  307.0692 423.3216  306.8064 423.4722  306.5962 423.3512 C
  306.3862 423.2298  306.3867 422.9273  306.5972 422.8067 C
  306.8079 422.6864  307.0701 422.8381  307.0697 423.0796 C
B
U
  0.000 0.000 0.000 1.000 k
u
  307.0697 423.0796 m
  307.0692 423.3216  306.8064 423.4722  306.5962 423.3512 C
  306.3862 423.2298  306.3867 422.9273  306.5972 422.8067 C
  306.8079 422.6864  307.0701 422.8381  307.0697 423.0796 C
s
U
  0.486 0.000 1.000 0.000 k
u
  306.1685 423.0796 m
  306.1679 423.3216  305.9052 423.4722  305.6949 423.3512 C
  305.4849 423.2298  305.4855 422.9273  305.6960 422.8067 C
  305.9066 422.6864  306.1688 422.8381  306.1685 423.0796 C
B
U
  0.000 0.000 0.000 1.000 k
u
  306.1685 423.0796 m
  306.1679 423.3216  305.9052 423.4722  305.6949 423.3512 C
  305.4849 423.2298  305.4855 422.9273  305.6960 422.8067 C
  305.9066 422.6864  306.1688 422.8381  306.1685 423.0796 C
s
U
  0.486 0.000 1.000 0.000 k
u
  305.2109 423.0796 m
  305.2104 423.3216  304.9476 423.4722  304.7374 423.3512 C
  304.5273 423.2298  304.5279 422.9273  304.7384 422.8067 C
  304.9491 422.6864  305.2113 422.8381  305.2109 423.0796 C
B
U
  0.000 0.000 0.000 1.000 k
u
  305.2109 423.0796 m
  305.2104 423.3216  304.9476 423.4722  304.7374 423.3512 C
  304.5273 423.2298  304.5279 422.9273  304.7384 422.8067 C
  304.9491 422.6864  305.2113 422.8381  305.2109 423.0796 C
s
U
  0.486 0.000 1.000 0.000 k
u
  304.3660 423.0796 m
  304.3654 423.3216  304.1027 423.4722  303.8925 423.3512 C
  303.6824 423.2298  303.6830 422.9273  303.8935 422.8067 C
  304.1041 422.6864  304.3663 422.8381  304.3660 423.0796 C
B
U
  0.000 0.000 0.000 1.000 k
u
  304.3660 423.0796 m
  304.3654 423.3216  304.1027 423.4722  303.8925 423.3512 C
  303.6824 423.2298  303.6830 422.9273  303.8935 422.8067 C
  304.1041 422.6864  304.3663 422.8381  304.3660 423.0796 C
s
U
  0.486 0.000 1.000 0.000 k
u
  303.4084 423.0796 m
  303.4079 423.3216  303.1451 423.4722  302.9349 423.3512 C
  302.7249 423.2298  302.7254 422.9273  302.9359 422.8067 C
  303.1466 422.6864  303.4088 422.8381  303.4084 423.0796 C
B
U
  0.000 0.000 0.000 1.000 k
u
  303.4084 423.0796 m
  303.4079 423.3216  303.1451 423.4722  302.9349 423.3512 C
  302.7249 423.2298  302.7254 422.9273  302.9359 422.8067 C
  303.1466 422.6864  303.4088 422.8381  303.4084 423.0796 C
s
U
  0.486 0.000 1.000 0.000 k
u
  302.5071 423.0796 m
  302.5066 423.3216  302.2439 423.4722  302.0336 423.3512 C
  301.8236 423.2298  301.8242 422.9273  302.0347 422.8067 C
  302.2453 422.6864  302.5075 422.8381  302.5071 423.0796 C
B
U
  0.000 0.000 0.000 1.000 k
u
  302.5071 423.0796 m
  302.5066 423.3216  302.2439 423.4722  302.0336 423.3512 C
  301.8236 423.2298  301.8242 422.9273  302.0347 422.8067 C
  302.2453 422.6864  302.5075 422.8381  302.5071 423.0796 C
s
U
0 To
1.0000 0.0000 0.0000 1.0000 299.6795 420.9244 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  0.486 0.000 1.000 0.000 k
u
  300.1414 423.0796 m
  300.1409 423.3216  299.8781 423.4722  299.6679 423.3512 C
  299.4578 423.2298  299.4584 422.9273  299.6689 422.8067 C
  299.8796 422.6864  300.1418 422.8381  300.1414 423.0796 C
B
U
  0.000 0.000 0.000 1.000 k
u
  300.1414 423.0796 m
  300.1409 423.3216  299.8781 423.4722  299.6679 423.3512 C
  299.4578 423.2298  299.4584 422.9273  299.6689 422.8067 C
  299.8796 422.6864  300.1418 422.8381  300.1414 423.0796 C
s
U
  0.486 0.000 1.000 0.000 k
u
  299.0712 423.0796 m
  299.0706 423.3216  298.8079 423.4722  298.5976 423.3512 C
  298.3876 423.2298  298.3882 422.9273  298.5987 422.8067 C
  298.8093 422.6864  299.0715 422.8381  299.0712 423.0796 C
B
U
  0.000 0.000 0.000 1.000 k
u
  299.0712 423.0796 m
  299.0706 423.3216  298.8079 423.4722  298.5976 423.3512 C
  298.3876 423.2298  298.3882 422.9273  298.5987 422.8067 C
  298.8093 422.6864  299.0715 422.8381  299.0712 423.0796 C
s
U
  0.486 0.000 1.000 0.000 k
u
  300.1414 424.2581 m
  300.1409 424.5000  299.8781 424.6507  299.6679 424.5296 C
  299.4578 424.4082  299.4584 424.1057  299.6689 423.9851 C
  299.8796 423.8649  300.1418 424.0165  300.1414 424.2580 C
B
U
  0.000 0.000 0.000 1.000 k
u
  300.1414 424.2581 m
  300.1409 424.5000  299.8781 424.6507  299.6679 424.5296 C
  299.4578 424.4082  299.4584 424.1057  299.6689 423.9851 C
  299.8796 423.8649  300.1418 424.0165  300.1414 424.2580 C
s
U
  0.486 0.000 1.000 0.000 k
u
  299.0712 424.2581 m
  299.0706 424.5000  298.8079 424.6507  298.5976 424.5296 C
  298.3876 424.4082  298.3882 424.1057  298.5987 423.9851 C
  298.8093 423.8649  299.0715 424.0165  299.0712 424.2580 C
B
U
  0.000 0.000 0.000 1.000 k
u
  299.0712 424.2581 m
  299.0706 424.5000  298.8079 424.6507  298.5976 424.5296 C
  298.3876 424.4082  298.3882 424.1057  298.5987 423.9851 C
  298.8093 423.8649  299.0715 424.0165  299.0712 424.2580 C
s
U
u
  325.6466 420.9805 m
  325.6466 420.0826 L
  333.3072 420.0826 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 333.7015 419.9143 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(B\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 0.502 K
1 j
  342.3197 426.5921 m
  325.5340 426.5921 L
  325.5340 421.2049 L
  342.3197 421.2049 L
  342.3197 426.5921 L
S
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  342.1507 426.3676 m
  325.7029 426.3676 L
  325.7029 421.4294 L
  342.1507 421.4294 L
  342.1507 426.3676 L
B
U
u
  0.000 0.000 0.000 0.000 K
  342.1507 426.3676 m
  325.7029 426.3676 L
  325.7029 421.4294 L
  342.1507 421.4294 L
  342.1507 426.3676 L
S
U
u
  0.000 0.000 0.000 1.000 K
  342.3197 420.9805 m
  342.3197 420.0826 L
  334.6591 420.0826 L
S
U
u
  0.000 0.000 0.000 1.000 k
  339.4469 424.4597 m
  341.9254 424.4597 L
  341.9254 425.5820 L
  341.4184 425.5820 L
  341.4184 425.9748 L
  340.9678 425.9748 L
  340.9678 426.3676 L
  340.4608 426.3676 L
  340.4608 425.9748 L
  339.9539 425.9748 L
  339.9539 425.5820 L
  339.4469 425.5820 L
  339.4469 424.4597 L
B
U
u
  339.4469 424.4597 m
  341.9254 424.4597 L
  341.9254 425.5820 L
  341.4184 425.5820 L
  341.4184 425.9748 L
  340.9678 425.9748 L
  340.9678 426.3676 L
  340.4608 426.3676 L
  340.4608 425.9748 L
  339.9539 425.9748 L
  339.9539 425.5820 L
  339.4469 425.5820 L
  339.4469 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 340.1229 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 340.6749 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 341.2269 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  341.9254 423.3374 m
  339.4469 423.3374 L
  339.4469 422.2150 L
  339.9539 422.2150 L
  339.9539 421.8222 L
  340.4045 421.8222 L
  340.4045 421.4294 L
  340.9115 421.4294 L
  340.9115 421.8222 L
  341.4184 421.8222 L
  341.4184 422.2150 L
  341.9254 422.2150 L
  341.9254 423.3374 L
B
U
u
  341.9254 423.3374 m
  339.4469 423.3374 L
  339.4469 422.2150 L
  339.9539 422.2150 L
  339.9539 421.8222 L
  340.4045 421.8222 L
  340.4045 421.4294 L
  340.9115 421.4294 L
  340.9115 421.8222 L
  341.4184 421.8222 L
  341.4184 422.2150 L
  341.9254 422.2150 L
  341.9254 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 340.2919 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 340.8439 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  328.5757 424.4597 m
  331.0541 424.4597 L
  331.0541 425.5820 L
  330.5471 425.5820 L
  330.5471 425.9748 L
  330.0965 425.9748 L
  330.0965 426.3676 L
  329.5896 426.3676 L
  329.5896 425.9748 L
  329.0826 425.9748 L
  329.0826 425.5820 L
  328.5757 425.5820 L
  328.5757 424.4597 L
B
U
u
  328.5757 424.4597 m
  331.0541 424.4597 L
  331.0541 425.5820 L
  330.5471 425.5820 L
  330.5471 425.9748 L
  330.0965 425.9748 L
  330.0965 426.3676 L
  329.5896 426.3676 L
  329.5896 425.9748 L
  329.0826 425.9748 L
  329.0826 425.5820 L
  328.5757 425.5820 L
  328.5757 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 329.4206 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 329.9726 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  331.0541 423.3374 m
  328.5757 423.3374 L
  328.5757 422.2150 L
  329.0826 422.2150 L
  329.0826 421.8222 L
  329.5332 421.8222 L
  329.5332 421.4294 L
  330.0402 421.4294 L
  330.0402 421.8222 L
  330.5471 421.8222 L
  330.5471 422.2150 L
  331.0541 422.2150 L
  331.0541 423.3374 L
B
U
u
  331.0541 423.3374 m
  328.5757 423.3374 L
  328.5757 422.2150 L
  329.0826 422.2150 L
  329.0826 421.8222 L
  329.5332 421.8222 L
  329.5332 421.4294 L
  330.0402 421.4294 L
  330.0402 421.8222 L
  330.5471 421.8222 L
  330.5471 422.2150 L
  331.0541 422.2150 L
  331.0541 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 329.4206 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 329.9726 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  331.3357 424.4597 m
  333.8142 424.4597 L
  333.8142 425.5820 L
  333.3072 425.5820 L
  333.3072 425.9748 L
  332.8566 425.9748 L
  332.8566 426.3676 L
  332.3496 426.3676 L
  332.3496 425.9748 L
  331.8427 425.9748 L
  331.8427 425.5820 L
  331.3357 425.5820 L
  331.3357 424.4597 L
B
U
u
  331.3357 424.4597 m
  333.8142 424.4597 L
  333.8142 425.5820 L
  333.3072 425.5820 L
  333.3072 425.9748 L
  332.8566 425.9748 L
  332.8566 426.3676 L
  332.3496 426.3676 L
  332.3496 425.9748 L
  331.8427 425.9748 L
  331.8427 425.5820 L
  331.3357 425.5820 L
  331.3357 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 332.1806 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 332.7327 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  333.8142 423.3374 m
  331.3357 423.3374 L
  331.3357 422.2150 L
  331.8427 422.2150 L
  331.8427 421.8222 L
  332.2933 421.8222 L
  332.2933 421.4294 L
  332.8003 421.4294 L
  332.8003 421.8222 L
  333.3072 421.8222 L
  333.3072 422.2150 L
  333.8142 422.2150 L
  333.8142 423.3374 L
B
U
u
  333.8142 423.3374 m
  331.3357 423.3374 L
  331.3357 422.2150 L
  331.8427 422.2150 L
  331.8427 421.8222 L
  332.2933 421.8222 L
  332.2933 421.4294 L
  332.8003 421.4294 L
  332.8003 421.8222 L
  333.3072 421.8222 L
  333.3072 422.2150 L
  333.8142 422.2150 L
  333.8142 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 332.1806 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 332.7327 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  334.0395 424.4597 m
  336.5179 424.4597 L
  336.5179 425.5820 L
  336.0109 425.5820 L
  336.0109 425.9748 L
  335.5603 425.9748 L
  335.5603 426.3676 L
  335.0534 426.3676 L
  335.0534 425.9748 L
  334.5464 425.9748 L
  334.5464 425.5820 L
  334.0395 425.5820 L
  334.0395 424.4597 L
B
U
u
  334.0395 424.4597 m
  336.5179 424.4597 L
  336.5179 425.5820 L
  336.0109 425.5820 L
  336.0109 425.9748 L
  335.5603 425.9748 L
  335.5603 426.3676 L
  335.0534 426.3676 L
  335.0534 425.9748 L
  334.5464 425.9748 L
  334.5464 425.5820 L
  334.0395 425.5820 L
  334.0395 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 334.6591 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 335.2111 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 335.7631 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  336.5179 423.3374 m
  334.0395 423.3374 L
  334.0395 422.2150 L
  334.5464 422.2150 L
  334.5464 421.8222 L
  334.9970 421.8222 L
  334.9970 421.4294 L
  335.5040 421.4294 L
  335.5040 421.8222 L
  336.0109 421.8222 L
  336.0109 422.2150 L
  336.5179 422.2150 L
  336.5179 423.3374 L
B
U
u
  336.5179 423.3374 m
  334.0395 423.3374 L
  334.0395 422.2150 L
  334.5464 422.2150 L
  334.5464 421.8222 L
  334.9970 421.8222 L
  334.9970 421.4294 L
  335.5040 421.4294 L
  335.5040 421.8222 L
  336.0109 421.8222 L
  336.0109 422.2150 L
  336.5179 422.2150 L
  336.5179 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 334.8844 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 335.4364 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  336.7432 424.4597 m
  339.2216 424.4597 L
  339.2216 425.5820 L
  338.7147 425.5820 L
  338.7147 425.9748 L
  338.2641 425.9748 L
  338.2641 426.3676 L
  337.7571 426.3676 L
  337.7571 425.9748 L
  337.2502 425.9748 L
  337.2502 425.5820 L
  336.7432 425.5820 L
  336.7432 424.4597 L
B
U
u
  336.7432 424.4597 m
  339.2216 424.4597 L
  339.2216 425.5820 L
  338.7147 425.5820 L
  338.7147 425.9748 L
  338.2641 425.9748 L
  338.2641 426.3676 L
  337.7571 426.3676 L
  337.7571 425.9748 L
  337.2502 425.9748 L
  337.2502 425.5820 L
  336.7432 425.5820 L
  336.7432 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 337.4191 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 337.9711 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 338.5232 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  339.2216 423.3374 m
  336.7432 423.3374 L
  336.7432 422.2150 L
  337.2502 422.2150 L
  337.2502 421.8222 L
  337.7008 421.8222 L
  337.7008 421.4294 L
  338.2077 421.4294 L
  338.2077 421.8222 L
  338.7147 421.8222 L
  338.7147 422.2150 L
  339.2216 422.2150 L
  339.2216 423.3374 L
B
U
u
  339.2216 423.3374 m
  336.7432 423.3374 L
  336.7432 422.2150 L
  337.2502 422.2150 L
  337.2502 421.8222 L
  337.7008 421.8222 L
  337.7008 421.4294 L
  338.2077 421.4294 L
  338.2077 421.8222 L
  338.7147 421.8222 L
  338.7147 422.2150 L
  339.2216 422.2150 L
  339.2216 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 337.5881 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 338.1401 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  325.8719 424.4597 m
  328.3504 424.4597 L
  328.3504 425.5820 L
  327.8434 425.5820 L
  327.8434 425.9748 L
  327.3928 425.9748 L
  327.3928 426.3676 L
  326.8858 426.3676 L
  326.8858 425.9748 L
  326.3789 425.9748 L
  326.3789 425.5820 L
  325.8719 425.5820 L
  325.8719 424.4597 L
B
U
u
  325.8719 424.4597 m
  328.3504 424.4597 L
  328.3504 425.5820 L
  327.8434 425.5820 L
  327.8434 425.9748 L
  327.3928 425.9748 L
  327.3928 426.3676 L
  326.8858 426.3676 L
  326.8858 425.9748 L
  326.3789 425.9748 L
  326.3789 425.5820 L
  325.8719 425.5820 L
  325.8719 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 326.7732 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 327.3252 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  328.3504 423.3374 m
  325.8719 423.3374 L
  325.8719 422.2150 L
  326.3789 422.2150 L
  326.3789 421.8222 L
  326.8295 421.8222 L
  326.8295 421.4294 L
  327.3365 421.4294 L
  327.3365 421.8222 L
  327.8434 421.8222 L
  327.8434 422.2150 L
  328.3504 422.2150 L
  328.3504 423.3374 L
B
U
u
  328.3504 423.3374 m
  325.8719 423.3374 L
  325.8719 422.2150 L
  326.3789 422.2150 L
  326.3789 421.8222 L
  326.8295 421.8222 L
  326.8295 421.4294 L
  327.3365 421.4294 L
  327.3365 421.8222 L
  327.8434 421.8222 L
  327.8434 422.2150 L
  328.3504 422.2150 L
  328.3504 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 326.7732 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 327.3252 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 291.8504 421.9344 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(E\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 291.8504 422.5966 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 291.8504 422.8772 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 291.8504 423.4271 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 291.8504 423.9771 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(r\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 291.8504 424.3138 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(n\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 291.8504 424.8637 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(e\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.0003 1.0000 -1.0000 0.0003 291.8504 425.4137 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  308.5230 420.9805 m
  308.5230 420.0826 L
  316.1835 420.0826 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 316.5778 419.9143 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(A\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 0.502 K
1 j
  325.1960 426.5921 m
  308.4103 426.5921 L
  308.4103 421.2049 L
  325.1960 421.2049 L
  325.1960 426.5921 L
S
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  325.0270 426.3676 m
  308.5793 426.3676 L
  308.5793 421.4294 L
  325.0270 421.4294 L
  325.0270 426.3676 L
B
U
u
  0.000 0.000 0.000 0.000 K
  325.0270 426.3676 m
  308.5793 426.3676 L
  308.5793 421.4294 L
  325.0270 421.4294 L
  325.0270 426.3676 L
S
U
u
  0.000 0.000 0.000 1.000 K
  325.1960 420.9805 m
  325.1960 420.0826 L
  317.5354 420.0826 L
S
U
u
  0.000 0.000 0.000 1.000 k
  322.3233 424.4597 m
  324.8017 424.4597 L
  324.8017 425.5820 L
  324.2948 425.5820 L
  324.2948 425.9748 L
  323.8441 425.9748 L
  323.8441 426.3676 L
  323.3372 426.3676 L
  323.3372 425.9748 L
  322.8302 425.9748 L
  322.8302 425.5820 L
  322.3233 425.5820 L
  322.3233 424.4597 L
B
U
u
  322.3233 424.4597 m
  324.8017 424.4597 L
  324.8017 425.5820 L
  324.2948 425.5820 L
  324.2948 425.9748 L
  323.8441 425.9748 L
  323.8441 426.3676 L
  323.3372 426.3676 L
  323.3372 425.9748 L
  322.8302 425.9748 L
  322.8302 425.5820 L
  322.3233 425.5820 L
  322.3233 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 322.9992 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 323.5512 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 324.1032 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  324.8017 423.3374 m
  322.3233 423.3374 L
  322.3233 422.2150 L
  322.8302 422.2150 L
  322.8302 421.8222 L
  323.2809 421.8222 L
  323.2809 421.4294 L
  323.7878 421.4294 L
  323.7878 421.8222 L
  324.2948 421.8222 L
  324.2948 422.2150 L
  324.8017 422.2150 L
  324.8017 423.3374 L
B
U
u
  324.8017 423.3374 m
  322.3233 423.3374 L
  322.3233 422.2150 L
  322.8302 422.2150 L
  322.8302 421.8222 L
  323.2809 421.8222 L
  323.2809 421.4294 L
  323.7878 421.4294 L
  323.7878 421.8222 L
  324.2948 421.8222 L
  324.2948 422.2150 L
  324.8017 422.2150 L
  324.8017 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 323.1682 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 323.7202 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  311.5083 424.4597 m
  313.9868 424.4597 L
  313.9868 425.5820 L
  313.4798 425.5820 L
  313.4798 425.9748 L
  313.0292 425.9748 L
  313.0292 426.3676 L
  312.5222 426.3676 L
  312.5222 425.9748 L
  312.0153 425.9748 L
  312.0153 425.5820 L
  311.5083 425.5820 L
  311.5083 424.4597 L
B
U
u
  311.5083 424.4597 m
  313.9868 424.4597 L
  313.9868 425.5820 L
  313.4798 425.5820 L
  313.4798 425.9748 L
  313.0292 425.9748 L
  313.0292 426.3676 L
  312.5222 426.3676 L
  312.5222 425.9748 L
  312.0153 425.9748 L
  312.0153 425.5820 L
  311.5083 425.5820 L
  311.5083 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 312.3533 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 312.9053 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  313.9868 423.3374 m
  311.5083 423.3374 L
  311.5083 422.2150 L
  312.0153 422.2150 L
  312.0153 421.8222 L
  312.4659 421.8222 L
  312.4659 421.4294 L
  312.9729 421.4294 L
  312.9729 421.8222 L
  313.4798 421.8222 L
  313.4798 422.2150 L
  313.9868 422.2150 L
  313.9868 423.3374 L
B
U
u
  313.9868 423.3374 m
  311.5083 423.3374 L
  311.5083 422.2150 L
  312.0153 422.2150 L
  312.0153 421.8222 L
  312.4659 421.8222 L
  312.4659 421.4294 L
  312.9729 421.4294 L
  312.9729 421.8222 L
  313.4798 421.8222 L
  313.4798 422.2150 L
  313.9868 422.2150 L
  313.9868 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 312.3533 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 312.9053 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  314.2121 424.4597 m
  316.6905 424.4597 L
  316.6905 425.5820 L
  316.1835 425.5820 L
  316.1835 425.9748 L
  315.7329 425.9748 L
  315.7329 426.3676 L
  315.2260 426.3676 L
  315.2260 425.9748 L
  314.7190 425.9748 L
  314.7190 425.5820 L
  314.2121 425.5820 L
  314.2121 424.4597 L
B
U
u
  314.2121 424.4597 m
  316.6905 424.4597 L
  316.6905 425.5820 L
  316.1835 425.5820 L
  316.1835 425.9748 L
  315.7329 425.9748 L
  315.7329 426.3676 L
  315.2260 426.3676 L
  315.2260 425.9748 L
  314.7190 425.9748 L
  314.7190 425.5820 L
  314.2121 425.5820 L
  314.2121 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 315.0570 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 315.6090 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  316.6905 423.3374 m
  314.2121 423.3374 L
  314.2121 422.2150 L
  314.7190 422.2150 L
  314.7190 421.8222 L
  315.1696 421.8222 L
  315.1696 421.4294 L
  315.6766 421.4294 L
  315.6766 421.8222 L
  316.1835 421.8222 L
  316.1835 422.2150 L
  316.6905 422.2150 L
  316.6905 423.3374 L
B
U
u
  316.6905 423.3374 m
  314.2121 423.3374 L
  314.2121 422.2150 L
  314.7190 422.2150 L
  314.7190 421.8222 L
  315.1696 421.8222 L
  315.1696 421.4294 L
  315.6766 421.4294 L
  315.6766 421.8222 L
  316.1835 421.8222 L
  316.1835 422.2150 L
  316.6905 422.2150 L
  316.6905 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 315.0570 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 315.6090 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  316.9158 424.4597 m
  319.3942 424.4597 L
  319.3942 425.5820 L
  318.8873 425.5820 L
  318.8873 425.9748 L
  318.4367 425.9748 L
  318.4367 426.3676 L
  317.9297 426.3676 L
  317.9297 425.9748 L
  317.4228 425.9748 L
  317.4228 425.5820 L
  316.9158 425.5820 L
  316.9158 424.4597 L
B
U
u
  316.9158 424.4597 m
  319.3942 424.4597 L
  319.3942 425.5820 L
  318.8873 425.5820 L
  318.8873 425.9748 L
  318.4367 425.9748 L
  318.4367 426.3676 L
  317.9297 426.3676 L
  317.9297 425.9748 L
  317.4228 425.9748 L
  317.4228 425.5820 L
  316.9158 425.5820 L
  316.9158 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 317.5354 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 318.0874 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 318.6394 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  319.3942 423.3374 m
  316.9158 423.3374 L
  316.9158 422.2150 L
  317.4228 422.2150 L
  317.4228 421.8222 L
  317.8734 421.8222 L
  317.8734 421.4294 L
  318.3803 421.4294 L
  318.3803 421.8222 L
  318.8873 421.8222 L
  318.8873 422.2150 L
  319.3942 422.2150 L
  319.3942 423.3374 L
B
U
u
  319.3942 423.3374 m
  316.9158 423.3374 L
  316.9158 422.2150 L
  317.4228 422.2150 L
  317.4228 421.8222 L
  317.8734 421.8222 L
  317.8734 421.4294 L
  318.3803 421.4294 L
  318.3803 421.8222 L
  318.8873 421.8222 L
  318.8873 422.2150 L
  319.3942 422.2150 L
  319.3942 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 317.7607 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 318.3127 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  319.6759 424.4597 m
  322.1543 424.4597 L
  322.1543 425.5820 L
  321.6473 425.5820 L
  321.6473 425.9748 L
  321.1967 425.9748 L
  321.1967 426.3676 L
  320.6898 426.3676 L
  320.6898 425.9748 L
  320.1828 425.9748 L
  320.1828 425.5820 L
  319.6759 425.5820 L
  319.6759 424.4597 L
B
U
u
  319.6759 424.4597 m
  322.1543 424.4597 L
  322.1543 425.5820 L
  321.6473 425.5820 L
  321.6473 425.9748 L
  321.1967 425.9748 L
  321.1967 426.3676 L
  320.6898 426.3676 L
  320.6898 425.9748 L
  320.1828 425.9748 L
  320.1828 425.5820 L
  319.6759 425.5820 L
  319.6759 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 320.2955 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 320.8475 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 321.3995 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  322.1543 423.3374 m
  319.6759 423.3374 L
  319.6759 422.2150 L
  320.1828 422.2150 L
  320.1828 421.8222 L
  320.6334 421.8222 L
  320.6334 421.4294 L
  321.1404 421.4294 L
  321.1404 421.8222 L
  321.6473 421.8222 L
  321.6473 422.2150 L
  322.1543 422.2150 L
  322.1543 423.3374 L
B
U
u
  322.1543 423.3374 m
  319.6759 423.3374 L
  319.6759 422.2150 L
  320.1828 422.2150 L
  320.1828 421.8222 L
  320.6334 421.8222 L
  320.6334 421.4294 L
  321.1404 421.4294 L
  321.1404 421.8222 L
  321.6473 421.8222 L
  321.6473 422.2150 L
  322.1543 422.2150 L
  322.1543 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 320.5208 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 321.0728 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  308.8046 424.4597 m
  311.2830 424.4597 L
  311.2830 425.5820 L
  310.7761 425.5820 L
  310.7761 425.9748 L
  310.3255 425.9748 L
  310.3255 426.3676 L
  309.8185 426.3676 L
  309.8185 425.9748 L
  309.3116 425.9748 L
  309.3116 425.5820 L
  308.8046 425.5820 L
  308.8046 424.4597 L
B
U
u
  308.8046 424.4597 m
  311.2830 424.4597 L
  311.2830 425.5820 L
  310.7761 425.5820 L
  310.7761 425.9748 L
  310.3255 425.9748 L
  310.3255 426.3676 L
  309.8185 426.3676 L
  309.8185 425.9748 L
  309.3116 425.9748 L
  309.3116 425.5820 L
  308.8046 425.5820 L
  308.8046 424.4597 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 309.6495 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 310.2015 426.7604 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  311.2830 423.3374 m
  308.8046 423.3374 L
  308.8046 422.2150 L
  309.3116 422.2150 L
  309.3116 421.8222 L
  309.7622 421.8222 L
  309.7622 421.4294 L
  310.2691 421.4294 L
  310.2691 421.8222 L
  310.7761 421.8222 L
  310.7761 422.2150 L
  311.2830 422.2150 L
  311.2830 423.3374 L
B
U
u
  311.2830 423.3374 m
  308.8046 423.3374 L
  308.8046 422.2150 L
  309.3116 422.2150 L
  309.3116 421.8222 L
  309.7622 421.8222 L
  309.7622 421.4294 L
  310.2691 421.4294 L
  310.2691 421.8222 L
  310.7761 421.8222 L
  310.7761 422.2150 L
  311.2830 422.2150 L
  311.2830 423.3374 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 309.6495 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 310.2015 420.5315 0 Tp
TP
/_Helvetica 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(x\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 299.6795 424.7403 0 Tp
TP
/_Helvetica-Bold 1.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(C\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 0.502 K
1 j
  298.1586 425.0208 m
  298.7219 425.0208 L
S
U
u
  0.000 0.000 0.000 0.502 k
  0.000 0.000 0.000 1.000 K
  298.7782 425.2453 m
  298.7782 424.7964 L
  299.2289 425.0208 L
  298.7782 425.2453 L
B
U
u
  0.000 0.000 0.000 0.502 K
  298.7782 425.2453 m
  298.7782 424.7964 L
  299.2289 425.0208 L
  298.7782 425.2453 L
S
U
u
  0.000 0.000 0.000 0.251 k
  0.000 0.000 0.000 1.000 K
  368.6811 427.4338 m
  342.6576 427.4338 L
  342.6576 419.9143 L
  368.6811 419.9143 L
  368.6811 427.4338 L
B
U
u
  368.6811 427.4338 m
  342.6576 427.4338 L
  342.6576 419.9143 L
  368.6811 419.9143 L
  368.6811 427.4338 L
S
U
  0.000 0.000 0.000 0.051 k
u
  368.4670 426.3907 m
  368.4662 426.7622  368.0627 426.9936  367.7399 426.8077 C
  367.4173 426.6213  367.4182 426.1568  367.7414 425.9715 C
  368.0649 425.7868  368.4676 426.0197  368.4670 426.3907 C
B
U
  0.000 0.000 0.000 1.000 k
u
  368.4670 426.3907 m
  368.4662 426.7622  368.0627 426.9936  367.7399 426.8077 C
  367.4173 426.6213  367.4182 426.1568  367.7414 425.9715 C
  368.0649 425.7868  368.4676 426.0197  368.4670 426.3907 C
s
U
  0.000 0.000 0.000 0.051 k
u
  368.4670 421.0036 m
  368.4662 421.3751  368.0627 421.6065  367.7399 421.4205 C
  367.4173 421.2341  367.4182 420.7696  367.7414 420.5844 C
  368.0649 420.3997  368.4676 420.6326  368.4670 421.0035 C
B
U
  0.000 0.000 0.000 1.000 k
u
  368.4670 421.0036 m
  368.4662 421.3751  368.0627 421.6065  367.7399 421.4205 C
  367.4173 421.2341  367.4182 420.7696  367.7414 420.5844 C
  368.0649 420.3997  368.4676 420.6326  368.4670 421.0035 C
s
U
  0.000 0.000 0.000 0.051 k
u
  343.7954 426.3907 m
  343.7946 426.7622  343.3911 426.9936  343.0683 426.8077 C
  342.7457 426.6213  342.7466 426.1568  343.0698 425.9715 C
  343.3934 425.7868  343.7960 426.0197  343.7954 426.3907 C
B
U
  0.000 0.000 0.000 1.000 k
u
  343.7954 426.3907 m
  343.7946 426.7622  343.3911 426.9936  343.0683 426.8077 C
  342.7457 426.6213  342.7466 426.1568  343.0698 425.9715 C
  343.3934 425.7868  343.7960 426.0197  343.7954 426.3907 C
s
U
  0.000 0.000 0.000 0.051 k
u
  343.7954 421.0036 m
  343.7946 421.3751  343.3911 421.6065  343.0683 421.4205 C
  342.7457 421.2341  342.7466 420.7696  343.0698 420.5844 C
  343.3934 420.3997  343.7960 420.6326  343.7954 421.0035 C
B
U
  0.000 0.000 0.000 1.000 k
u
  343.7954 421.0036 m
  343.7946 421.3751  343.3911 421.6065  343.0683 421.4205 C
  342.7457 421.2341  342.7466 420.7696  343.0698 420.5844 C
  343.3934 420.3997  343.7960 420.6326  343.7954 421.0035 C
s
U
0 To
1.0000 0.0000 0.0000 1.0000 314.5643 439.4524 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Summit 48\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
1.0000 w
  0.000 0.431 0.282 0.533 K
1 j
  136.0668 481.5225 m
  161.3088 481.5225 L
  161.3088 390.8915 L
  162.8715 390.8915 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 154.0968 517.4624 0 Tp
TP
/_Helvetica 12.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Internal network\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.051 k
0.2500 w
  0.000 0.000 0.000 1.000 K
1 j
  298.4502 387.4132 m
  277.5354 387.4132 L
  277.5354 343.9068 L
  298.4502 343.9068 L
  298.4502 387.4132 L
B
U
u
  298.4502 387.4132 m
  277.5354 387.4132 L
  277.5354 343.9068 L
  298.4502 343.9068 L
  298.4502 387.4132 L
S
U
u
  0.000 0.000 0.000 0.502 K
  295.1151 365.3444 m
  278.7225 365.3444 L
  278.7225 347.7051 L
  295.1151 347.7051 L
  295.1151 365.3444 L
S
U
u
  0.000 0.000 0.000 1.000 K
  278.8355 385.2717 m
  295.0021 385.2717 L
  295.0021 369.9430 L
  278.8355 369.9430 L
  278.8355 385.1589 L
  278.8355 369.9430 L
  292.5149 369.9430 L
S
U
u
  278.7225 374.9023 m
  295.0021 374.9023 L
S
U
0.0000 w
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  284.2734 351.0867 m
  284.2730 351.2429  284.1035 351.3402  283.9679 351.2620 C
  283.8324 351.1837  283.8328 350.9884  283.9685 350.9105 C
  284.1045 350.8329  284.2736 350.9308  284.2734 351.0867 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  284.2734 351.0867 m
  284.2730 351.2429  284.1035 351.3402  283.9679 351.2620 C
  283.8324 351.1837  283.8328 350.9884  283.9685 350.9105 C
  284.1045 350.8329  284.2736 350.9308  284.2734 351.0867 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  285.7430 351.0867 m
  285.7427 351.2429  285.5732 351.3402  285.4376 351.2620 C
  285.3021 351.1837  285.3024 350.9884  285.4382 350.9105 C
  285.5741 350.8329  285.7433 350.9308  285.7430 351.0867 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  285.7430 351.0867 m
  285.7427 351.2429  285.5732 351.3402  285.4376 351.2620 C
  285.3021 351.1837  285.3024 350.9884  285.4382 350.9105 C
  285.5741 350.8329  285.7433 350.9308  285.7430 351.0867 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  287.1562 351.0867 m
  287.1559 351.2429  286.9863 351.3402  286.8507 351.2620 C
  286.7152 351.1837  286.7156 350.9884  286.8514 350.9105 C
  286.9873 350.8329  287.1564 350.9308  287.1562 351.0867 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  287.1562 351.0867 m
  287.1559 351.2429  286.9863 351.3402  286.8507 351.2620 C
  286.7152 351.1837  286.7156 350.9884  286.8514 350.9105 C
  286.9873 350.8329  287.1564 350.9308  287.1562 351.0867 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  288.6824 351.0867 m
  288.6821 351.2429  288.5126 351.3402  288.3769 351.2620 C
  288.2414 351.1837  288.2418 350.9884  288.3776 350.9105 C
  288.5135 350.8329  288.6827 350.9308  288.6824 351.0867 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  288.6824 351.0867 m
  288.6821 351.2429  288.5126 351.3402  288.3769 351.2620 C
  288.2414 351.1837  288.2418 350.9884  288.3776 350.9105 C
  288.5135 350.8329  288.6827 350.9308  288.6824 351.0867 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  284.2734 349.9033 m
  284.2730 350.0594  284.1035 350.1567  283.9679 350.0786 C
  283.8324 350.0002  283.8328 349.8049  283.9685 349.7270 C
  284.1045 349.6494  284.2736 349.7473  284.2734 349.9032 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  284.2734 349.9033 m
  284.2730 350.0594  284.1035 350.1567  283.9679 350.0786 C
  283.8324 350.0002  283.8328 349.8049  283.9685 349.7270 C
  284.1045 349.6494  284.2736 349.7473  284.2734 349.9032 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  285.7430 349.9033 m
  285.7427 350.0594  285.5732 350.1567  285.4376 350.0786 C
  285.3021 350.0002  285.3024 349.8049  285.4382 349.7270 C
  285.5741 349.6494  285.7433 349.7473  285.7430 349.9032 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  285.7430 349.9033 m
  285.7427 350.0594  285.5732 350.1567  285.4376 350.0786 C
  285.3021 350.0002  285.3024 349.8049  285.4382 349.7270 C
  285.5741 349.6494  285.7433 349.7473  285.7430 349.9032 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  287.1562 349.9033 m
  287.1559 350.0594  286.9863 350.1567  286.8507 350.0786 C
  286.7152 350.0002  286.7156 349.8049  286.8514 349.7270 C
  286.9873 349.6494  287.1564 349.7473  287.1562 349.9032 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  287.1562 349.9033 m
  287.1559 350.0594  286.9863 350.1567  286.8507 350.0786 C
  286.7152 350.0002  286.7156 349.8049  286.8514 349.7270 C
  286.9873 349.6494  287.1564 349.7473  287.1562 349.9032 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  288.6824 349.9033 m
  288.6821 350.0594  288.5126 350.1567  288.3769 350.0786 C
  288.2414 350.0002  288.2418 349.8049  288.3776 349.7270 C
  288.5135 349.6494  288.6827 349.7473  288.6824 349.9032 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  288.6824 349.9033 m
  288.6821 350.0594  288.5126 350.1567  288.3769 350.0786 C
  288.2414 350.0002  288.2418 349.8049  288.3776 349.7270 C
  288.5135 349.6494  288.6827 349.7473  288.6824 349.9032 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  284.2734 348.6635 m
  284.2730 348.8196  284.1035 348.9169  283.9679 348.8387 C
  283.8324 348.7604  283.8328 348.5651  283.9685 348.4872 C
  284.1045 348.4096  284.2736 348.5075  284.2734 348.6634 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  284.2734 348.6635 m
  284.2730 348.8196  284.1035 348.9169  283.9679 348.8387 C
  283.8324 348.7604  283.8328 348.5651  283.9685 348.4872 C
  284.1045 348.4096  284.2736 348.5075  284.2734 348.6634 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  285.7430 348.6635 m
  285.7427 348.8196  285.5732 348.9169  285.4376 348.8387 C
  285.3021 348.7604  285.3024 348.5651  285.4382 348.4872 C
  285.5741 348.4096  285.7433 348.5075  285.7430 348.6634 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  285.7430 348.6635 m
  285.7427 348.8196  285.5732 348.9169  285.4376 348.8387 C
  285.3021 348.7604  285.3024 348.5651  285.4382 348.4872 C
  285.5741 348.4096  285.7433 348.5075  285.7430 348.6634 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  287.2127 348.6635 m
  287.2124 348.8196  287.0429 348.9169  286.9073 348.8387 C
  286.7718 348.7604  286.7721 348.5651  286.9079 348.4872 C
  287.0438 348.4096  287.2130 348.5075  287.2127 348.6634 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  287.2127 348.6635 m
  287.2124 348.8196  287.0429 348.9169  286.9073 348.8387 C
  286.7718 348.7604  286.7721 348.5651  286.9079 348.4872 C
  287.0438 348.4096  287.2130 348.5075  287.2127 348.6634 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  288.6824 348.6635 m
  288.6821 348.8196  288.5126 348.9169  288.3769 348.8387 C
  288.2414 348.7604  288.2418 348.5651  288.3776 348.4872 C
  288.5135 348.4096  288.6827 348.5075  288.6824 348.6634 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  288.6824 348.6635 m
  288.6821 348.8196  288.5126 348.9169  288.3769 348.8387 C
  288.2414 348.7604  288.2418 348.5651  288.3776 348.4872 C
  288.5135 348.4096  288.6827 348.5075  288.6824 348.6634 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  290.0390 351.0867 m
  290.0387 351.2429  289.8692 351.3402  289.7336 351.2620 C
  289.5981 351.1837  289.5984 350.9884  289.7342 350.9105 C
  289.8701 350.8329  290.0393 350.9308  290.0390 351.0867 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  290.0390 351.0867 m
  290.0387 351.2429  289.8692 351.3402  289.7336 351.2620 C
  289.5981 351.1837  289.5984 350.9884  289.7342 350.9105 C
  289.8701 350.8329  290.0393 350.9308  290.0390 351.0867 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  290.0390 349.9033 m
  290.0387 350.0594  289.8692 350.1567  289.7336 350.0786 C
  289.5981 350.0002  289.5984 349.8049  289.7342 349.7270 C
  289.8701 349.6494  290.0393 349.7473  290.0390 349.9032 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  290.0390 349.9033 m
  290.0387 350.0594  289.8692 350.1567  289.7336 350.0786 C
  289.5981 350.0002  289.5984 349.8049  289.7342 349.7270 C
  289.8701 349.6494  290.0393 349.7473  290.0390 349.9032 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  290.0390 348.6635 m
  290.0387 348.8196  289.8692 348.9169  289.7336 348.8387 C
  289.5981 348.7604  289.5984 348.5651  289.7342 348.4872 C
  289.8701 348.4096  290.0393 348.5075  290.0390 348.6634 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  290.0390 348.6635 m
  290.0387 348.8196  289.8692 348.9169  289.7336 348.8387 C
  289.5981 348.7604  289.5984 348.5651  289.7342 348.4872 C
  289.8701 348.4096  290.0393 348.5075  290.0390 348.6634 C
s
U
u
0.2500 w
  0.000 0.000 0.000 0.502 K
  281.3792 347.7389 m
  281.3792 343.9631 L
S
U
u
0 XR

  0.000 0.000 0.000 0.102 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  295.1151 369.2667 m
  278.7225 369.2667 L
  278.7225 366.8998 L
  295.1151 366.8998 L
  295.1151 369.2667 L
B
U
u
  0.000 0.000 0.000 0.502 K
  295.1151 369.2667 m
  278.7225 369.2667 L
  278.7225 366.8998 L
  295.1151 366.8998 L
  295.1151 369.2667 L
S
U
u
1 XR

  0.000 0.000 0.000 0.102 k
0.2500 w
  0.000 0.000 0.000 1.000 K
  287.1449 369.2329 m
  278.7790 369.2329 L
  278.7790 366.9223 L
  287.1449 366.9223 L
  287.1449 369.2329 L
B
U
u
  0.000 0.000 0.000 0.502 K
  287.1449 369.2329 m
  278.7790 369.2329 L
  278.7790 366.9223 L
  287.1449 366.9223 L
  287.1449 369.2329 L
S
U
u
  0.000 0.000 0.000 0.153 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  286.8397 368.4439 m
  279.0955 368.4439 L
  279.0955 368.1622 L
  286.8397 368.1622 L
  286.8397 368.4439 L
B
U
u
  286.8397 368.4439 m
  279.0955 368.4439 L
  279.0955 368.1622 L
  286.8397 368.1622 L
  286.8397 368.4439 L
S
U
u
  0.000 0.000 0.000 0.051 k
  284.2055 368.2523 m
  281.7184 368.2523 L
  281.7184 367.8015 L
  284.2055 367.8015 L
  284.2055 368.2523 L
B
U
u
  284.2055 368.2523 m
  281.7184 368.2523 L
  281.7184 367.8015 L
  284.2055 367.8015 L
  284.2055 368.2523 L
S
U
u
  0.000 0.000 0.000 0.102 k
  284.2055 368.6468 m
  281.7184 368.6468 L
  281.6053 368.5341 L
  284.3186 368.5341 L
  284.2055 368.6468 L
B
U
u
  284.2055 368.6468 m
  281.7184 368.6468 L
  281.6053 368.5341 L
  284.3186 368.5341 L
  284.2055 368.6468 L
S
U
u
  0.000 0.000 0.000 0.200 k
  286.7492 368.3650 m
  284.2621 368.3650 L
  284.2055 368.2523 L
  286.8057 368.2523 L
  286.7492 368.3650 L
B
U
u
  286.7492 368.3650 m
  284.2621 368.3650 L
  284.2055 368.2523 L
  286.8057 368.2523 L
  286.7492 368.3650 L
S
U
u
  0.000 0.000 0.000 1.000 k
  281.7184 368.1960 m
  281.7184 368.1960 L
  281.7184 367.8578 L
  281.8314 368.1960 L
  281.7184 368.1960 L
B
U
u
  281.7184 368.1960 m
  281.7184 368.1960 L
  281.7184 367.8578 L
  281.8314 368.1960 L
  281.7184 368.1960 L
S
U
u
  0.000 0.000 0.000 1.000 k
  284.1490 368.1960 m
  284.1490 368.1960 L
  284.1490 367.8578 L
  284.0359 368.1960 L
  284.1490 368.1960 L
B
U
u
  284.1490 368.1960 m
  284.1490 368.1960 L
  284.1490 367.8578 L
  284.0359 368.1960 L
  284.1490 368.1960 L
S
U
u
  0.486 0.000 1.000 0.000 k
  281.3001 367.6550 m
  280.7913 367.6550 L
  280.7913 367.4859 L
  281.3001 367.4859 L
  281.3001 367.6550 L
B
U
u
  281.3001 367.6550 m
  280.7913 367.6550 L
  280.7913 367.4859 L
  281.3001 367.4859 L
  281.3001 367.6550 L
S
U
u
  0.000 0.000 0.000 0.200 k
  281.5488 368.3650 m
  279.0616 368.3650 L
  279.0051 368.2523 L
  281.6053 368.2523 L
  281.5488 368.3650 L
B
U
u
  281.5488 368.3650 m
  279.0616 368.3650 L
  279.0051 368.2523 L
  281.6053 368.2523 L
  281.5488 368.3650 L
S
U
u
  0.000 0.000 0.000 0.153 k
  285.4830 367.5761 m
  285.4830 367.6099 L
  285.4717 367.6324 L
  285.4604 367.6550 L
  285.4491 367.6775 L
  285.4265 367.6888 L
  285.4039 367.7000 L
  285.3813 367.7113 L
  285.3474 367.7113 L
  284.7708 367.7113 L
  284.7369 367.7113 L
  284.7143 367.7000 L
  284.6917 367.6888 L
  284.6690 367.6775 L
  284.6577 367.6550 L
  284.6464 367.6324 L
  284.6351 367.6099 L
  284.6351 367.5761 L
  284.6351 367.5648 L
  284.6351 367.5310 L
  284.6464 367.5084 L
  284.6577 367.4859 L
  284.6690 367.4633 L
  284.6917 367.4521 L
  284.7143 367.4408 L
  284.7369 367.4295 L
  284.7708 367.4295 L
  285.3474 367.4295 L
  285.3813 367.4295 L
  285.4039 367.4408 L
  285.4265 367.4521 L
  285.4491 367.4633 L
  285.4604 367.4859 L
  285.4717 367.5084 L
  285.4830 367.5310 L
  285.4830 367.5648 L
  285.4830 367.5761 L
B
U
u
  285.4830 367.5761 m
  285.4830 367.6099 L
  285.4717 367.6324 L
  285.4604 367.6550 L
  285.4491 367.6775 L
  285.4265 367.6888 L
  285.4039 367.7000 L
  285.3813 367.7113 L
  285.3474 367.7113 L
  284.7708 367.7113 L
  284.7369 367.7113 L
  284.7143 367.7000 L
  284.6917 367.6888 L
  284.6690 367.6775 L
  284.6577 367.6550 L
  284.6464 367.6324 L
  284.6351 367.6099 L
  284.6351 367.5761 L
  284.6351 367.5648 L
  284.6351 367.5310 L
  284.6464 367.5084 L
  284.6577 367.4859 L
  284.6690 367.4633 L
  284.6917 367.4521 L
  284.7143 367.4408 L
  284.7369 367.4295 L
  284.7708 367.4295 L
  285.3474 367.4295 L
  285.3813 367.4295 L
  285.4039 367.4408 L
  285.4265 367.4521 L
  285.4491 367.4633 L
  285.4604 367.4859 L
  285.4717 367.5084 L
  285.4830 367.5310 L
  285.4830 367.5648 L
  285.4830 367.5761 L
S
U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  278.7225 380.0870 m
  295.0021 380.0870 L
S
U
u
  0.000 0.000 0.000 0.102 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  291.4748 383.8064 m
  282.3741 383.8064 L
  282.3741 381.6649 L
  291.4748 381.6649 L
  291.4748 383.8064 L
B
U
u
  291.4748 383.8064 m
  282.3741 383.8064 L
  282.3741 381.6649 L
  291.4748 381.6649 L
  291.4748 383.8064 L
S
U
u
  0.000 0.000 0.000 1.000 k
  290.8756 383.7501 m
  283.0750 383.7501 L
  283.0750 382.1721 L
  290.8756 382.1721 L
  290.8756 383.7501 L
B
U
u
  290.8756 383.7501 m
  283.0750 383.7501 L
  283.0750 382.1721 L
  290.8756 382.1721 L
  290.8756 383.7501 L
S
U
u
  0.000 0.000 0.000 0.051 k
  283.0750 383.8064 m
  283.0750 382.3412 L
  283.4142 382.3412 L
  283.4142 382.2285 L
  290.4234 382.2285 L
  290.4234 382.3412 L
  290.8756 382.3412 L
  290.8756 383.8064 L
  283.0750 383.8064 L
B
U
u
  283.0750 383.8064 m
  283.0750 382.3412 L
  283.4142 382.3412 L
  283.4142 382.2285 L
  290.4234 382.2285 L
  290.4234 382.3412 L
  290.8756 382.3412 L
  290.8756 383.8064 L
  283.0750 383.8064 L
S
U
u
  0.000 0.000 0.000 0.102 k
  290.2878 383.5810 m
  290.2765 383.6148 L
  290.2651 383.6374 L
  290.2425 383.6486 L
  290.2086 383.6599 L
  290.1973 383.6599 L
  290.1634 383.6486 L
  290.1408 383.6374 L
  290.1295 383.6148 L
  290.1182 383.5810 L
  290.1182 382.4426 L
  290.1295 382.4088 L
  290.1408 382.3863 L
  290.1634 382.3750 L
  290.1973 382.3637 L
  290.2086 382.3637 L
  290.2425 382.3750 L
  290.2651 382.3863 L
  290.2765 382.4088 L
  290.2878 382.4426 L
  290.2878 383.5810 L
B
U
u
  290.2878 383.5810 m
  290.2765 383.6148 L
  290.2651 383.6374 L
  290.2425 383.6486 L
  290.2086 383.6599 L
  290.1973 383.6599 L
  290.1634 383.6486 L
  290.1408 383.6374 L
  290.1295 383.6148 L
  290.1182 383.5810 L
  290.1182 382.4426 L
  290.1295 382.4088 L
  290.1408 382.3863 L
  290.1634 382.3750 L
  290.1973 382.3637 L
  290.2086 382.3637 L
  290.2425 382.3750 L
  290.2651 382.3863 L
  290.2765 382.4088 L
  290.2878 382.4426 L
  290.2878 383.5810 L
S
U
u
  0.000 0.000 0.000 0.102 k
  283.7307 383.5810 m
  283.7194 383.6148 L
  283.7081 383.6374 L
  283.6855 383.6486 L
  283.6516 383.6599 L
  283.6403 383.6599 L
  283.6063 383.6486 L
  283.5837 383.6374 L
  283.5724 383.6148 L
  283.5611 383.5810 L
  283.5611 382.4426 L
  283.5724 382.4088 L
  283.5837 382.3863 L
  283.6063 382.3750 L
  283.6403 382.3637 L
  283.6516 382.3637 L
  283.6855 382.3750 L
  283.7081 382.3863 L
  283.7194 382.4088 L
  283.7307 382.4426 L
  283.7307 383.5810 L
B
U
u
  283.7307 383.5810 m
  283.7194 383.6148 L
  283.7081 383.6374 L
  283.6855 383.6486 L
  283.6516 383.6599 L
  283.6403 383.6599 L
  283.6063 383.6486 L
  283.5837 383.6374 L
  283.5724 383.6148 L
  283.5611 383.5810 L
  283.5611 382.4426 L
  283.5724 382.4088 L
  283.5837 382.3863 L
  283.6063 382.3750 L
  283.6403 382.3637 L
  283.6516 382.3637 L
  283.6855 382.3750 L
  283.7081 382.3863 L
  283.7194 382.4088 L
  283.7307 382.4426 L
  283.7307 383.5810 L
S
U
u
0.2500 w
  0.000 0.000 0.000 0.502 K
  292.2323 347.7389 m
  292.2323 343.9631 L
S
U
u
  1.000 0.753 0.502 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  290.1747 365.0062 m
  284.2394 365.0062 L
  284.2394 364.1609 L
  290.1747 364.1609 L
  290.1747 365.0062 L
B
U
u
  1.000 0.753 0.502 0.000 K
  290.1747 365.0062 m
  284.2394 365.0062 L
  284.2394 364.1609 L
  290.1747 364.1609 L
  290.1747 365.0062 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 261.7963 318.1703 0 Tp
TP
/_Helvetica 12.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(ORWELL\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.5000 w
  0.000 0.502 0.502 0.498 K
1 j
  253.1419 240.8815 m
  253.1419 239.5593 L
  287.5192 239.5593 L
  287.5192 335.3589 L
S
U
u
  0.000 0.502 0.502 0.498 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  284.2738 334.5175 m
  287.5192 344.2538 L
  290.7646 334.5175 L
  284.2738 334.5175 L
F
U
u
0.5000 w
  0.000 0.000 0.000 1.000 K
  329.1085 213.7162 m
  328.7479 211.0718 L
  327.9065 208.4274 L
  326.7045 205.9032 L
  325.0217 203.6194 L
  322.9783 201.3356 L
  320.6945 199.1720 L
  318.0501 197.1285 L
  315.1653 195.2053 L
  312.1603 193.4023 L
  308.9149 191.8397 L
  305.4290 190.3973 L
  301.9432 189.0751 L
  298.4574 187.8731 L
  294.8514 186.9115 L
  291.3656 186.1903 L
  287.8798 185.5893 L
  284.5142 185.1085 L
  281.1486 184.8681 L
  278.0234 184.8681 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  326.1035 212.1536 m
  326.8247 222.3706 L
  332.4741 213.7162 L
  326.1035 212.1536 L
F
U
u
  0.000 0.000 0.000 1.000 k
  0.000 0.000 0.000 1.000 K
  278.2638 181.5025 m
  269.2487 186.3105 L
  279.3456 187.8731 L
  278.2638 181.5025 L
F
U
0 To
0.8481 0.5298 -0.5298 0.8481 266.4880 199.4124 0 Tp
TP
/_Helvetica 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Duplicated\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
0.8481 0.5298 -0.5298 0.8481 280.6716 191.2387 0 Tp
TP
/_Helvetica 12.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(packets\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  253.1419 240.8815 m
  253.1419 176.4541 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  250.3773 177.1753 m
  253.1419 168.8815 L
  255.9065 177.1753 L
  250.3773 177.1753 L
F
U
u
0.0000 w
  0.000 0.000 0.000 1.000 K
  208.0668 233.3088 m
  208.0668 157.5826 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  210.8314 232.5876 m
  208.0668 240.8815 L
  205.3022 232.5876 L
  210.8314 232.5876 L
F
U
u
1.0000 w
  0.000 0.431 0.282 0.533 K
  290.5242 419.8598 m
  290.5242 405.3155 L
  276.4608 405.3155 L
  276.4608 405.9165 L
  271.8932 405.9165 L
  271.8932 390.8915 L
  253.1419 390.8915 L
S
U
u
0.5000 w
  0.000 0.502 0.502 0.498 K
  330.1903 419.8598 m
  330.1903 397.2621 L
  297.9766 397.2621 L
  297.9766 387.8865 L
S
U
u
  0.000 0.000 0.000 0.051 k
0.2500 w
  0.000 0.000 0.000 1.000 K
  290.6379 531.6536 m
  269.8420 531.6536 L
  269.8420 488.1472 L
  290.6379 488.1472 L
  290.6379 531.6536 L
B
U
u
  290.6379 531.6536 m
  269.8420 531.6536 L
  269.8420 488.1472 L
  290.6379 488.1472 L
  290.6379 531.6536 L
S
U
u
  0.000 0.000 0.000 0.502 K
  287.3218 509.5848 m
  271.0223 509.5848 L
  271.0223 491.9455 L
  287.3218 491.9455 L
  287.3218 509.5848 L
S
U
u
  0.000 0.000 0.000 1.000 K
  271.1347 529.5121 m
  287.2093 529.5121 L
  287.2093 514.1834 L
  271.1347 514.1834 L
  271.1347 529.3993 L
  271.1347 514.1834 L
  284.7363 514.1834 L
S
U
u
  271.0223 519.1427 m
  287.2093 519.1427 L
S
U
0.0000 w
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  276.5416 495.3274 m
  276.5411 495.4835  276.3724 495.5806  276.2379 495.5024 C
  276.1032 495.4241  276.1034 495.2291  276.2383 495.1510 C
  276.3737 495.0733  276.5419 495.1712  276.5416 495.3273 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  276.5416 495.3274 m
  276.5411 495.4835  276.3724 495.5806  276.2379 495.5024 C
  276.1032 495.4241  276.1034 495.2291  276.2383 495.1510 C
  276.3737 495.0733  276.5419 495.1712  276.5416 495.3273 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  278.0029 495.3274 m
  278.0024 495.4835  277.8338 495.5806  277.6992 495.5024 C
  277.5645 495.4241  277.5647 495.2291  277.6997 495.1510 C
  277.8350 495.0733  278.0032 495.1712  278.0029 495.3273 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  278.0029 495.3274 m
  278.0024 495.4835  277.8338 495.5806  277.6992 495.5024 C
  277.5645 495.4241  277.5647 495.2291  277.6997 495.1510 C
  277.8350 495.0733  278.0032 495.1712  278.0029 495.3273 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  279.4081 495.3274 m
  279.4075 495.4835  279.2389 495.5806  279.1043 495.5024 C
  278.9696 495.4241  278.9699 495.2291  279.1048 495.1510 C
  279.2401 495.0733  279.4083 495.1712  279.4081 495.3273 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  279.4081 495.3274 m
  279.4075 495.4835  279.2389 495.5806  279.1043 495.5024 C
  278.9696 495.4241  278.9699 495.2291  279.1048 495.1510 C
  279.2401 495.0733  279.4083 495.1712  279.4081 495.3273 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  280.9256 495.3274 m
  280.9251 495.4835  280.7564 495.5806  280.6219 495.5024 C
  280.4872 495.4241  280.4874 495.2291  280.6223 495.1510 C
  280.7577 495.0733  280.9259 495.1712  280.9256 495.3273 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  280.9256 495.3274 m
  280.9251 495.4835  280.7564 495.5806  280.6219 495.5024 C
  280.4872 495.4241  280.4874 495.2291  280.6223 495.1510 C
  280.7577 495.0733  280.9259 495.1712  280.9256 495.3273 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  276.5416 494.1439 m
  276.5411 494.3001  276.3724 494.3972  276.2379 494.3190 C
  276.1032 494.2406  276.1034 494.0456  276.2383 493.9676 C
  276.3737 493.8898  276.5419 493.9877  276.5416 494.1439 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  276.5416 494.1439 m
  276.5411 494.3001  276.3724 494.3972  276.2379 494.3190 C
  276.1032 494.2406  276.1034 494.0456  276.2383 493.9676 C
  276.3737 493.8898  276.5419 493.9877  276.5416 494.1439 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  278.0029 494.1439 m
  278.0024 494.3001  277.8338 494.3972  277.6992 494.3190 C
  277.5645 494.2406  277.5647 494.0456  277.6997 493.9676 C
  277.8350 493.8898  278.0032 493.9877  278.0029 494.1439 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  278.0029 494.1439 m
  278.0024 494.3001  277.8338 494.3972  277.6992 494.3190 C
  277.5645 494.2406  277.5647 494.0456  277.6997 493.9676 C
  277.8350 493.8898  278.0032 493.9877  278.0029 494.1439 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  279.4081 494.1439 m
  279.4075 494.3001  279.2389 494.3972  279.1043 494.3190 C
  278.9696 494.2406  278.9699 494.0456  279.1048 493.9676 C
  279.2401 493.8898  279.4083 493.9877  279.4081 494.1439 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  279.4081 494.1439 m
  279.4075 494.3001  279.2389 494.3972  279.1043 494.3190 C
  278.9696 494.2406  278.9699 494.0456  279.1048 493.9676 C
  279.2401 493.8898  279.4083 493.9877  279.4081 494.1439 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  280.9256 494.1439 m
  280.9251 494.3001  280.7564 494.3972  280.6219 494.3190 C
  280.4872 494.2406  280.4874 494.0456  280.6223 493.9676 C
  280.7577 493.8898  280.9259 493.9877  280.9256 494.1439 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  280.9256 494.1439 m
  280.9251 494.3001  280.7564 494.3972  280.6219 494.3190 C
  280.4872 494.2406  280.4874 494.0456  280.6223 493.9676 C
  280.7577 493.8898  280.9259 493.9877  280.9256 494.1439 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  276.5416 492.9041 m
  276.5411 493.0603  276.3724 493.1573  276.2379 493.0791 C
  276.1032 493.0008  276.1034 492.8058  276.2383 492.7277 C
  276.3737 492.6500  276.5419 492.7479  276.5416 492.9041 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  276.5416 492.9041 m
  276.5411 493.0603  276.3724 493.1573  276.2379 493.0791 C
  276.1032 493.0008  276.1034 492.8058  276.2383 492.7277 C
  276.3737 492.6500  276.5419 492.7479  276.5416 492.9041 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  278.0029 492.9041 m
  278.0024 493.0603  277.8338 493.1573  277.6992 493.0791 C
  277.5645 493.0008  277.5647 492.8058  277.6997 492.7277 C
  277.8350 492.6500  278.0032 492.7479  278.0029 492.9041 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  278.0029 492.9041 m
  278.0024 493.0603  277.8338 493.1573  277.6992 493.0791 C
  277.5645 493.0008  277.5647 492.8058  277.6997 492.7277 C
  277.8350 492.6500  278.0032 492.7479  278.0029 492.9041 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  279.4643 492.9041 m
  279.4638 493.0603  279.2951 493.1573  279.1605 493.0791 C
  279.0258 493.0008  279.0261 492.8058  279.1610 492.7277 C
  279.2963 492.6500  279.4645 492.7479  279.4643 492.9041 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  279.4643 492.9041 m
  279.4638 493.0603  279.2951 493.1573  279.1605 493.0791 C
  279.0258 493.0008  279.0261 492.8058  279.1610 492.7277 C
  279.2963 492.6500  279.4645 492.7479  279.4643 492.9041 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  280.9256 492.9041 m
  280.9251 493.0603  280.7564 493.1573  280.6219 493.0791 C
  280.4872 493.0008  280.4874 492.8058  280.6223 492.7277 C
  280.7577 492.6500  280.9259 492.7479  280.9256 492.9041 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  280.9256 492.9041 m
  280.9251 493.0603  280.7564 493.1573  280.6219 493.0791 C
  280.4872 493.0008  280.4874 492.8058  280.6223 492.7277 C
  280.7577 492.6500  280.9259 492.7479  280.9256 492.9041 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  282.2745 495.3274 m
  282.2740 495.4835  282.1053 495.5806  281.9708 495.5024 C
  281.8361 495.4241  281.8363 495.2291  281.9712 495.1510 C
  282.1066 495.0733  282.2748 495.1712  282.2745 495.3273 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  282.2745 495.3274 m
  282.2740 495.4835  282.1053 495.5806  281.9708 495.5024 C
  281.8361 495.4241  281.8363 495.2291  281.9712 495.1510 C
  282.1066 495.0733  282.2748 495.1712  282.2745 495.3273 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  282.2745 494.1439 m
  282.2740 494.3001  282.1053 494.3972  281.9708 494.3190 C
  281.8361 494.2406  281.8363 494.0456  281.9712 493.9676 C
  282.1066 493.8898  282.2748 493.9877  282.2745 494.1439 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  282.2745 494.1439 m
  282.2740 494.3001  282.1053 494.3972  281.9708 494.3190 C
  281.8361 494.2406  281.8363 494.0456  281.9712 493.9676 C
  282.1066 493.8898  282.2748 493.9877  282.2745 494.1439 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  282.2745 492.9041 m
  282.2740 493.0603  282.1053 493.1573  281.9708 493.0791 C
  281.8361 493.0008  281.8363 492.8058  281.9712 492.7277 C
  282.1066 492.6500  282.2748 492.7479  282.2745 492.9041 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  282.2745 492.9041 m
  282.2740 493.0603  282.1053 493.1573  281.9708 493.0791 C
  281.8361 493.0008  281.8363 492.8058  281.9712 492.7277 C
  282.1066 492.6500  282.2748 492.7479  282.2745 492.9041 C
s
U
u
0.2500 w
  0.000 0.000 0.000 0.502 K
  273.6639 491.9793 m
  273.6639 488.2035 L
S
U
u
0 XR

  0.000 0.000 0.000 0.102 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  287.3218 513.5071 m
  271.0223 513.5071 L
  271.0223 511.1402 L
  287.3218 511.1402 L
  287.3218 513.5071 L
B
U
u
  0.000 0.000 0.000 0.502 K
  287.3218 513.5071 m
  271.0223 513.5071 L
  271.0223 511.1402 L
  287.3218 511.1402 L
  287.3218 513.5071 L
S
U
u
1 XR

  0.000 0.000 0.000 0.102 k
0.2500 w
  0.000 0.000 0.000 1.000 K
  279.3968 513.4733 m
  271.0785 513.4733 L
  271.0785 511.1627 L
  279.3968 511.1627 L
  279.3968 513.4733 L
B
U
u
  0.000 0.000 0.000 0.502 K
  279.3968 513.4733 m
  271.0785 513.4733 L
  271.0785 511.1627 L
  279.3968 511.1627 L
  279.3968 513.4733 L
S
U
u
  0.000 0.000 0.000 0.153 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  279.0933 512.6843 m
  271.3932 512.6843 L
  271.3932 512.4026 L
  279.0933 512.4026 L
  279.0933 512.6843 L
B
U
u
  279.0933 512.6843 m
  271.3932 512.6843 L
  271.3932 512.4026 L
  279.0933 512.4026 L
  279.0933 512.6843 L
S
U
u
  0.000 0.000 0.000 0.051 k
  276.4742 512.4927 m
  274.0011 512.4927 L
  274.0011 512.0419 L
  276.4742 512.0419 L
  276.4742 512.4927 L
B
U
u
  276.4742 512.4927 m
  274.0011 512.4927 L
  274.0011 512.0419 L
  276.4742 512.0419 L
  276.4742 512.4927 L
S
U
u
  0.000 0.000 0.000 0.102 k
  276.4742 512.8872 m
  274.0011 512.8872 L
  273.8887 512.7745 L
  276.5866 512.7745 L
  276.4742 512.8872 L
B
U
u
  276.4742 512.8872 m
  274.0011 512.8872 L
  273.8887 512.7745 L
  276.5866 512.7745 L
  276.4742 512.8872 L
S
U
u
  0.000 0.000 0.000 0.200 k
  279.0034 512.6054 m
  276.5304 512.6054 L
  276.4742 512.4927 L
  279.0596 512.4927 L
  279.0034 512.6054 L
B
U
u
  279.0034 512.6054 m
  276.5304 512.6054 L
  276.4742 512.4927 L
  279.0596 512.4927 L
  279.0034 512.6054 L
S
U
u
  0.000 0.000 0.000 1.000 k
  274.0011 512.4364 m
  274.0011 512.4364 L
  274.0011 512.0982 L
  274.1135 512.4364 L
  274.0011 512.4364 L
B
U
u
  274.0011 512.4364 m
  274.0011 512.4364 L
  274.0011 512.0982 L
  274.1135 512.4364 L
  274.0011 512.4364 L
S
U
u
  0.000 0.000 0.000 1.000 k
  276.4180 512.4364 m
  276.4180 512.4364 L
  276.4180 512.0982 L
  276.3055 512.4364 L
  276.4180 512.4364 L
B
U
u
  276.4180 512.4364 m
  276.4180 512.4364 L
  276.4180 512.0982 L
  276.3055 512.4364 L
  276.4180 512.4364 L
S
U
u
  0.486 0.000 1.000 0.000 k
  273.5852 511.8954 m
  273.0794 511.8954 L
  273.0794 511.7263 L
  273.5852 511.7263 L
  273.5852 511.8954 L
B
U
u
  273.5852 511.8954 m
  273.0794 511.8954 L
  273.0794 511.7263 L
  273.5852 511.7263 L
  273.5852 511.8954 L
S
U
u
  0.000 0.000 0.000 0.200 k
  273.8325 512.6054 m
  271.3595 512.6054 L
  271.3033 512.4927 L
  273.8887 512.4927 L
  273.8325 512.6054 L
B
U
u
  273.8325 512.6054 m
  271.3595 512.6054 L
  271.3033 512.4927 L
  273.8887 512.4927 L
  273.8325 512.6054 L
S
U
u
  0.000 0.000 0.000 0.153 k
  277.7444 511.8165 m
  277.7444 511.8503 L
  277.7332 511.8728 L
  277.7219 511.8954 L
  277.7107 511.9179 L
  277.6882 511.9292 L
  277.6657 511.9404 L
  277.6432 511.9517 L
  277.6095 511.9517 L
  277.0362 511.9517 L
  277.0025 511.9517 L
  276.9800 511.9404 L
  276.9575 511.9292 L
  276.9350 511.9179 L
  276.9238 511.8954 L
  276.9126 511.8728 L
  276.9013 511.8503 L
  276.9013 511.8165 L
  276.9013 511.8052 L
  276.9013 511.7714 L
  276.9126 511.7488 L
  276.9238 511.7263 L
  276.9350 511.7037 L
  276.9575 511.6925 L
  276.9800 511.6812 L
  277.0025 511.6699 L
  277.0362 511.6699 L
  277.6095 511.6699 L
  277.6432 511.6699 L
  277.6657 511.6812 L
  277.6882 511.6925 L
  277.7107 511.7037 L
  277.7219 511.7263 L
  277.7332 511.7488 L
  277.7444 511.7714 L
  277.7444 511.8052 L
  277.7444 511.8165 L
B
U
u
  277.7444 511.8165 m
  277.7444 511.8503 L
  277.7332 511.8728 L
  277.7219 511.8954 L
  277.7107 511.9179 L
  277.6882 511.9292 L
  277.6657 511.9404 L
  277.6432 511.9517 L
  277.6095 511.9517 L
  277.0362 511.9517 L
  277.0025 511.9517 L
  276.9800 511.9404 L
  276.9575 511.9292 L
  276.9350 511.9179 L
  276.9238 511.8954 L
  276.9126 511.8728 L
  276.9013 511.8503 L
  276.9013 511.8165 L
  276.9013 511.8052 L
  276.9013 511.7714 L
  276.9126 511.7488 L
  276.9238 511.7263 L
  276.9350 511.7037 L
  276.9575 511.6925 L
  276.9800 511.6812 L
  277.0025 511.6699 L
  277.0362 511.6699 L
  277.6095 511.6699 L
  277.6432 511.6699 L
  277.6657 511.6812 L
  277.6882 511.6925 L
  277.7107 511.7037 L
  277.7219 511.7263 L
  277.7332 511.7488 L
  277.7444 511.7714 L
  277.7444 511.8052 L
  277.7444 511.8165 L
S
U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  271.0223 524.3274 m
  287.2093 524.3274 L
S
U
u
  0.000 0.000 0.000 0.102 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  283.7021 528.0468 m
  274.6531 528.0468 L
  274.6531 525.9053 L
  283.7021 525.9053 L
  283.7021 528.0468 L
B
U
u
  283.7021 528.0468 m
  274.6531 528.0468 L
  274.6531 525.9053 L
  283.7021 525.9053 L
  283.7021 528.0468 L
S
U
u
  0.000 0.000 0.000 1.000 k
  283.1064 527.9905 m
  275.3501 527.9905 L
  275.3501 526.4125 L
  283.1064 526.4125 L
  283.1064 527.9905 L
B
U
u
  283.1064 527.9905 m
  275.3501 527.9905 L
  275.3501 526.4125 L
  283.1064 526.4125 L
  283.1064 527.9905 L
S
U
u
  0.000 0.000 0.000 0.051 k
  275.3501 528.0468 m
  275.3501 526.5816 L
  275.6873 526.5816 L
  275.6873 526.4689 L
  282.6567 526.4689 L
  282.6567 526.5816 L
  283.1064 526.5816 L
  283.1064 528.0468 L
  275.3501 528.0468 L
B
U
u
  275.3501 528.0468 m
  275.3501 526.5816 L
  275.6873 526.5816 L
  275.6873 526.4689 L
  282.6567 526.4689 L
  282.6567 526.5816 L
  283.1064 526.5816 L
  283.1064 528.0468 L
  275.3501 528.0468 L
S
U
u
  0.000 0.000 0.000 0.102 k
  282.5218 527.8214 m
  282.5106 527.8552 L
  282.4994 527.8778 L
  282.4769 527.8890 L
  282.4431 527.9003 L
  282.4319 527.9003 L
  282.3982 527.8890 L
  282.3757 527.8778 L
  282.3645 527.8552 L
  282.3532 527.8214 L
  282.3532 526.6830 L
  282.3645 526.6492 L
  282.3757 526.6267 L
  282.3982 526.6154 L
  282.4319 526.6041 L
  282.4431 526.6041 L
  282.4769 526.6154 L
  282.4994 526.6267 L
  282.5106 526.6492 L
  282.5218 526.6830 L
  282.5218 527.8214 L
B
U
u
  282.5218 527.8214 m
  282.5106 527.8552 L
  282.4994 527.8778 L
  282.4769 527.8890 L
  282.4431 527.9003 L
  282.4319 527.9003 L
  282.3982 527.8890 L
  282.3757 527.8778 L
  282.3645 527.8552 L
  282.3532 527.8214 L
  282.3532 526.6830 L
  282.3645 526.6492 L
  282.3757 526.6267 L
  282.3982 526.6154 L
  282.4319 526.6041 L
  282.4431 526.6041 L
  282.4769 526.6154 L
  282.4994 526.6267 L
  282.5106 526.6492 L
  282.5218 526.6830 L
  282.5218 527.8214 L
S
U
u
  0.000 0.000 0.000 0.102 k
  276.0020 527.8214 m
  275.9908 527.8552 L
  275.9796 527.8778 L
  275.9571 527.8890 L
  275.9234 527.9003 L
  275.9121 527.9003 L
  275.8784 527.8890 L
  275.8559 527.8778 L
  275.8447 527.8552 L
  275.8334 527.8214 L
  275.8334 526.6830 L
  275.8447 526.6492 L
  275.8559 526.6267 L
  275.8784 526.6154 L
  275.9121 526.6041 L
  275.9234 526.6041 L
  275.9571 526.6154 L
  275.9796 526.6267 L
  275.9908 526.6492 L
  276.0020 526.6830 L
  276.0020 527.8214 L
B
U
u
  276.0020 527.8214 m
  275.9908 527.8552 L
  275.9796 527.8778 L
  275.9571 527.8890 L
  275.9234 527.9003 L
  275.9121 527.9003 L
  275.8784 527.8890 L
  275.8559 527.8778 L
  275.8447 527.8552 L
  275.8334 527.8214 L
  275.8334 526.6830 L
  275.8447 526.6492 L
  275.8559 526.6267 L
  275.8784 526.6154 L
  275.9121 526.6041 L
  275.9234 526.6041 L
  275.9571 526.6154 L
  275.9796 526.6267 L
  275.9908 526.6492 L
  276.0020 526.6830 L
  276.0020 527.8214 L
S
U
u
0.2500 w
  0.000 0.000 0.000 0.502 K
  284.4553 491.9793 m
  284.4553 488.2035 L
S
U
u
  1.000 0.753 0.502 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  282.4094 509.2466 m
  276.5079 509.2466 L
  276.5079 508.4013 L
  282.4094 508.4013 L
  282.4094 509.2466 L
B
U
u
  1.000 0.753 0.502 0.000 K
  282.4094 509.2466 m
  276.5079 509.2466 L
  276.5079 508.4013 L
  282.4094 508.4013 L
  282.4094 509.2466 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 258.6711 470.7045 0 Tp
TP
/_Helvetica 12.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(GAUSS\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.051 k
0.2500 w
  0.000 0.000 0.000 1.000 K
1 j
  121.3958 467.2262 m
  100.5999 467.2262 L
  100.5999 423.7198 L
  121.3958 423.7198 L
  121.3958 467.2262 L
B
U
u
  121.3958 467.2262 m
  100.5999 467.2262 L
  100.5999 423.7198 L
  121.3958 423.7198 L
  121.3958 467.2262 L
S
U
u
  0.000 0.000 0.000 0.502 K
  118.0797 445.1574 m
  101.7802 445.1574 L
  101.7802 427.5182 L
  118.0797 427.5182 L
  118.0797 445.1574 L
S
U
u
  0.000 0.000 0.000 1.000 K
  101.8926 465.0847 m
  117.9673 465.0847 L
  117.9673 449.7560 L
  101.8926 449.7560 L
  101.8926 464.9720 L
  101.8926 449.7560 L
  115.4942 449.7560 L
S
U
u
  101.7802 454.7153 m
  117.9673 454.7153 L
S
U
0.0000 w
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  107.2995 430.9000 m
  107.2990 431.0562  107.1304 431.1532  106.9958 431.0750 C
  106.8611 430.9967  106.8613 430.8017  106.9963 430.7237 C
  107.1316 430.6459  107.2998 430.7438  107.2995 430.9000 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  107.2995 430.9000 m
  107.2990 431.0562  107.1304 431.1532  106.9958 431.0750 C
  106.8611 430.9967  106.8613 430.8017  106.9963 430.7237 C
  107.1316 430.6459  107.2998 430.7438  107.2995 430.9000 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  108.7609 430.9000 m
  108.7604 431.0562  108.5917 431.1532  108.4571 431.0750 C
  108.3224 430.9967  108.3227 430.8017  108.4576 430.7237 C
  108.5929 430.6459  108.7611 430.7438  108.7609 430.9000 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  108.7609 430.9000 m
  108.7604 431.0562  108.5917 431.1532  108.4571 431.0750 C
  108.3224 430.9967  108.3227 430.8017  108.4576 430.7237 C
  108.5929 430.6459  108.7611 430.7438  108.7609 430.9000 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  110.1660 430.9000 m
  110.1655 431.0562  109.9968 431.1532  109.8623 431.0750 C
  109.7275 430.9967  109.7278 430.8017  109.8627 430.7237 C
  109.9981 430.6459  110.1662 430.7438  110.1660 430.9000 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  110.1660 430.9000 m
  110.1655 431.0562  109.9968 431.1532  109.8623 431.0750 C
  109.7275 430.9967  109.7278 430.8017  109.8627 430.7237 C
  109.9981 430.6459  110.1662 430.7438  110.1660 430.9000 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  111.6835 430.9000 m
  111.6830 431.0562  111.5144 431.1532  111.3798 431.0750 C
  111.2451 430.9967  111.2453 430.8017  111.3803 430.7237 C
  111.5156 430.6459  111.6838 430.7438  111.6835 430.9000 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  111.6835 430.9000 m
  111.6830 431.0562  111.5144 431.1532  111.3798 431.0750 C
  111.2451 430.9967  111.2453 430.8017  111.3803 430.7237 C
  111.5156 430.6459  111.6838 430.7438  111.6835 430.9000 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  107.2995 429.7165 m
  107.2990 429.8727  107.1304 429.9698  106.9958 429.8916 C
  106.8611 429.8132  106.8613 429.6182  106.9963 429.5402 C
  107.1316 429.4624  107.2998 429.5603  107.2995 429.7165 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  107.2995 429.7165 m
  107.2990 429.8727  107.1304 429.9698  106.9958 429.8916 C
  106.8611 429.8132  106.8613 429.6182  106.9963 429.5402 C
  107.1316 429.4624  107.2998 429.5603  107.2995 429.7165 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  108.7609 429.7165 m
  108.7604 429.8727  108.5917 429.9698  108.4571 429.8916 C
  108.3224 429.8132  108.3227 429.6182  108.4576 429.5402 C
  108.5929 429.4624  108.7611 429.5603  108.7609 429.7165 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  108.7609 429.7165 m
  108.7604 429.8727  108.5917 429.9698  108.4571 429.8916 C
  108.3224 429.8132  108.3227 429.6182  108.4576 429.5402 C
  108.5929 429.4624  108.7611 429.5603  108.7609 429.7165 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  110.1660 429.7165 m
  110.1655 429.8727  109.9968 429.9698  109.8623 429.8916 C
  109.7275 429.8132  109.7278 429.6182  109.8627 429.5402 C
  109.9981 429.4624  110.1662 429.5603  110.1660 429.7165 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  110.1660 429.7165 m
  110.1655 429.8727  109.9968 429.9698  109.8623 429.8916 C
  109.7275 429.8132  109.7278 429.6182  109.8627 429.5402 C
  109.9981 429.4624  110.1662 429.5603  110.1660 429.7165 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  111.6835 429.7165 m
  111.6830 429.8727  111.5144 429.9698  111.3798 429.8916 C
  111.2451 429.8132  111.2453 429.6182  111.3803 429.5402 C
  111.5156 429.4624  111.6838 429.5603  111.6835 429.7165 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  111.6835 429.7165 m
  111.6830 429.8727  111.5144 429.9698  111.3798 429.8916 C
  111.2451 429.8132  111.2453 429.6182  111.3803 429.5402 C
  111.5156 429.4624  111.6838 429.5603  111.6835 429.7165 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  107.2995 428.4767 m
  107.2990 428.6329  107.1304 428.7300  106.9958 428.6518 C
  106.8611 428.5734  106.8613 428.3784  106.9963 428.3004 C
  107.1316 428.2226  107.2998 428.3205  107.2995 428.4767 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  107.2995 428.4767 m
  107.2990 428.6329  107.1304 428.7300  106.9958 428.6518 C
  106.8611 428.5734  106.8613 428.3784  106.9963 428.3004 C
  107.1316 428.2226  107.2998 428.3205  107.2995 428.4767 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  108.7609 428.4767 m
  108.7604 428.6329  108.5917 428.7300  108.4571 428.6518 C
  108.3224 428.5734  108.3227 428.3784  108.4576 428.3004 C
  108.5929 428.2226  108.7611 428.3205  108.7609 428.4767 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  108.7609 428.4767 m
  108.7604 428.6329  108.5917 428.7300  108.4571 428.6518 C
  108.3224 428.5734  108.3227 428.3784  108.4576 428.3004 C
  108.5929 428.2226  108.7611 428.3205  108.7609 428.4767 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  110.2222 428.4767 m
  110.2217 428.6329  110.0530 428.7300  109.9185 428.6518 C
  109.7837 428.5734  109.7840 428.3784  109.9189 428.3004 C
  110.0543 428.2226  110.2225 428.3205  110.2222 428.4767 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  110.2222 428.4767 m
  110.2217 428.6329  110.0530 428.7300  109.9185 428.6518 C
  109.7837 428.5734  109.7840 428.3784  109.9189 428.3004 C
  110.0543 428.2226  110.2225 428.3205  110.2222 428.4767 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  111.6835 428.4767 m
  111.6830 428.6329  111.5144 428.7300  111.3798 428.6518 C
  111.2451 428.5734  111.2453 428.3784  111.3803 428.3004 C
  111.5156 428.2226  111.6838 428.3205  111.6835 428.4767 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  111.6835 428.4767 m
  111.6830 428.6329  111.5144 428.7300  111.3798 428.6518 C
  111.2451 428.5734  111.2453 428.3784  111.3803 428.3004 C
  111.5156 428.2226  111.6838 428.3205  111.6835 428.4767 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  113.0325 430.9000 m
  113.0319 431.0562  112.8633 431.1532  112.7287 431.0750 C
  112.5940 430.9967  112.5943 430.8017  112.7292 430.7237 C
  112.8645 430.6459  113.0327 430.7438  113.0325 430.9000 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  113.0325 430.9000 m
  113.0319 431.0562  112.8633 431.1532  112.7287 431.0750 C
  112.5940 430.9967  112.5943 430.8017  112.7292 430.7237 C
  112.8645 430.6459  113.0327 430.7438  113.0325 430.9000 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  113.0325 429.7165 m
  113.0319 429.8727  112.8633 429.9698  112.7287 429.8916 C
  112.5940 429.8132  112.5943 429.6182  112.7292 429.5402 C
  112.8645 429.4624  113.0327 429.5603  113.0325 429.7165 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  113.0325 429.7165 m
  113.0319 429.8727  112.8633 429.9698  112.7287 429.8916 C
  112.5940 429.8132  112.5943 429.6182  112.7292 429.5402 C
  112.8645 429.4624  113.0327 429.5603  113.0325 429.7165 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  113.0325 428.4767 m
  113.0319 428.6329  112.8633 428.7300  112.7287 428.6518 C
  112.5940 428.5734  112.5943 428.3784  112.7292 428.3004 C
  112.8645 428.2226  113.0327 428.3205  113.0325 428.4767 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  113.0325 428.4767 m
  113.0319 428.6329  112.8633 428.7300  112.7287 428.6518 C
  112.5940 428.5734  112.5943 428.3784  112.7292 428.3004 C
  112.8645 428.2226  113.0327 428.3205  113.0325 428.4767 C
s
U
u
0.2500 w
  0.000 0.000 0.000 0.502 K
  104.4218 427.5520 m
  104.4218 423.7762 L
S
U
u
0 XR

  0.000 0.000 0.000 0.102 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  118.0797 449.0797 m
  101.7802 449.0797 L
  101.7802 446.7128 L
  118.0797 446.7128 L
  118.0797 449.0797 L
B
U
u
  0.000 0.000 0.000 0.502 K
  118.0797 449.0797 m
  101.7802 449.0797 L
  101.7802 446.7128 L
  118.0797 446.7128 L
  118.0797 449.0797 L
S
U
u
1 XR

  0.000 0.000 0.000 0.102 k
0.2500 w
  0.000 0.000 0.000 1.000 K
  110.1548 449.0459 m
  101.8364 449.0459 L
  101.8364 446.7354 L
  110.1548 446.7354 L
  110.1548 449.0459 L
B
U
u
  0.000 0.000 0.000 0.502 K
  110.1548 449.0459 m
  101.8364 449.0459 L
  101.8364 446.7354 L
  110.1548 446.7354 L
  110.1548 449.0459 L
S
U
u
  0.000 0.000 0.000 0.153 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  109.8513 448.2570 m
  102.1512 448.2570 L
  102.1512 447.9752 L
  109.8513 447.9752 L
  109.8513 448.2570 L
B
U
u
  109.8513 448.2570 m
  102.1512 448.2570 L
  102.1512 447.9752 L
  109.8513 447.9752 L
  109.8513 448.2570 L
S
U
u
  0.000 0.000 0.000 0.051 k
  107.2321 448.0653 m
  104.7591 448.0653 L
  104.7591 447.6145 L
  107.2321 447.6145 L
  107.2321 448.0653 L
B
U
u
  107.2321 448.0653 m
  104.7591 448.0653 L
  104.7591 447.6145 L
  107.2321 447.6145 L
  107.2321 448.0653 L
S
U
u
  0.000 0.000 0.000 0.102 k
  107.2321 448.4598 m
  104.7591 448.4598 L
  104.6467 448.3471 L
  107.3445 448.3471 L
  107.2321 448.4598 L
B
U
u
  107.2321 448.4598 m
  104.7591 448.4598 L
  104.6467 448.3471 L
  107.3445 448.3471 L
  107.2321 448.4598 L
S
U
u
  0.000 0.000 0.000 0.200 k
  109.7613 448.1781 m
  107.2883 448.1781 L
  107.2321 448.0653 L
  109.8175 448.0653 L
  109.7613 448.1781 L
B
U
u
  109.7613 448.1781 m
  107.2883 448.1781 L
  107.2321 448.0653 L
  109.8175 448.0653 L
  109.7613 448.1781 L
S
U
u
  0.000 0.000 0.000 1.000 k
  104.7591 448.0090 m
  104.7591 448.0090 L
  104.7591 447.6709 L
  104.8715 448.0090 L
  104.7591 448.0090 L
B
U
u
  104.7591 448.0090 m
  104.7591 448.0090 L
  104.7591 447.6709 L
  104.8715 448.0090 L
  104.7591 448.0090 L
S
U
u
  0.000 0.000 0.000 1.000 k
  107.1759 448.0090 m
  107.1759 448.0090 L
  107.1759 447.6709 L
  107.0635 448.0090 L
  107.1759 448.0090 L
B
U
u
  107.1759 448.0090 m
  107.1759 448.0090 L
  107.1759 447.6709 L
  107.0635 448.0090 L
  107.1759 448.0090 L
S
U
u
  0.486 0.000 1.000 0.000 k
  104.3432 447.4680 m
  103.8373 447.4680 L
  103.8373 447.2989 L
  104.3432 447.2989 L
  104.3432 447.4680 L
B
U
u
  104.3432 447.4680 m
  103.8373 447.4680 L
  103.8373 447.2989 L
  104.3432 447.2989 L
  104.3432 447.4680 L
S
U
u
  0.000 0.000 0.000 0.200 k
  104.5905 448.1781 m
  102.1174 448.1781 L
  102.0612 448.0653 L
  104.6467 448.0653 L
  104.5905 448.1781 L
B
U
u
  104.5905 448.1781 m
  102.1174 448.1781 L
  102.0612 448.0653 L
  104.6467 448.0653 L
  104.5905 448.1781 L
S
U
u
  0.000 0.000 0.000 0.153 k
  108.5023 447.3891 m
  108.5023 447.4229 L
  108.4911 447.4454 L
  108.4798 447.4680 L
  108.4686 447.4905 L
  108.4461 447.5018 L
  108.4236 447.5131 L
  108.4012 447.5243 L
  108.3674 447.5243 L
  107.7941 447.5243 L
  107.7604 447.5243 L
  107.7379 447.5131 L
  107.7155 447.5018 L
  107.6930 447.4905 L
  107.6817 447.4680 L
  107.6705 447.4454 L
  107.6593 447.4229 L
  107.6593 447.3891 L
  107.6593 447.3778 L
  107.6593 447.3440 L
  107.6705 447.3215 L
  107.6817 447.2989 L
  107.6930 447.2764 L
  107.7155 447.2651 L
  107.7379 447.2538 L
  107.7604 447.2426 L
  107.7941 447.2426 L
  108.3674 447.2426 L
  108.4012 447.2426 L
  108.4236 447.2538 L
  108.4461 447.2651 L
  108.4686 447.2764 L
  108.4798 447.2989 L
  108.4911 447.3215 L
  108.5023 447.3440 L
  108.5023 447.3778 L
  108.5023 447.3891 L
B
U
u
  108.5023 447.3891 m
  108.5023 447.4229 L
  108.4911 447.4454 L
  108.4798 447.4680 L
  108.4686 447.4905 L
  108.4461 447.5018 L
  108.4236 447.5131 L
  108.4012 447.5243 L
  108.3674 447.5243 L
  107.7941 447.5243 L
  107.7604 447.5243 L
  107.7379 447.5131 L
  107.7155 447.5018 L
  107.6930 447.4905 L
  107.6817 447.4680 L
  107.6705 447.4454 L
  107.6593 447.4229 L
  107.6593 447.3891 L
  107.6593 447.3778 L
  107.6593 447.3440 L
  107.6705 447.3215 L
  107.6817 447.2989 L
  107.6930 447.2764 L
  107.7155 447.2651 L
  107.7379 447.2538 L
  107.7604 447.2426 L
  107.7941 447.2426 L
  108.3674 447.2426 L
  108.4012 447.2426 L
  108.4236 447.2538 L
  108.4461 447.2651 L
  108.4686 447.2764 L
  108.4798 447.2989 L
  108.4911 447.3215 L
  108.5023 447.3440 L
  108.5023 447.3778 L
  108.5023 447.3891 L
S
U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  101.7802 459.9000 m
  117.9673 459.9000 L
S
U
u
  0.000 0.000 0.000 0.102 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  114.4601 463.6194 m
  105.4110 463.6194 L
  105.4110 461.4779 L
  114.4601 461.4779 L
  114.4601 463.6194 L
B
U
u
  114.4601 463.6194 m
  105.4110 463.6194 L
  105.4110 461.4779 L
  114.4601 461.4779 L
  114.4601 463.6194 L
S
U
u
  0.000 0.000 0.000 1.000 k
  113.8643 463.5631 m
  106.1080 463.5631 L
  106.1080 461.9851 L
  113.8643 461.9851 L
  113.8643 463.5631 L
B
U
u
  113.8643 463.5631 m
  106.1080 463.5631 L
  106.1080 461.9851 L
  113.8643 461.9851 L
  113.8643 463.5631 L
S
U
u
  0.000 0.000 0.000 0.051 k
  106.1080 463.6194 m
  106.1080 462.1542 L
  106.4452 462.1542 L
  106.4452 462.0415 L
  113.4147 462.0415 L
  113.4147 462.1542 L
  113.8643 462.1542 L
  113.8643 463.6194 L
  106.1080 463.6194 L
B
U
u
  106.1080 463.6194 m
  106.1080 462.1542 L
  106.4452 462.1542 L
  106.4452 462.0415 L
  113.4147 462.0415 L
  113.4147 462.1542 L
  113.8643 462.1542 L
  113.8643 463.6194 L
  106.1080 463.6194 L
S
U
u
  0.000 0.000 0.000 0.102 k
  113.2798 463.3940 m
  113.2685 463.4278 L
  113.2573 463.4504 L
  113.2348 463.4616 L
  113.2011 463.4729 L
  113.1898 463.4729 L
  113.1561 463.4616 L
  113.1336 463.4504 L
  113.1224 463.4278 L
  113.1112 463.3940 L
  113.1112 462.2556 L
  113.1224 462.2218 L
  113.1336 462.1993 L
  113.1561 462.1880 L
  113.1898 462.1767 L
  113.2011 462.1767 L
  113.2348 462.1880 L
  113.2573 462.1993 L
  113.2685 462.2218 L
  113.2798 462.2556 L
  113.2798 463.3940 L
B
U
u
  113.2798 463.3940 m
  113.2685 463.4278 L
  113.2573 463.4504 L
  113.2348 463.4616 L
  113.2011 463.4729 L
  113.1898 463.4729 L
  113.1561 463.4616 L
  113.1336 463.4504 L
  113.1224 463.4278 L
  113.1112 463.3940 L
  113.1112 462.2556 L
  113.1224 462.2218 L
  113.1336 462.1993 L
  113.1561 462.1880 L
  113.1898 462.1767 L
  113.2011 462.1767 L
  113.2348 462.1880 L
  113.2573 462.1993 L
  113.2685 462.2218 L
  113.2798 462.2556 L
  113.2798 463.3940 L
S
U
u
  0.000 0.000 0.000 0.102 k
  106.7600 463.3940 m
  106.7487 463.4278 L
  106.7375 463.4504 L
  106.7150 463.4616 L
  106.6813 463.4729 L
  106.6700 463.4729 L
  106.6363 463.4616 L
  106.6138 463.4504 L
  106.6026 463.4278 L
  106.5914 463.3940 L
  106.5914 462.2556 L
  106.6026 462.2218 L
  106.6138 462.1993 L
  106.6363 462.1880 L
  106.6700 462.1767 L
  106.6813 462.1767 L
  106.7150 462.1880 L
  106.7375 462.1993 L
  106.7487 462.2218 L
  106.7600 462.2556 L
  106.7600 463.3940 L
B
U
u
  106.7600 463.3940 m
  106.7487 463.4278 L
  106.7375 463.4504 L
  106.7150 463.4616 L
  106.6813 463.4729 L
  106.6700 463.4729 L
  106.6363 463.4616 L
  106.6138 463.4504 L
  106.6026 463.4278 L
  106.5914 463.3940 L
  106.5914 462.2556 L
  106.6026 462.2218 L
  106.6138 462.1993 L
  106.6363 462.1880 L
  106.6700 462.1767 L
  106.6813 462.1767 L
  106.7150 462.1880 L
  106.7375 462.1993 L
  106.7487 462.2218 L
  106.7600 462.2556 L
  106.7600 463.3940 L
S
U
u
0.2500 w
  0.000 0.000 0.000 0.502 K
  115.2132 427.5520 m
  115.2132 423.7762 L
S
U
u
  1.000 0.753 0.502 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  113.1674 444.8193 m
  107.2658 444.8193 L
  107.2658 443.9739 L
  113.1674 443.9739 L
  113.1674 444.8193 L
B
U
u
  1.000 0.753 0.502 0.000 K
  113.1674 444.8193 m
  107.2658 444.8193 L
  107.2658 443.9739 L
  113.1674 443.9739 L
  113.1674 444.8193 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 80.5342 413.1285 0 Tp
TP
/_Helvetica 12.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(NFS server\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.051 k
0.2500 w
  0.000 0.000 0.000 1.000 K
1 j
  146.9977 405.4432 m
  126.0830 405.4432 L
  126.0830 361.9368 L
  146.9977 361.9368 L
  146.9977 405.4432 L
B
U
u
  146.9977 405.4432 m
  126.0830 405.4432 L
  126.0830 361.9368 L
  146.9977 361.9368 L
  146.9977 405.4432 L
S
U
u
  0.000 0.000 0.000 0.502 K
  143.6627 383.3744 m
  127.2701 383.3744 L
  127.2701 365.7352 L
  143.6627 365.7352 L
  143.6627 383.3744 L
S
U
u
  0.000 0.000 0.000 1.000 K
  127.3831 403.3017 m
  143.5496 403.3017 L
  143.5496 387.9730 L
  127.3831 387.9730 L
  127.3831 403.1890 L
  127.3831 387.9730 L
  141.0625 387.9730 L
S
U
u
  127.2701 392.9323 m
  143.5496 392.9323 L
S
U
0.0000 w
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  132.8209 369.1168 m
  132.8206 369.2730  132.6511 369.3702  132.5155 369.2921 C
  132.3800 369.2137  132.3803 369.0184  132.5161 368.9406 C
  132.6520 368.8629  132.8212 368.9608  132.8209 369.1167 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  132.8209 369.1168 m
  132.8206 369.2730  132.6511 369.3702  132.5155 369.2921 C
  132.3800 369.2137  132.3803 369.0184  132.5161 368.9406 C
  132.6520 368.8629  132.8212 368.9608  132.8209 369.1167 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  134.2906 369.1168 m
  134.2903 369.2730  134.1208 369.3702  133.9852 369.2921 C
  133.8497 369.2137  133.8500 369.0184  133.9858 368.9406 C
  134.1217 368.8629  134.2909 368.9608  134.2906 369.1167 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  134.2906 369.1168 m
  134.2903 369.2730  134.1208 369.3702  133.9852 369.2921 C
  133.8497 369.2137  133.8500 369.0184  133.9858 368.9406 C
  134.1217 368.8629  134.2909 368.9608  134.2906 369.1167 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  135.7038 369.1168 m
  135.7034 369.2730  135.5339 369.3702  135.3983 369.2921 C
  135.2628 369.2137  135.2632 369.0184  135.3990 368.9406 C
  135.5349 368.8629  135.7040 368.9608  135.7038 369.1167 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  135.7038 369.1168 m
  135.7034 369.2730  135.5339 369.3702  135.3983 369.2921 C
  135.2628 369.2137  135.2632 369.0184  135.3990 368.9406 C
  135.5349 368.8629  135.7040 368.9608  135.7038 369.1167 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  137.2300 369.1168 m
  137.2297 369.2730  137.0601 369.3702  136.9245 369.2921 C
  136.7890 369.2137  136.7894 369.0184  136.9252 368.9406 C
  137.0611 368.8629  137.2302 368.9608  137.2300 369.1167 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  137.2300 369.1168 m
  137.2297 369.2730  137.0601 369.3702  136.9245 369.2921 C
  136.7890 369.2137  136.7894 369.0184  136.9252 368.9406 C
  137.0611 368.8629  137.2302 368.9608  137.2300 369.1167 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  132.8209 367.9333 m
  132.8206 368.0895  132.6511 368.1868  132.5155 368.1086 C
  132.3800 368.0302  132.3803 367.8350  132.5161 367.7571 C
  132.6520 367.6794  132.8212 367.7774  132.8209 367.9333 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  132.8209 367.9333 m
  132.8206 368.0895  132.6511 368.1868  132.5155 368.1086 C
  132.3800 368.0302  132.3803 367.8350  132.5161 367.7571 C
  132.6520 367.6794  132.8212 367.7774  132.8209 367.9333 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  134.2906 367.9333 m
  134.2903 368.0895  134.1208 368.1868  133.9852 368.1086 C
  133.8497 368.0302  133.8500 367.8350  133.9858 367.7571 C
  134.1217 367.6794  134.2909 367.7774  134.2906 367.9333 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  134.2906 367.9333 m
  134.2903 368.0895  134.1208 368.1868  133.9852 368.1086 C
  133.8497 368.0302  133.8500 367.8350  133.9858 367.7571 C
  134.1217 367.6794  134.2909 367.7774  134.2906 367.9333 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  135.7038 367.9333 m
  135.7034 368.0895  135.5339 368.1868  135.3983 368.1086 C
  135.2628 368.0302  135.2632 367.8350  135.3990 367.7571 C
  135.5349 367.6794  135.7040 367.7774  135.7038 367.9333 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  135.7038 367.9333 m
  135.7034 368.0895  135.5339 368.1868  135.3983 368.1086 C
  135.2628 368.0302  135.2632 367.8350  135.3990 367.7571 C
  135.5349 367.6794  135.7040 367.7774  135.7038 367.9333 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  137.2300 367.9333 m
  137.2297 368.0895  137.0601 368.1868  136.9245 368.1086 C
  136.7890 368.0302  136.7894 367.8350  136.9252 367.7571 C
  137.0611 367.6794  137.2302 367.7774  137.2300 367.9333 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  137.2300 367.9333 m
  137.2297 368.0895  137.0601 368.1868  136.9245 368.1086 C
  136.7890 368.0302  136.7894 367.8350  136.9252 367.7571 C
  137.0611 367.6794  137.2302 367.7774  137.2300 367.9333 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  132.8209 366.6935 m
  132.8206 366.8497  132.6511 366.9469  132.5155 366.8688 C
  132.3800 366.7904  132.3803 366.5951  132.5161 366.5173 C
  132.6520 366.4396  132.8212 366.5375  132.8209 366.6935 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  132.8209 366.6935 m
  132.8206 366.8497  132.6511 366.9469  132.5155 366.8688 C
  132.3800 366.7904  132.3803 366.5951  132.5161 366.5173 C
  132.6520 366.4396  132.8212 366.5375  132.8209 366.6935 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  134.2906 366.6935 m
  134.2903 366.8497  134.1208 366.9469  133.9852 366.8688 C
  133.8497 366.7904  133.8500 366.5951  133.9858 366.5173 C
  134.1217 366.4396  134.2909 366.5375  134.2906 366.6935 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  134.2906 366.6935 m
  134.2903 366.8497  134.1208 366.9469  133.9852 366.8688 C
  133.8497 366.7904  133.8500 366.5951  133.9858 366.5173 C
  134.1217 366.4396  134.2909 366.5375  134.2906 366.6935 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  135.7603 366.6935 m
  135.7600 366.8497  135.5905 366.9469  135.4548 366.8688 C
  135.3193 366.7904  135.3197 366.5951  135.4555 366.5173 C
  135.5914 366.4396  135.7606 366.5375  135.7603 366.6935 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  135.7603 366.6935 m
  135.7600 366.8497  135.5905 366.9469  135.4548 366.8688 C
  135.3193 366.7904  135.3197 366.5951  135.4555 366.5173 C
  135.5914 366.4396  135.7606 366.5375  135.7603 366.6935 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  137.2300 366.6935 m
  137.2297 366.8497  137.0601 366.9469  136.9245 366.8688 C
  136.7890 366.7904  136.7894 366.5951  136.9252 366.5173 C
  137.0611 366.4396  137.2302 366.5375  137.2300 366.6935 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  137.2300 366.6935 m
  137.2297 366.8497  137.0601 366.9469  136.9245 366.8688 C
  136.7890 366.7904  136.7894 366.5951  136.9252 366.5173 C
  137.0611 366.4396  137.2302 366.5375  137.2300 366.6935 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  138.5866 369.1168 m
  138.5863 369.2730  138.4168 369.3702  138.2811 369.2921 C
  138.1457 369.2137  138.1460 369.0184  138.2818 368.9406 C
  138.4177 368.8629  138.5869 368.9608  138.5866 369.1167 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  138.5866 369.1168 m
  138.5863 369.2730  138.4168 369.3702  138.2811 369.2921 C
  138.1457 369.2137  138.1460 369.0184  138.2818 368.9406 C
  138.4177 368.8629  138.5869 368.9608  138.5866 369.1167 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  138.5866 367.9333 m
  138.5863 368.0895  138.4168 368.1868  138.2811 368.1086 C
  138.1457 368.0302  138.1460 367.8350  138.2818 367.7571 C
  138.4177 367.6794  138.5869 367.7774  138.5866 367.9333 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  138.5866 367.9333 m
  138.5863 368.0895  138.4168 368.1868  138.2811 368.1086 C
  138.1457 368.0302  138.1460 367.8350  138.2818 367.7571 C
  138.4177 367.6794  138.5869 367.7774  138.5866 367.9333 C
s
U
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 0.502 k
u
  138.5866 366.6935 m
  138.5863 366.8497  138.4168 366.9469  138.2811 366.8688 C
  138.1457 366.7904  138.1460 366.5951  138.2818 366.5173 C
  138.4177 366.4396  138.5869 366.5375  138.5866 366.6935 C
B
U
  0.000 0.000 0.000 0.502 K
  0.000 0.000 0.000 1.000 k
u
  138.5866 366.6935 m
  138.5863 366.8497  138.4168 366.9469  138.2811 366.8688 C
  138.1457 366.7904  138.1460 366.5951  138.2818 366.5173 C
  138.4177 366.4396  138.5869 366.5375  138.5866 366.6935 C
s
U
u
0.2500 w
  0.000 0.000 0.000 0.502 K
  129.9268 365.7690 m
  129.9268 361.9932 L
S
U
u
0 XR

  0.000 0.000 0.000 0.102 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  143.6627 387.2968 m
  127.2701 387.2968 L
  127.2701 384.9298 L
  143.6627 384.9298 L
  143.6627 387.2968 L
B
U
u
  0.000 0.000 0.000 0.502 K
  143.6627 387.2968 m
  127.2701 387.2968 L
  127.2701 384.9298 L
  143.6627 384.9298 L
  143.6627 387.2968 L
S
U
u
1 XR

  0.000 0.000 0.000 0.102 k
0.2500 w
  0.000 0.000 0.000 1.000 K
  135.6925 387.2630 m
  127.3266 387.2630 L
  127.3266 384.9524 L
  135.6925 384.9524 L
  135.6925 387.2630 L
B
U
u
  0.000 0.000 0.000 0.502 K
  135.6925 387.2630 m
  127.3266 387.2630 L
  127.3266 384.9524 L
  135.6925 384.9524 L
  135.6925 387.2630 L
S
U
u
  0.000 0.000 0.000 0.153 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  135.3872 386.4740 m
  127.6431 386.4740 L
  127.6431 386.1922 L
  135.3872 386.1922 L
  135.3872 386.4740 L
B
U
u
  135.3872 386.4740 m
  127.6431 386.4740 L
  127.6431 386.1922 L
  135.3872 386.1922 L
  135.3872 386.4740 L
S
U
u
  0.000 0.000 0.000 0.051 k
  132.7531 386.2824 m
  130.2659 386.2824 L
  130.2659 385.8315 L
  132.7531 385.8315 L
  132.7531 386.2824 L
B
U
u
  132.7531 386.2824 m
  130.2659 386.2824 L
  130.2659 385.8315 L
  132.7531 385.8315 L
  132.7531 386.2824 L
S
U
u
  0.000 0.000 0.000 0.102 k
  132.7531 386.6769 m
  130.2659 386.6769 L
  130.1529 386.5641 L
  132.8662 386.5641 L
  132.7531 386.6769 L
B
U
u
  132.7531 386.6769 m
  130.2659 386.6769 L
  130.1529 386.5641 L
  132.8662 386.5641 L
  132.7531 386.6769 L
S
U
u
  0.000 0.000 0.000 0.200 k
  135.2968 386.3951 m
  132.8096 386.3951 L
  132.7531 386.2824 L
  135.3533 386.2824 L
  135.2968 386.3951 L
B
U
u
  135.2968 386.3951 m
  132.8096 386.3951 L
  132.7531 386.2824 L
  135.3533 386.2824 L
  135.2968 386.3951 L
S
U
u
  0.000 0.000 0.000 1.000 k
  130.2659 386.2260 m
  130.2659 386.2260 L
  130.2659 385.8879 L
  130.3790 386.2260 L
  130.2659 386.2260 L
B
U
u
  130.2659 386.2260 m
  130.2659 386.2260 L
  130.2659 385.8879 L
  130.3790 386.2260 L
  130.2659 386.2260 L
S
U
u
  0.000 0.000 0.000 1.000 k
  132.6966 386.2260 m
  132.6966 386.2260 L
  132.6966 385.8879 L
  132.5835 386.2260 L
  132.6966 386.2260 L
B
U
u
  132.6966 386.2260 m
  132.6966 386.2260 L
  132.6966 385.8879 L
  132.5835 386.2260 L
  132.6966 386.2260 L
S
U
u
  0.486 0.000 1.000 0.000 k
  129.8477 385.6850 m
  129.3389 385.6850 L
  129.3389 385.5159 L
  129.8477 385.5159 L
  129.8477 385.6850 L
B
U
u
  129.8477 385.6850 m
  129.3389 385.6850 L
  129.3389 385.5159 L
  129.8477 385.5159 L
  129.8477 385.6850 L
S
U
u
  0.000 0.000 0.000 0.200 k
  130.0964 386.3951 m
  127.6092 386.3951 L
  127.5527 386.2824 L
  130.1529 386.2824 L
  130.0964 386.3951 L
B
U
u
  130.0964 386.3951 m
  127.6092 386.3951 L
  127.5527 386.2824 L
  130.1529 386.2824 L
  130.0964 386.3951 L
S
U
u
  0.000 0.000 0.000 0.153 k
  134.0306 385.6061 m
  134.0306 385.6399 L
  134.0193 385.6625 L
  134.0080 385.6850 L
  133.9967 385.7075 L
  133.9741 385.7188 L
  133.9515 385.7301 L
  133.9289 385.7414 L
  133.8949 385.7414 L
  133.3184 385.7414 L
  133.2845 385.7414 L
  133.2618 385.7301 L
  133.2392 385.7188 L
  133.2166 385.7075 L
  133.2053 385.6850 L
  133.1940 385.6625 L
  133.1827 385.6399 L
  133.1827 385.6061 L
  133.1827 385.5948 L
  133.1827 385.5610 L
  133.1940 385.5385 L
  133.2053 385.5159 L
  133.2166 385.4934 L
  133.2392 385.4821 L
  133.2618 385.4709 L
  133.2845 385.4596 L
  133.3184 385.4596 L
  133.8949 385.4596 L
  133.9289 385.4596 L
  133.9515 385.4709 L
  133.9741 385.4821 L
  133.9967 385.4934 L
  134.0080 385.5159 L
  134.0193 385.5385 L
  134.0306 385.5610 L
  134.0306 385.5948 L
  134.0306 385.6061 L
B
U
u
  134.0306 385.6061 m
  134.0306 385.6399 L
  134.0193 385.6625 L
  134.0080 385.6850 L
  133.9967 385.7075 L
  133.9741 385.7188 L
  133.9515 385.7301 L
  133.9289 385.7414 L
  133.8949 385.7414 L
  133.3184 385.7414 L
  133.2845 385.7414 L
  133.2618 385.7301 L
  133.2392 385.7188 L
  133.2166 385.7075 L
  133.2053 385.6850 L
  133.1940 385.6625 L
  133.1827 385.6399 L
  133.1827 385.6061 L
  133.1827 385.5948 L
  133.1827 385.5610 L
  133.1940 385.5385 L
  133.2053 385.5159 L
  133.2166 385.4934 L
  133.2392 385.4821 L
  133.2618 385.4709 L
  133.2845 385.4596 L
  133.3184 385.4596 L
  133.8949 385.4596 L
  133.9289 385.4596 L
  133.9515 385.4709 L
  133.9741 385.4821 L
  133.9967 385.4934 L
  134.0080 385.5159 L
  134.0193 385.5385 L
  134.0306 385.5610 L
  134.0306 385.5948 L
  134.0306 385.6061 L
S
U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  127.2701 398.1170 m
  143.5496 398.1170 L
S
U
u
  0.000 0.000 0.000 0.102 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  140.0224 401.8365 m
  130.9217 401.8365 L
  130.9217 399.6950 L
  140.0224 399.6950 L
  140.0224 401.8365 L
B
U
u
  140.0224 401.8365 m
  130.9217 401.8365 L
  130.9217 399.6950 L
  140.0224 399.6950 L
  140.0224 401.8365 L
S
U
u
  0.000 0.000 0.000 1.000 k
  139.4232 401.7801 m
  131.6226 401.7801 L
  131.6226 400.2022 L
  139.4232 400.2022 L
  139.4232 401.7801 L
B
U
u
  139.4232 401.7801 m
  131.6226 401.7801 L
  131.6226 400.2022 L
  139.4232 400.2022 L
  139.4232 401.7801 L
S
U
u
  0.000 0.000 0.000 0.051 k
  131.6226 401.8365 m
  131.6226 400.3712 L
  131.9617 400.3712 L
  131.9617 400.2585 L
  138.9710 400.2585 L
  138.9710 400.3712 L
  139.4232 400.3712 L
  139.4232 401.8365 L
  131.6226 401.8365 L
B
U
u
  131.6226 401.8365 m
  131.6226 400.3712 L
  131.9617 400.3712 L
  131.9617 400.2585 L
  138.9710 400.2585 L
  138.9710 400.3712 L
  139.4232 400.3712 L
  139.4232 401.8365 L
  131.6226 401.8365 L
S
U
u
  0.000 0.000 0.000 0.102 k
  138.8353 401.6110 m
  138.8240 401.6449 L
  138.8127 401.6674 L
  138.7901 401.6787 L
  138.7562 401.6899 L
  138.7449 401.6899 L
  138.7110 401.6787 L
  138.6884 401.6674 L
  138.6771 401.6449 L
  138.6658 401.6110 L
  138.6658 400.4727 L
  138.6771 400.4389 L
  138.6884 400.4163 L
  138.7110 400.4050 L
  138.7449 400.3938 L
  138.7562 400.3938 L
  138.7901 400.4050 L
  138.8127 400.4163 L
  138.8240 400.4389 L
  138.8353 400.4727 L
  138.8353 401.6110 L
B
U
u
  138.8353 401.6110 m
  138.8240 401.6449 L
  138.8127 401.6674 L
  138.7901 401.6787 L
  138.7562 401.6899 L
  138.7449 401.6899 L
  138.7110 401.6787 L
  138.6884 401.6674 L
  138.6771 401.6449 L
  138.6658 401.6110 L
  138.6658 400.4727 L
  138.6771 400.4389 L
  138.6884 400.4163 L
  138.7110 400.4050 L
  138.7449 400.3938 L
  138.7562 400.3938 L
  138.7901 400.4050 L
  138.8127 400.4163 L
  138.8240 400.4389 L
  138.8353 400.4727 L
  138.8353 401.6110 L
S
U
u
  0.000 0.000 0.000 0.102 k
  132.2783 401.6110 m
  132.2670 401.6449 L
  132.2557 401.6674 L
  132.2331 401.6787 L
  132.1991 401.6899 L
  132.1878 401.6899 L
  132.1539 401.6787 L
  132.1313 401.6674 L
  132.1200 401.6449 L
  132.1087 401.6110 L
  132.1087 400.4727 L
  132.1200 400.4389 L
  132.1313 400.4163 L
  132.1539 400.4050 L
  132.1878 400.3938 L
  132.1991 400.3938 L
  132.2331 400.4050 L
  132.2557 400.4163 L
  132.2670 400.4389 L
  132.2783 400.4727 L
  132.2783 401.6110 L
B
U
u
  132.2783 401.6110 m
  132.2670 401.6449 L
  132.2557 401.6674 L
  132.2331 401.6787 L
  132.1991 401.6899 L
  132.1878 401.6899 L
  132.1539 401.6787 L
  132.1313 401.6674 L
  132.1200 401.6449 L
  132.1087 401.6110 L
  132.1087 400.4727 L
  132.1200 400.4389 L
  132.1313 400.4163 L
  132.1539 400.4050 L
  132.1878 400.3938 L
  132.1991 400.3938 L
  132.2331 400.4050 L
  132.2557 400.4163 L
  132.2670 400.4389 L
  132.2783 400.4727 L
  132.2783 401.6110 L
S
U
u
0.2500 w
  0.000 0.000 0.000 0.502 K
  140.7798 365.7690 m
  140.7798 361.9932 L
S
U
u
  1.000 0.753 0.502 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  138.7223 383.0363 m
  132.7870 383.0363 L
  132.7870 382.1910 L
  138.7223 382.1910 L
  138.7223 383.0363 L
B
U
u
  1.000 0.753 0.502 0.000 K
  138.7223 383.0363 m
  132.7870 383.0363 L
  132.7870 382.1910 L
  138.7223 382.1910 L
  138.7223 383.0363 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 126.4508 347.8598 0 Tp
TP
/_Helvetica 12.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(MOA\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.5000 w
  0.000 0.502 0.502 0.498 K
1 j
  269.2487 510.0100 m
  249.1753 510.0100 L
  249.1753 454.3573 L
  247.7329 454.3573 L
  247.7329 455.7997 L
S
U
u
1.0000 w
  0.000 0.431 0.282 0.533 K
  110.8247 423.9466 m
  110.8247 369.8564 L
  118.0367 369.8564 L
  118.0367 330.3105 L
  136.7880 330.3105 L
  136.7880 315.8865 L
  162.8715 315.8865 L
S
U
u
  136.3072 362.1636 m
  136.3072 339.8063 L
  162.8715 339.8063 L
  162.8715 315.8865 L
S
U
u
  208.0668 455.7997 m
  208.0668 390.8915 L
S
U
u
0.0000 w
  0.000 0.000 0.000 1.000 K
  303.5058 360.9616 m
  303.8664 360.6010 L
S
U
u
  304.2270 360.2404 m
  304.5876 360.0000 L
S
U
u
  304.9482 359.6394 m
  305.3088 359.2788 L
S
U
u
  305.6694 358.9182 m
  306.0301 358.6778 L
S
U
u
  306.3907 358.3172 m
  306.7513 357.9566 L
S
U
u
  307.1119 357.7162 m
  307.4725 357.3556 L
S
U
u
  307.8331 356.9950 m
  308.1937 356.6344 L
S
U
u
  308.5543 356.3940 m
  308.9149 356.0334 L
S
U
u
  309.2755 355.6728 m
  309.6361 355.3122 L
S
U
u
  309.9967 355.0718 m
  310.3573 354.7112 L
S
U
u
  310.7179 354.3506 m
  311.0785 354.1102 L
S
U
u
  311.4391 353.7496 m
  311.7997 353.3890 L
S
U
u
  312.1603 353.0284 m
  312.5209 352.7880 L
S
U
u
  312.8815 352.4274 m
  313.2421 352.0668 L
S
U
u
  313.6027 351.7062 m
  313.9633 351.4658 L
S
U
u
  314.3239 351.1052 m
  314.6845 350.7446 L
S
U
u
  315.0451 350.5042 m
  315.4057 350.1436 L
S
U
u
  315.7663 349.9032 m
  316.1269 349.5426 L
S
U
u
  316.4875 349.3022 m
  316.8481 348.9416 L
S
U
u
  317.2087 348.5810 m
  317.5693 348.3406 L
S
U
u
  317.9299 347.9800 m
  318.2905 347.7396 L
S
U
u
  318.6511 347.3790 m
  319.0117 347.1386 L
S
U
u
  319.3723 346.7780 m
  319.7329 346.4174 L
S
U
u
  320.0935 346.1770 m
  320.4541 345.8164 L
S
U
u
  320.8147 345.5760 m
  321.1753 345.2154 L
S
U
u
  321.5359 344.9750 m
  321.8965 344.6144 L
S
U
u
  322.2571 344.2538 m
  322.6177 344.0134 L
S
U
u
  322.9783 343.6528 m
  323.3389 343.4124 L
S
U
u
  323.6995 343.0518 m
  324.0601 342.8114 L
S
U
u
  324.4207 342.4508 m
  324.7813 342.0902 L
S
U
u
  325.1419 341.8497 m
  325.5025 341.4891 L
S
U
u
  325.8631 341.2487 m
  326.2237 341.0083 L
S
U
u
  326.5843 340.6477 m
  326.9449 340.4073 L
S
U
u
  327.3055 340.0467 m
  327.6661 339.8063 L
S
U
u
  328.0267 339.4457 m
  328.3873 339.2053 L
S
U
u
  328.7479 338.9649 m
  329.1085 338.6043 L
S
U
u
  329.4691 338.3639 m
  329.8297 338.0033 L
S
U
u
  330.1903 337.7629 m
  330.5509 337.5225 L
S
U
u
  330.9115 337.1619 m
  331.2721 336.9215 L
S
U
u
  331.6327 336.5609 m
  331.9933 336.3205 L
S
U
u
  332.3539 335.9599 m
  332.7145 335.7195 L
S
U
u
  333.0751 335.4791 m
  333.4357 335.1185 L
S
U
u
  333.7963 334.8781 m
  334.1569 334.5175 L
S
U
u
  334.5175 334.2771 m
  334.8781 333.9165 L
S
U
u
  335.2387 333.6761 m
  335.5993 333.4357 L
S
U
u
  335.9599 333.0751 m
  336.3205 332.8347 L
S
U
u
  336.6811 332.4741 m
  337.0417 332.2337 L
S
U
u
  337.4023 331.9933 m
  337.7629 331.7529 L
S
U
u
  338.1235 331.3923 m
  338.4841 331.1519 L
S
U
u
  338.8447 330.9115 m
  339.2053 330.5509 L
S
U
u
  339.5659 330.3105 m
  339.9265 330.0701 L
S
U
u
  340.2871 329.8297 m
  340.6477 329.4691 L
S
U
u
  341.0083 329.2287 m
  341.3689 328.9883 L
S
U
u
  341.7295 328.6277 m
  342.0902 328.3873 L
S
U
u
  342.4508 328.1469 m
  342.8114 327.9065 L
S
U
u
  343.1720 327.5459 m
  343.5326 327.3055 L
S
U
u
  343.8932 327.0651 m
  344.2538 326.7045 L
S
U
u
  344.6144 326.4641 m
  344.9750 326.2237 L
S
U
u
  345.3356 325.9833 m
  345.6962 325.6227 L
S
U
u
  346.0568 325.3823 m
  346.4174 325.1419 L
S
U
u
  346.7780 324.9015 m
  347.1386 324.5409 L
S
U
u
  347.4992 324.3005 m
  347.8598 324.0601 L
S
U
u
  348.2204 323.6995 m
  348.7012 323.4591 L
S
U
u
  349.0618 323.0985 m
  349.5426 322.8581 L
S
U
u
  349.9032 322.4975 m
  350.3840 322.2571 L
S
U
u
  350.7446 321.8965 m
  351.2254 321.6561 L
S
U
u
  351.5860 321.2955 m
  352.0668 321.0551 L
S
U
u
  352.4274 320.6945 m
  352.9082 320.4541 L
S
U
u
  353.2688 320.0935 m
  353.7496 319.8531 L
S
U
u
  354.1102 319.4925 m
  354.5910 319.2521 L
S
U
u
  354.9516 318.8915 m
  355.4324 318.6511 L
S
U
u
  355.7930 318.2905 m
  356.2738 318.0501 L
S
U
u
  356.6344 317.6895 m
  357.1152 317.4491 L
S
U
u
  357.4758 317.0885 m
  357.9566 316.8481 L
S
U
u
  358.3172 316.4875 m
  358.6778 316.2471 L
S
U
u
  359.0384 315.8865 m
  359.5192 315.6461 L
S
U
u
  359.8798 315.4057 m
  360.2404 315.1653 L
S
U
u
  360.6010 314.9249 m
  360.9616 314.6845 L
S
U
u
  361.3222 314.4441 m
  361.6828 314.2037 L
S
U
u
  362.0434 313.9633 m
  362.4040 313.6027 L
S
U
u
  362.8848 313.3623 m
  363.2454 313.1219 L
S
U
u
  363.6060 312.8815 m
  363.9666 312.6411 L
S
U
u
  364.3272 312.4007 m
  364.6878 312.1603 L
S
U
u
  365.0484 311.9199 m
  365.4090 311.6795 L
S
U
u
  365.7696 311.4391 m
  366.1302 311.1987 L
S
U
u
  366.4908 310.9583 m
  366.8514 310.7179 L
S
U
u
  367.2120 310.4775 m
  367.5726 310.2371 L
S
U
u
  367.9332 309.9967 m
  368.2938 309.7563 L
S
U
u
  368.6544 309.5159 m
  369.0150 309.2755 L
S
U
u
  369.3756 309.0351 m
  369.7362 308.7947 L
S
U
u
  370.0968 308.5543 m
  370.4574 308.3139 L
S
U
u
  370.8180 308.0735 m
  371.1786 307.8331 L
S
U
u
  371.5392 307.5927 m
  371.6594 307.4725 L
S
U
u
  371.6594 307.4725 m
  371.8998 307.3523 L
S
U
u
  372.2604 307.1119 m
  372.6210 306.8715 L
S
U
u
  372.9816 306.6311 m
  373.3422 306.3907 L
S
U
u
  373.7028 306.1503 m
  374.0634 305.9098 L
S
U
u
  374.5442 305.6694 m
  374.9048 305.4290 L
S
U
u
  375.2654 305.1886 m
  375.6260 304.9482 L
S
U
u
  375.9866 304.7078 m
  376.3472 304.4674 L
S
U
u
  376.8280 304.2270 m
  377.1886 303.9866 L
S
U
u
  377.5492 303.7462 m
  377.9098 303.5058 L
S
U
u
  378.2705 303.2654 m
  378.6311 303.0250 L
S
U
u
  378.9917 302.7846 m
  379.4725 302.5442 L
S
U
u
  379.8331 302.3038 m
  380.1937 302.0634 L
S
U
u
  380.5543 301.8230 m
  380.9149 301.5826 L
S
U
u
  381.2755 301.3422 m
  381.7563 301.1018 L
S
U
u
  382.1169 300.8614 m
  382.4775 300.6210 L
S
U
u
  382.8381 300.3806 m
  383.1987 300.1402 L
S
U
u
  383.5593 299.8998 m
  383.7997 299.7796 L
S
U
u
  383.7997 299.7796 m
  384.0401 299.6594 L
S
U
u
  384.4007 299.4190 m
  384.7613 299.1786 L
S
U
u
  385.2421 298.9382 m
  385.6027 298.6978 L
S
U
u
  386.0835 298.4574 m
  386.4441 298.2170 L
S
U
u
  386.8047 297.9766 m
  387.2855 297.7362 L
S
U
u
  387.6461 297.4958 m
  388.1269 297.2554 L
S
U
u
  388.4875 297.0150 m
  388.9683 296.8948 L
S
U
u
  389.3289 296.6544 m
  389.6895 296.4140 L
S
U
u
  390.1703 296.1736 m
  390.5309 295.9332 L
S
U
u
  391.0117 295.6928 m
  391.3723 295.4524 L
S
U
u
  391.7329 295.2120 m
  392.2137 294.9716 L
S
U
u
  392.5743 294.7312 m
  393.0551 294.4908 L
S
U
u
  393.4157 294.2504 m
  393.7763 294.0100 L
S
U
u
  394.2571 293.7696 m
  394.6177 293.5292 L
S
U
u
  395.0985 293.2888 m
  395.4591 293.0484 L
S
U
u
  395.8197 292.8080 m
  396.3005 292.5676 L
S
U
u
  395.8197 292.8080 m
  396.3005 292.5676 L
S
U
u
  396.7813 292.3272 m
  397.1419 292.0868 L
S
U
u
  397.6227 291.8464 m
  397.9833 291.6060 L
S
U
u
  398.4641 291.3656 m
  398.9449 291.1252 L
S
U
u
  399.3055 290.8848 m
  399.7863 290.6444 L
S
U
u
  400.1469 290.4040 m
  400.6277 290.1636 L
S
U
u
  401.1085 289.9232 m
  401.4691 289.6828 L
S
U
u
  401.9499 289.4424 m
  402.4307 289.2020 L
S
U
u
  402.7913 288.9616 m
  403.2721 288.7212 L
S
U
u
  403.6327 288.4808 m
  404.1135 288.2404 L
S
U
u
  404.5943 288.0000 m
  404.9549 287.7596 L
S
U
u
  405.4357 287.5192 m
  405.9165 287.2788 L
S
U
u
  406.2771 287.0384 m
  406.7579 286.7980 L
S
U
u
  407.1185 286.5576 m
  407.5993 286.3172 L
S
U
u
  408.0801 286.0768 m
  408.4407 285.8364 L
S
U
u
  408.9215 285.5960 m
  409.4023 285.3556 L
S
U
u
  409.8831 285.1152 m
  410.3639 284.8748 L
S
U
u
  410.7245 284.6344 m
  411.2053 284.3940 L
S
U
u
  411.6861 284.1536 m
  412.1669 283.9132 L
S
U
u
  412.6477 283.6728 m
  413.1285 283.4324 L
S
U
u
  413.6093 283.1920 m
  414.0902 282.9516 L
S
U
u
  414.5710 282.7112 m
  414.9316 282.4708 L
S
U
u
  415.4124 282.2304 m
  415.8932 281.9900 L
S
U
u
  416.3740 281.7496 m
  416.8548 281.5092 L
S
U
u
  417.3356 281.2688 m
  417.8164 281.0284 L
S
U
u
  418.2972 280.7880 m
  418.7780 280.5476 L
S
U
u
  419.1386 280.3072 m
  419.6194 280.0668 L
S
U
u
  420.1002 279.8264 m
  420.5810 279.5860 L
S
U
u
  421.0618 279.3456 m
  421.5426 279.1052 L
S
U
u
  422.0234 278.8648 m
  422.5042 278.6244 L
S
U
u
  422.9850 278.3840 m
  423.4658 278.1436 L
S
U
u
  423.8264 278.0234 m
  424.1870 277.7830 L
S
U
u
  424.6678 277.5426 m
  425.1486 277.3022 L
S
U
u
  425.6294 277.0618 m
  426.1102 276.8214 L
S
U
u
  426.5910 276.7012 m
  426.9516 276.4608 L
S
U
u
  427.4324 276.2204 m
  427.9132 275.9800 L
S
U
u
  428.3940 275.7396 m
  428.8748 275.6194 L
S
U
u
  429.2354 275.3790 m
  429.7162 275.1386 L
S
U
u
  430.1970 274.8982 m
  430.6778 274.6578 L
S
U
u
  431.1586 274.4174 m
  431.6394 274.2972 L
S
U
u
  432.0000 274.0568 m
  432.4808 273.8164 L
S
U
u
  432.9616 273.5760 m
  433.4424 273.3356 L
S
U
u
  433.9232 273.0952 m
  434.4040 272.9750 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  302.0634 358.4374 m
  297.9766 366.0100 L
  305.9098 362.2838 L
  302.0634 358.4374 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  358.6778 272.1336 m
  453.1553 272.1336 L
  453.1553 302.6644 L
  358.6778 302.6644 L
  358.6778 272.1336 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 359.7596 294.3706 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Monitoring outgoing traffic\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 379.7129 284.7546 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(using tcpdump\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 374.9048 275.1386 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(and /proc/net/dev\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  123.5659 376.7078 m
  123.4457 376.2270 L
S
U
u
  123.2053 375.7462 m
  123.0851 375.2654 L
S
U
u
  122.9649 374.7846 m
  122.7245 374.3038 L
S
U
u
  122.6043 373.8230 m
  122.4841 373.3422 L
S
U
u
  122.2437 372.8614 m
  122.1235 372.3806 L
S
U
u
  122.0033 371.8998 m
  121.7629 371.4190 L
S
U
u
  121.6427 370.9382 m
  121.5225 370.4574 L
S
U
u
  121.2821 369.9766 m
  121.1619 369.4958 L
S
U
u
  120.9215 369.0150 m
  120.8013 368.5342 L
S
U
u
  120.6811 368.0534 m
  120.4407 367.5726 L
S
U
u
  120.3205 367.0918 m
  120.0801 366.6110 L
S
U
u
  119.8397 366.1302 m
  119.7195 365.6494 L
S
U
u
  119.4791 365.1686 m
  119.3589 364.6878 L
S
U
u
  119.1185 364.2070 m
  118.8781 363.7262 L
S
U
u
  118.7579 363.2454 m
  118.5175 362.7646 L
S
U
u
  118.3973 362.2838 m
  118.1569 361.9232 L
S
U
u
  117.9165 361.4424 m
  117.7963 360.9616 L
S
U
u
  117.5559 360.4808 m
  117.4357 360.0000 L
S
U
u
  117.1953 359.6394 m
  116.9549 359.1586 L
S
U
u
  116.8347 358.6778 m
  116.5943 358.3172 L
S
U
u
  116.3539 357.8364 m
  116.2337 357.3556 L
S
U
u
  115.9933 356.9950 m
  115.7529 356.5142 L
S
U
u
  115.6327 356.0334 m
  115.3923 355.6728 L
S
U
u
  115.1519 355.1920 m
  115.0317 354.7112 L
S
U
u
  114.7913 354.3506 m
  114.5509 353.8698 L
S
U
u
  114.4307 353.3890 m
  114.1903 353.0284 L
S
U
u
  113.9499 352.5476 m
  113.7095 352.0668 L
S
U
u
  113.5893 351.5860 m
  113.3489 351.2254 L
S
U
u
  113.1085 350.7446 m
  112.8681 350.3840 L
S
U
u
  112.6277 349.9032 m
  112.3873 349.4224 L
S
U
u
  112.1469 348.9416 m
  111.9065 348.4608 L
S
U
u
  111.6661 347.9800 m
  111.4257 347.6194 L
S
U
u
  111.1853 347.1386 m
  110.9449 346.6578 L
S
U
u
  110.7045 346.1770 m
  110.4641 345.6962 L
S
U
u
  110.2237 345.3356 m
  109.9833 344.8548 L
S
U
u
  109.7429 344.3740 m
  109.5025 343.8932 L
S
U
u
  109.2621 343.4124 m
  109.0217 343.0518 L
S
U
u
  108.7813 342.6912 m
  108.5409 342.2104 L
S
U
u
  108.3005 341.8497 m
  108.0601 341.3689 L
S
U
u
  107.8197 341.0083 m
  107.5793 340.5275 L
S
U
u
  107.3389 340.1669 m
  107.0985 339.8063 L
S
U
u
  106.8581 339.3255 m
  106.6177 338.9649 L
S
U
u
  106.3773 338.4841 m
  106.1369 338.1235 L
S
U
u
  105.8965 337.6427 m
  105.6561 337.2821 L
S
U
u
  105.4157 336.9215 m
  105.1753 336.4407 L
S
U
u
  104.9349 336.0801 m
  104.8147 335.8397 L
S
U
u
  104.8147 335.8397 m
  104.6945 335.7195 L
S
U
u
  104.4541 335.2387 m
  104.2137 334.8781 L
S
U
u
  103.9733 334.5175 m
  103.7329 334.1569 L
S
U
u
  103.4925 333.7963 m
  103.2521 333.4357 L
S
U
u
  103.0117 333.0751 m
  102.7713 332.7145 L
S
U
u
  102.5309 332.3539 m
  102.2905 331.9933 L
S
U
u
  102.0501 331.6327 m
  101.8097 331.2721 L
S
U
u
  101.5693 330.9115 m
  101.3289 330.5509 L
S
U
u
  101.0885 330.0701 m
  100.8481 329.7095 L
S
U
u
  100.6077 329.3489 m
  100.3673 328.9883 L
S
U
u
  100.1269 328.6277 m
  99.8865 328.2671 L
S
U
u
  99.6461 327.9065 m
  99.4057 327.5459 L
S
U
u
  99.0451 327.1853 m
  98.8047 326.8247 L
S
U
u
  98.5643 326.4641 m
  98.3239 326.1035 L
S
U
u
  98.0835 325.7429 m
  97.8431 325.3823 L
S
U
u
  97.6027 325.0217 m
  97.3623 324.6611 L
S
U
u
  97.1219 324.3005 m
  96.8815 323.9399 L
S
U
u
  96.6411 323.5793 m
  96.4007 323.2187 L
S
U
u
  96.0401 322.8581 m
  95.7997 322.4975 L
S
U
u
  95.5593 322.1369 m
  95.3189 321.7763 L
S
U
u
  95.0785 321.4157 m
  94.8381 321.0551 L
S
U
u
  94.4775 320.6945 m
  94.2371 320.3339 L
S
U
u
  93.8765 319.9733 m
  93.6361 319.6127 L
S
U
u
  93.3957 319.2521 m
  93.0351 318.8915 L
S
U
u
  92.7947 318.5309 m
  92.4341 318.1703 L
S
U
u
  92.1937 317.8097 m
  91.8331 317.4491 L
S
U
u
  91.5927 317.0885 m
  91.2321 316.7279 L
S
U
u
  90.9917 316.3673 m
  90.7513 316.0067 L
S
U
u
  90.3907 315.6461 m
  90.1503 315.2855 L
S
U
u
  89.7896 314.9249 m
  89.5492 314.5643 L
S
U
u
  89.1886 314.2037 m
  88.9482 313.8431 L
S
U
u
  88.5876 313.4825 m
  88.3472 313.1219 L
S
U
u
  87.9866 312.7613 m
  87.6260 312.4007 L
S
U
u
  87.2654 312.0401 m
  87.0250 311.6795 L
S
U
u
  86.6644 311.3189 m
  86.3038 310.9583 L
S
U
u
  86.0634 310.5977 m
  85.7028 310.2371 L
S
U
u
  85.3422 309.8765 m
  85.1018 309.5159 L
S
U
u
  84.7412 309.1553 m
  84.3806 308.7947 L
S
U
u
  84.1402 308.4341 m
  83.7796 308.0735 L
S
U
u
  83.4190 307.7129 m
  83.1786 307.3523 L
S
U
u
  82.8180 306.9917 m
  82.4574 306.6311 L
S
U
u
  82.0968 306.2705 m
  81.7362 305.9098 L
S
U
u
  81.3756 305.5492 m
  81.0150 305.1886 L
S
U
u
  80.6544 304.8280 m
  80.2938 304.4674 L
S
U
u
  79.9332 304.1068 m
  79.5726 303.7462 L
S
U
u
  79.2120 303.3856 m
  78.8514 303.0250 L
S
U
u
  78.6110 302.6644 m
  78.2504 302.3038 L
S
U
u
  77.8898 301.9432 m
  77.5292 301.5826 L
S
U
u
  77.1686 301.2220 m
  76.8080 300.8614 L
S
U
u
  76.4474 300.5008 m
  76.0868 300.1402 L
S
U
u
  75.7262 299.7796 m
  75.3656 299.5392 L
S
U
u
  75.0050 299.1786 m
  74.6444 298.8180 L
S
U
u
  74.2838 298.4574 m
  73.9232 298.0968 L
S
U
u
  73.5626 297.8564 m
  73.2020 297.4958 L
S
U
u
  72.8414 297.1352 m
  72.4808 296.8948 L
S
U
u
  72.1202 296.6544 m
  71.7596 296.2938 L
S
U
u
  71.3990 295.9332 m
  71.0384 295.5726 L
S
U
u
  70.6778 295.2120 m
  70.3172 294.9716 L
S
U
u
  69.9566 294.6110 m
  69.5960 294.2504 L
S
U
u
  69.2354 294.0100 m
  68.8748 293.6494 L
S
U
u
  68.5142 293.4090 m
  68.1536 293.0484 L
S
U
u
  67.7930 292.8080 m
  67.4324 292.5676 L
S
U
u
  67.0718 292.2070 m
  66.7112 291.9666 L
S
U
u
  66.3506 291.6060 m
  65.9900 291.3656 L
S
U
u
  65.6294 291.0050 m
  65.2688 290.7646 L
S
U
u
  64.9082 290.4040 m
  64.5476 290.1636 L
S
U
u
  64.1870 289.8030 m
  63.8264 289.5626 L
S
U
u
  63.4658 289.2020 m
  63.1052 288.9616 L
S
U
u
  62.7446 288.6010 m
  62.3840 288.3606 L
S
U
u
  62.0234 288.1202 m
  61.6628 287.8798 L
S
U
u
  61.3022 287.5192 m
  60.9416 287.2788 L
S
U
u
  60.5810 287.0384 m
  60.2204 286.7980 L
S
U
u
  59.8598 286.4374 m
  59.4992 286.1970 L
S
U
u
  59.1386 285.9566 m
  58.7780 285.7162 L
S
U
u
  58.4174 285.3556 m
  58.0568 285.1152 L
S
U
u
  57.6962 284.8748 m
  57.3356 284.6344 L
S
U
u
  56.9750 284.2738 m
  56.6144 284.0334 L
S
U
u
  56.2538 283.7930 m
  55.8932 283.5526 L
S
U
u
  55.5326 283.3122 m
  55.1720 283.0718 L
S
U
u
  54.8114 282.8314 m
  54.4508 282.5910 L
S
U
u
  54.0902 282.3506 m
  53.7295 282.1102 L
S
U
u
  53.3689 281.8698 m
  53.0083 281.6294 L
S
U
u
  52.6477 281.3890 m
  52.2871 281.1486 L
S
U
u
  51.9265 280.9082 m
  51.5659 280.6678 L
S
U
u
  51.2053 280.4274 m
  50.8447 280.1870 L
S
U
u
  50.4841 279.9466 m
  50.1235 279.7062 L
S
U
u
  49.7629 279.4658 m
  49.4023 279.2254 L
S
U
u
  49.0417 278.9850 m
  48.6811 278.7446 L
S
U
u
  48.3205 278.5042 m
  48.2003 278.3840 L
S
U
u
  48.2003 278.3840 m
  47.9599 278.2638 L
S
U
u
  47.5993 278.0234 m
  47.2387 277.7830 L
S
U
u
  46.8781 277.5426 m
  46.3973 277.3022 L
S
U
u
  46.0367 277.0618 m
  45.6761 276.8214 L
S
U
u
  45.1953 276.5810 m
  44.8347 276.3406 L
S
U
u
  44.4741 276.1002 m
  44.1135 275.8598 L
S
U
u
  43.6327 275.6194 m
  43.2721 275.3790 L
S
U
u
  42.9115 275.1386 m
  42.5509 274.8982 L
S
U
u
  42.0701 274.6578 m
  41.7095 274.4174 L
S
U
u
  41.3489 274.1770 m
  40.8681 273.9366 L
S
U
u
  40.5075 273.6962 m
  40.0267 273.4558 L
S
U
u
  39.6661 273.2154 m
  39.1853 272.9750 L
S
U
u
  38.7045 272.7346 m
  38.3439 272.4942 L
S
U
u
  37.8631 272.2538 m
  37.3823 272.0134 L
S
U
u
  36.9015 271.7730 m
  36.5409 271.5326 L
S
U
u
  36.0601 271.2922 m
  35.5793 271.0518 L
S
U
u
  35.0985 270.8114 m
  34.7379 270.5710 L
S
U
u
  34.2571 270.3306 m
  33.7763 270.0902 L
S
U
u
  33.4157 269.8497 m
  32.9349 269.6093 L
S
U
u
  32.5743 269.3689 m
  32.0935 269.1285 L
S
U
u
  31.6127 268.8881 m
  31.1319 268.6477 L
S
U
u
  30.6511 268.5275 m
  30.2905 268.2871 L
S
U
u
  29.8097 268.0467 m
  29.3289 267.8063 L
S
U
u
  28.8481 267.6861 m
  28.4875 267.4457 L
S
U
u
  28.0067 267.2053 m
  27.5259 266.9649 L
S
U
u
  27.0451 266.7245 m
  26.5643 266.6043 L
S
U
u
  26.2037 266.3639 m
  25.7229 266.1235 L
S
U
u
  25.2421 265.8831 m
  24.7613 265.7629 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  126.0902 375.2654 m
  125.7295 384.0401 L
  120.8013 376.8280 L
  126.0902 375.2654 L
F
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  2.8848 262.5175 m
  74.6444 262.5175 L
  74.6444 283.5526 L
  2.8848 283.5526 L
  2.8848 262.5175 L
F
U
0 To
1.0000 0.0000 0.0000 1.0000 3.9666 275.1386 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Monitoring all traffic\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 4.8080 265.5225 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(using /proc/net/dev\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial eop
%%Page: 5 5
5 4 bop -242 196 a Fk(In)-8 b(ter)94 b(arriv)-15 b(al)92
b(time)j(histograms)-104 647 y Fi(\017)86 b Fh(tcpdump)60
b Fj(pro)-5 b(vides)58 b(detailed)f(data)g(on)g(eac)-5
b(h)57 b(pac)-5 b(k)g(et)56 b(seen)g(b)-5 b(y)58 b(the)e(data)-104
987 y Fi(\017)86 b Fj(This)58 b(is)g(essen)-5 b(tially)59
b(information)g(ab)5 b(out)57 b(a)g(p)5 b(oin)-5 b(t)58
b(pro)5 b(cess.)-104 1327 y Fi(\017)86 b Fj(What)57 b(is)h(the)f
(distribution)h(of)g(in)-5 b(ter)58 b(arriv)-10 b(al)60
b(times?)-104 1668 y Fi(\017)86 b Fj(If)57 b(ev)-5 b(en)g(ts)56
b(happ)5 b(en)56 b(at)h(times)h Fg(t)2102 1693 y Ff(i)2160
1668 y Fj(,)f Fg(i)48 b Fi(2)g Fg(I)61 b Fi(\022)48 b
Fg(I)-38 b(N)18 b Fj(.)77 b(The)57 b(ev)-5 b(en)g(t)56
b(that)h(o)5 b(ccurs)56 b(at)i(time)g Fg(t)5551 1693
y Ff(i)5666 1668 y Fj(is)68 1911 y(called)g Fg(E)683
1937 y Ff(t)735 1955 y Fe(i)798 1911 y Fj(.)-104 2252
y Fi(\017)86 b Fj(There)57 b(are)g Fg(n)48 b Fi(2)g Fg(I)-38
b(N)76 b Fj(ev)-5 b(en)g(ts)56 b(,)i(the)e(\014rst)i(happ)5
b(ening)56 b(at)h Fg(t)3808 2277 y Fd(1)3943 2252 y Fj(and)g(the)f
(last)i(one)f(at)g Fg(t)5488 2277 y Ff(n)5582 2252 y
Fj(.)77 b(The)68 2495 y(observ)-10 b(ation)58 b(p)5 b(erio)g(d)57
b(ma)-5 b(y)58 b(b)5 b(egin)57 b(b)5 b(efore)56 b(the)h(\014rst)g(ev)-5
b(en)g(t)56 b(and)h(end)f(after)h(the)g(last,)h(so)68
2739 y(w)-5 b(e)57 b(de\014ne)f(it)i(to)f(b)5 b(e)57
b Fg(T)71 b Fj(=)48 b([)p Fg(t)1900 2765 y Fd(0)1977
2739 y Fg(;)29 b(t)2116 2765 y Ff(n)p Fd(+1)2384 2739
y Fj(])48 b Fi(\032)f Fg(I)-38 b(R)58 b Fj(with)h Fg(t)3343
2765 y Fd(0)3468 2739 y Fi(\024)48 b Fg(t)3712 2765 y
Fd(1)3837 2739 y Fi(\024)g Fg(:)29 b(:)g(:)46 b Fi(\024)i
Fg(t)4511 2765 y Ff(n)4653 2739 y Fi(\024)f Fg(t)4896
2765 y Ff(n)p Fd(+1)5165 2739 y Fj(,)57 b(for)68 2983
y(arbitrary)i Fg(t)863 3009 y Fd(0)940 2983 y Fg(;)29
b(t)1079 3009 y Ff(n)p Fd(+1)1405 2983 y Fj(b)5 b(ounding)56
b(the)h(set)f(of)i(ev)-5 b(en)g(t-instan)g(ts.)-104 3323
y Fi(\017)86 b Fj(The)57 b(in)-5 b(ter-ev)g(en)g(t)57
b(times,)h(\001)p Fg(t)1996 3349 y Ff(i)2054 3323 y Fj(,)f(1)48
b Fi(\024)g Fg(i)g Fi(\024)g Fg(n)39 b Fi(\000)f Fj(1,)57
b(are)h(de\014ned)d(as)2505 3697 y(\001)p Fg(t)2710 3723
y Ff(i)2815 3697 y Fj(=)48 b Fg(t)3059 3723 y Ff(i)p
Fd(+1)3329 3697 y Fi(\000)38 b Fg(t)3563 3723 y Ff(i)p
eop
%%Page: 6 6
6 5 bop -32 241 a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 -32 241 a @beginspecial 50 @llx 50
@lly 554 @urx 770 @ury 3401 @rhi @setspecial
%%BeginDocument: plots/iat-pdf.ps
%!PS-Adobe-2.0
%%Title: iat-pdf.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Mar 14 16:38:44 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
882 420 M
6080 0 V
1.000 UL
LTb
882 420 M
63 0 V
6017 0 R
-63 0 V
798 420 M
(1e-12) Rshow
882 825 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 1229 M
6080 0 V
1.000 UL
LTb
882 1229 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-10) Rshow
882 1634 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 2039 M
6080 0 V
1.000 UL
LTb
882 2039 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-08) Rshow
882 2444 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 2848 M
6080 0 V
1.000 UL
LTb
882 2848 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-06) Rshow
882 3253 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 3658 M
6080 0 V
1.000 UL
LTb
882 3658 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.0001) Rshow
882 4063 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 4467 M
6080 0 V
1.000 UL
LTb
882 4467 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.01) Rshow
882 4872 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
882 420 M
0 63 V
0 4389 R
0 -63 V
882 280 M
(1) Cshow
1187 420 M
0 31 V
0 4421 R
0 -31 V
1590 420 M
0 31 V
0 4421 R
0 -31 V
1797 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
1895 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
1895 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(10) Cshow
2200 420 M
0 31 V
0 4421 R
0 -31 V
2604 420 M
0 31 V
0 4421 R
0 -31 V
2810 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
2909 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
2909 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(100) Cshow
3214 420 M
0 31 V
0 4421 R
0 -31 V
3617 420 M
0 31 V
0 4421 R
0 -31 V
3824 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
3922 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
3922 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1000) Cshow
4227 420 M
0 31 V
0 4421 R
0 -31 V
4630 420 M
0 31 V
0 4421 R
0 -31 V
4837 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
4935 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
4935 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(10000) Cshow
5240 420 M
0 31 V
0 4421 R
0 -31 V
5644 420 M
0 31 V
0 4421 R
0 -31 V
5850 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
5949 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
5949 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(100000) Cshow
6254 420 M
0 31 V
0 4421 R
0 -31 V
6657 420 M
0 31 V
0 4421 R
0 -31 V
6864 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1e+06) Cshow
1.000 UL
LTb
882 420 M
6080 0 V
0 4452 V
-6080 0 V
882 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Probality density) Cshow
grestore
3922 70 M
(Inter arrival time in microseconds) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
(pdf of outgoing Ethernet packets) Rshow
6395 4739 M
399 0 V
980 3184 M
197 673 V
98 182 V
98 331 V
98 -323 V
98 441 V
99 -133 V
98 -81 V
98 -148 V
98 -48 V
98 144 V
99 54 V
98 -112 V
98 -21 V
98 -28 V
98 -2 V
99 7 V
98 -38 V
98 -14 V
98 36 V
98 133 V
99 -154 V
98 -26 V
98 -20 V
98 -32 V
98 -22 V
99 -25 V
98 -20 V
98 -31 V
98 -24 V
98 -45 V
99 -70 V
98 -76 V
98 -86 V
98 -87 V
98 -129 V
99 -186 V
98 -101 V
98 -190 V
98 -188 V
98 -183 V
99 -214 V
98 -256 V
98 -275 V
98 -276 V
99 -361 V
98 59 V
98 -188 V
98 -39 V
98 11 V
99 -283 V
98 -39 V
98 -39 V
6480 524 L
196 -78 V
980 3184 Pls
1177 3857 Pls
1275 4039 Pls
1373 4370 Pls
1471 4047 Pls
1569 4488 Pls
1668 4355 Pls
1766 4274 Pls
1864 4126 Pls
1962 4078 Pls
2060 4222 Pls
2159 4276 Pls
2257 4164 Pls
2355 4143 Pls
2453 4115 Pls
2551 4113 Pls
2650 4120 Pls
2748 4082 Pls
2846 4068 Pls
2944 4104 Pls
3042 4237 Pls
3141 4083 Pls
3239 4057 Pls
3337 4037 Pls
3435 4005 Pls
3533 3983 Pls
3632 3958 Pls
3730 3938 Pls
3828 3907 Pls
3926 3883 Pls
4024 3838 Pls
4123 3768 Pls
4221 3692 Pls
4319 3606 Pls
4417 3519 Pls
4515 3390 Pls
4614 3204 Pls
4712 3103 Pls
4810 2913 Pls
4908 2725 Pls
5006 2542 Pls
5105 2328 Pls
5203 2072 Pls
5301 1797 Pls
5399 1521 Pls
5498 1160 Pls
5596 1219 Pls
5694 1031 Pls
5792 992 Pls
5890 1003 Pls
5989 720 Pls
6087 681 Pls
6185 642 Pls
6480 524 Pls
6676 446 Pls
6594 4739 Pls
1.000 UL
LT1
6311 4599 M
(pdf of exp. distribution with mean arrival rate 1/\(802 microseconds\)) Rshow
6395 4599 M
399 0 V
980 4101 M
58 0 V
57 0 V
58 0 V
57 0 V
58 0 V
57 0 V
58 0 V
57 0 V
58 -1 V
58 0 V
57 0 V
58 0 V
57 0 V
58 0 V
57 -1 V
58 0 V
57 0 V
58 -1 V
57 0 V
58 0 V
57 -1 V
58 -1 V
57 0 V
58 -1 V
58 -1 V
57 -1 V
58 -1 V
57 -1 V
58 -2 V
57 -2 V
58 -1 V
57 -3 V
58 -2 V
57 -3 V
58 -3 V
57 -4 V
58 -4 V
57 -5 V
58 -6 V
58 -6 V
57 -7 V
58 -8 V
57 -9 V
58 -11 V
57 -12 V
58 -14 V
57 -15 V
58 -18 V
57 -21 V
58 -23 V
57 -26 V
58 -30 V
57 -34 V
58 -40 V
57 -44 V
58 -51 V
58 -58 V
57 -66 V
58 -75 V
57 -85 V
58 -98 V
57 -111 V
58 -127 V
57 -144 V
58 -165 V
57 -187 V
58 -214 V
57 -244 V
58 -277 V
57 -317 V
58 -360 V
58 -411 V
40 -328 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 4084 241 a
 currentpoint grestore moveto
 4084 241 a eop
%%Page: 7 7
7 6 bop -32 241 a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 -32 241 a @beginspecial 50 @llx 50
@lly 554 @urx 770 @ury 3401 @rhi @setspecial
%%BeginDocument: york-iat.ps
%!PS-Adobe-2.0
%%Title: york-ita.ps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Thu Jul 17 16:00:46 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
630 420 M
6332 0 V
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
546 420 M
(-14) Rshow
1.000 UL
LTa
630 1056 M
6332 0 V
1.000 UL
LTb
630 1056 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-12) Rshow
1.000 UL
LTa
630 1692 M
6332 0 V
1.000 UL
LTb
630 1692 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-10) Rshow
1.000 UL
LTa
630 2328 M
6332 0 V
1.000 UL
LTb
630 2328 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-8) Rshow
1.000 UL
LTa
630 2964 M
6332 0 V
1.000 UL
LTb
630 2964 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-6) Rshow
1.000 UL
LTa
630 3600 M
6332 0 V
1.000 UL
LTb
630 3600 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-4) Rshow
1.000 UL
LTa
630 4236 M
6332 0 V
1.000 UL
LTb
630 4236 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-2) Rshow
1.000 UL
LTa
630 4872 M
6332 0 V
1.000 UL
LTb
630 4872 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 0) Rshow
1.000 UL
LTa
630 420 M
0 4452 V
1.000 UL
LTb
630 420 M
0 63 V
0 4389 R
0 -63 V
630 280 M
( 0) Cshow
1.000 UL
LTa
1535 420 M
0 4452 V
1.000 UL
LTb
1535 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1) Cshow
1.000 UL
LTa
2439 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
2439 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 2) Cshow
1.000 UL
LTa
3344 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
3344 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 3) Cshow
1.000 UL
LTa
4248 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
4248 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 4) Cshow
1.000 UL
LTa
5153 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
5153 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 5) Cshow
1.000 UL
LTa
6057 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
6057 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 6) Cshow
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 7) Cshow
1.000 UL
LTb
630 420 M
6332 0 V
0 4452 V
-6332 0 V
630 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(log10\(Probability density\)) Cshow
grestore
3796 70 M
(log10\(Time in microsec\)) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
(York - Inter arrival times, log. binsize 1.25 microsec) Rshow
6395 4739 M
399 0 V
718 4066 M
175 175 V
88 142 V
87 75 V
88 -254 V
88 213 V
87 -53 V
88 -47 V
88 -183 V
87 -96 V
88 -129 V
88 -8 V
87 107 V
88 23 V
88 15 V
87 14 V
88 41 V
88 -84 V
87 -47 V
88 -7 V
88 123 V
87 -6 V
88 -116 V
88 -38 V
87 -15 V
88 -54 V
88 -44 V
87 -61 V
88 -51 V
88 -56 V
87 -62 V
88 -77 V
88 -87 V
87 -109 V
88 -111 V
87 -135 V
88 -152 V
88 -184 V
87 -198 V
88 -222 V
88 -150 V
87 -99 V
88 -66 V
88 -55 V
87 -85 V
88 12 V
88 -135 V
87 -110 V
88 -112 V
88 -254 V
87 -30 V
6065 916 L
718 4066 Pls
893 4241 Pls
981 4383 Pls
1068 4458 Pls
1156 4204 Pls
1244 4417 Pls
1331 4364 Pls
1419 4317 Pls
1507 4134 Pls
1594 4038 Pls
1682 3909 Pls
1770 3901 Pls
1857 4008 Pls
1945 4031 Pls
2033 4046 Pls
2120 4060 Pls
2208 4101 Pls
2296 4017 Pls
2383 3970 Pls
2471 3963 Pls
2559 4086 Pls
2646 4080 Pls
2734 3964 Pls
2822 3926 Pls
2909 3911 Pls
2997 3857 Pls
3085 3813 Pls
3172 3752 Pls
3260 3701 Pls
3348 3645 Pls
3435 3583 Pls
3523 3506 Pls
3611 3419 Pls
3698 3310 Pls
3786 3199 Pls
3873 3064 Pls
3961 2912 Pls
4049 2728 Pls
4136 2530 Pls
4224 2308 Pls
4312 2158 Pls
4399 2059 Pls
4487 1993 Pls
4575 1938 Pls
4662 1853 Pls
4750 1865 Pls
4838 1730 Pls
4925 1620 Pls
5013 1508 Pls
5101 1254 Pls
5188 1224 Pls
6065 916 Pls
6594 4739 Pls
1.000 UP
1.000 UL
LT1
6311 4599 M
(Imperial) Rshow
6395 4599 M
399 0 V
718 4466 M
175 -97 V
88 141 V
87 -154 V
88 -254 V
88 46 V
87 -178 V
88 -213 V
88 -168 V
87 187 V
88 219 V
88 177 V
87 -7 V
88 -76 V
88 -83 V
87 -29 V
88 -71 V
88 -31 V
87 20 V
88 45 V
88 -5 V
87 -31 V
88 -8 V
88 -11 V
87 -25 V
88 -29 V
88 -28 V
87 -23 V
88 -29 V
88 -26 V
87 -13 V
88 -32 V
88 -60 V
87 -41 V
88 -44 V
87 -58 V
88 -60 V
88 -97 V
87 -85 V
88 -101 V
88 -114 V
87 -142 V
88 -159 V
88 -176 V
87 -181 V
88 -230 V
88 -208 V
87 -182 V
702 -469 V
718 4466 Crs
893 4369 Crs
981 4510 Crs
1068 4356 Crs
1156 4102 Crs
1244 4148 Crs
1331 3970 Crs
1419 3757 Crs
1507 3589 Crs
1594 3776 Crs
1682 3995 Crs
1770 4172 Crs
1857 4165 Crs
1945 4089 Crs
2033 4006 Crs
2120 3977 Crs
2208 3906 Crs
2296 3875 Crs
2383 3895 Crs
2471 3940 Crs
2559 3935 Crs
2646 3904 Crs
2734 3896 Crs
2822 3885 Crs
2909 3860 Crs
2997 3831 Crs
3085 3803 Crs
3172 3780 Crs
3260 3751 Crs
3348 3725 Crs
3435 3712 Crs
3523 3680 Crs
3611 3620 Crs
3698 3579 Crs
3786 3535 Crs
3873 3477 Crs
3961 3417 Crs
4049 3320 Crs
4136 3235 Crs
4224 3134 Crs
4312 3020 Crs
4399 2878 Crs
4487 2719 Crs
4575 2543 Crs
4662 2362 Crs
4750 2132 Crs
4838 1924 Crs
4925 1742 Crs
5627 1273 Crs
6594 4599 Crs
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 4084 241 a
 currentpoint grestore moveto
 4084 241 a eop
%%Page: 8 8
8 7 bop -242 73 a Fk(P)-8 b(o)g(w)g(er)94 b(la)-8 b(ws)-104
510 y Fi(\017)86 b Fj(Supp)5 b(ose)55 b(a)j(time)g(series)f
Fg(X)14 b Fj(\()p Fg(t)p Fj(\))57 b(exhibits)h(the)e(scaling)j(la)-5
b(w)59 b Fg(X)14 b Fj(\()p Fg(t\013)q Fj(\))46 b(=)i
Fg(g)6 b Fj(\()p Fg(\013)q Fj(\))p Fg(X)14 b Fj(\()p
Fg(t)p Fj(\))57 b(for)g(some)68 747 y(function)f Fg(g)6
b Fj(\()p Fg(\013)q Fj(\).)77 b(Then)56 b Fg(X)14 b Fj(\()p
Fg(t)p Fj(\))47 b(=)h Fg(bg)6 b Fj(\()p Fg(t)p Fj(\))58
b(and)f Fg(g)6 b Fj(\()p Fg(\013)q Fj(\))47 b(=)h Fg(\013)3655
684 y Ff(c)3725 747 y Fj(,)57 b(for)h(real)g(constan)-5
b(ts)57 b Fg(b;)29 b(c)p Fj(,)56 b(is)i(the)68 984 y(only)g
(non-trivial)-104 1296 y Fi(\017)86 b Fj(This)58 b(prop)5
b(ert)-5 b(y)57 b(is)h(related)g(to)f(what)h(is)g(kno)-5
b(wn)57 b(as)g(self-similarit)-5 b(y)-14 b(.)-104 1607
y Fi(\017)86 b Fj(a)57 b(p)5 b(df)56 b(exhibits)i(a)g(p)5
b(o)-5 b(w)g(er)57 b(la)-5 b(w)59 b(if)2642 1845 y Fg(p)p
Fj(\()p Fg(x)p Fj(\))48 b Fi(/)f Fg(\014)9 b(x)3394 1773
y Ff(\015)68 2141 y Fj(as)57 b Fg(x)48 b Fi(!)g(1)p Fj(,)58
b(for)f Fg(\014)h(>)48 b Fj(0)p Fg(;)29 b(\015)57 b(<)47
b Fi(\000)p Fj(1.)-104 2453 y Fi(\017)86 b Fj(Guten)-5
b(b)5 b(erg-Ric)-5 b(h)g(ter,)56 b(mass)i(extinction)f(ev)-5
b(en)g(ts,)57 b(sand)f(piles,)i(rice)g(piles)-242 3113
y Fk(Aggregation)-242 3580 y Fj(Observ)-10 b(ation)58
b(p)5 b(erio)g(d)57 b Fg(T)81 b Fj(divided)57 b(in)-5
b(to)58 b Fg(N)77 b Fj(con)-5 b(tiguous)57 b(in)-5 b(terv)-10
b(als)59 b(of)e(size)h Fg(T)4781 3606 y Ff(N)4959 3580
y Fj(=)47 b Fg(T)19 b(=)-10 b(N)19 b Fj(.)77 b(In)-242
3817 y(eac)-5 b(h)56 b(in)-5 b(terv)-10 b(al)60 b(coun)-5
b(t)56 b(the)h(n)-5 b(um)g(b)5 b(er)57 b(\(or)h(prop)5
b(ert)-5 b(y\))57 b(of)g(ev)-5 b(en)g(ts,)56 b(so)h(the)g(time)h
(series)g(consists)p eop
%%Page: 9 9
9 8 bop -242 133 a Fj(of)57 b Fg(N)77 b Fj(v)-10 b(alues)1317
392 y Fg(a)1408 418 y Ff(i)1513 392 y Fj(=)1695 194 y
Fc(\014)1695 297 y(\014)1695 400 y(\014)1753 392 y Fi(f)p
Fg(E)1966 418 y Ff(t)2026 392 y Fi(j)p Fg(t)2136 418
y Fd(0)2252 392 y Fj(+)38 b Fg(iT)2584 418 y Ff(N)2763
392 y Fi(\024)47 b Fg(t)h(<)g(t)3298 418 y Fd(0)3414
392 y Fj(+)38 b(\()p Fg(i)g Fj(+)h(1\))p Fg(T)4177 418
y Ff(N)4307 392 y Fi(g)4393 194 y Fc(\014)4393 297 y(\014)4393
400 y(\014)4450 392 y Fg(:)-242 735 y Fj(for)57 b Fg(i)49
b Fj(=)e(1)p Fg(;)29 b Fj(2)p Fg(;)g(:)g(:)g(:)e(;)i(N)19
b Fj(.)76 b(Sometimes)58 b(it)g(is)g(preferred)f(to)g(use)g(the)f(quan)
-5 b(tit)g(y)58 b Fg(A)4786 761 y Ff(i)4891 735 y Fj(=)48
b Fg(a)5164 761 y Ff(i)5221 735 y Fg(=T)5408 761 y Ff(N)5539
735 y Fj(.)76 b(F)-14 b(or)-242 979 y(data)57 b(gathered)f(with)j
Fh(/proc/net/dev)j Fj(this)c(is)g(not)f(the)g(necessary)-14
b(.)-242 1678 y Fk(P)-8 b(o)g(w)g(er)94 b(sp)8 b(ectrum)94
b(and)f(auto)g(correlation)i(function)-104 2129 y Fi(\017)86
b Fj(F)-14 b(or)58 b(a)f(time)h(series)g Fg(X)14 b Fj(\()p
Fg(t)p Fj(\))57 b(with)h(zero)f(mean)g(the)g(auto-correlation)i
(function)d(at)i(lag)g Fg(\034)77 b Fj(is)68 2373 y(de\014ned)55
b(as)1649 2690 y Fg(C)12 b Fj(\()p Fg(\034)19 b Fj(\))49
b(=)115 b(lim)2243 2801 y Ff(T)19 b Fb(!1)2729 2574 y
Fj(1)p 2667 2650 211 7 v 2667 2808 a(2)p Fg(T)2927 2456
y Fc(Z)3099 2498 y Ff(T)3022 2847 y Fb(\000)p Ff(T)3267
2690 y Fg(dtX)14 b Fj(\()p Fg(t)37 b Fj(+)i Fg(\034)19
b Fj(\))p Fg(X)14 b Fj(\()p Fg(t)p Fj(\))p Fg(:)-104
3130 y Fi(\017)86 b Fj(The)57 b(p)5 b(o)-5 b(w)g(er)57
b(sp)5 b(ectrum)57 b Fg(S)10 b Fj(\()p Fg(f)19 b Fj(\))56
b(is)j(the)d(F)-14 b(ourier)59 b(transform)f(of)f(the)f(A)-5
b(CF,)59 b(indicating)f(ho)-5 b(w)68 3373 y(m)g(uc)g(h)57
b(signal/noise)i(is)f(created)e(b)-5 b(y)57 b(what)h(frequency)-14
b(.)-104 3714 y Fi(\017)86 b Fj(The)57 b(p)5 b(o)-5 b(w)g(er)57
b(sp)5 b(ectrum)57 b(is)h(related)f(to)h(the)e(time)j(original)h(time)e
(series)g(b)-5 b(y)57 b(the)p eop
%%Page: 10 10
10 9 bop 68 125 a Fj(Wiener-Khinc)-5 b(hine)57 b(theorem:)1570
557 y Fg(S)10 b Fj(\()p Fg(f)19 b Fj(\))47 b(=)115 b(lim)2152
668 y Ff(T)19 b Fb(!1)2690 441 y Fj(1)p 2576 518 315
7 v 2576 675 a(4)p Fg(\031)6 b(T)2911 359 y Fc(\014)2911
463 y(\014)2911 566 y(\014)2997 323 y(Z)3169 365 y Ff(T)3093
714 y Fb(\000)p Ff(T)3338 557 y Fg(dtX)14 b Fj(\()p Fg(t)p
Fj(\))p Fg(e)3923 486 y Fb(\000)p Ff(i)p Fd(2)p Ff(\031)t(f)g(t)4373
359 y Fc(\014)4373 463 y(\014)4373 566 y(\014)4430 402
y Fd(2)4508 557 y Fg(:)-104 1052 y Fi(\017)86 b Fj(In)57
b(fact)g Fg(S)10 b Fj(\()p Fg(f)19 b Fj(\))56 b(is)i(not)g(a)f
(consisten)-5 b(t)57 b(estimator.)77 b(T)-14 b(o)58 b(mak)-5
b(e)58 b(is)g(consisten)-5 b(t)56 b(w)-5 b(e)58 b(use)e(\014lters)68
1296 y(or)i(windo)-5 b(ws.)-104 1636 y Fi(\017)86 b Fj(The)57
b(p)5 b(o)-5 b(w)g(er)57 b(sp)5 b(ectrum)57 b(exhibits)g(a)h(p)5
b(o)-5 b(w)g(er)58 b(la)-5 b(w)59 b(if)e Fg(S)10 b Fj(\()p
Fg(f)19 b Fj(\))57 b(b)5 b(eha)-5 b(v)g(es)56 b(lik)-5
b(e)59 b Fg(S)10 b Fj(\()p Fg(f)19 b Fj(\))47 b Fi(/)g
Fj(1)p Fg(=f)5662 1574 y Ff(\013)5761 1636 y Fg(;)68
1880 y Fj(where)57 b Fg(f)76 b Fj(is)58 b(the)f(frequency)-14
b(.)73 b(\(1/f)58 b(noise\))-104 2220 y Fi(\017)86 b
Fj(The)56 b(exp)5 b(onen)-5 b(t)54 b Fg(\013)j Fj(turns)e(out)h(to)g(b)
5 b(e)56 b(0)g(for)g(white)h(noise)f(and)f(2)i(for)f(a)g(Bro)-5
b(wnian)58 b(motion.)-104 2561 y Fi(\017)86 b Fj(F)-14
b(rom)58 b(the)f(relation)i(of)e(the)f(p)5 b(o)-5 b(w)g(er)58
b(sp)5 b(ectrum)56 b(to)i(the)e(auto-correlation)j(function)1945
3100 y Fg(C)12 b Fj(\()p Fg(\034)19 b Fj(\))49 b Fi(/)e(j)p
Fg(\034)19 b Fi(j)2728 3029 y Ff(\013)p Fb(\000)p Fd(1)3175
3100 y Fj(for)58 b(0)48 b Fg(<)f(\013)i(<)f Fj(1)-104
3455 y Fi(\017)86 b Fj(it)58 b(also)g(follo)-5 b(ws)60
b(that)d(an)g(exp)5 b(onen)-5 b(t)55 b Fg(\013)j Fj(close)g(to)f(but)g
(smaller)i(than)e(1)h(corresp)5 b(onds)56 b(to)68 3699
y(long)i(term)g(correlations.)p eop
%%Page: 11 11
11 10 bop -90 189 5997 7 v -90 4408 7 4219 v -32 241
a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 -32 241 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 3401 @rhi @setspecial
%%BeginDocument: plots/power-ats.ps
%!PS-Adobe-2.0
%%Title: power-ats.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Mar 14 16:47:22 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
6248 0 V
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
(-6.5) Rshow
1.000 UL
LTa
714 977 M
6248 0 V
1.000 UL
LTb
714 977 M
63 0 V
6185 0 R
-63 0 V
630 977 M
(-6) Rshow
1.000 UL
LTa
714 1533 M
6248 0 V
1.000 UL
LTb
714 1533 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-5.5) Rshow
1.000 UL
LTa
714 2090 M
6248 0 V
1.000 UL
LTb
714 2090 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-5) Rshow
1.000 UL
LTa
714 2646 M
6248 0 V
1.000 UL
LTb
714 2646 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-4.5) Rshow
1.000 UL
LTa
714 3203 M
6248 0 V
1.000 UL
LTb
714 3203 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-4) Rshow
1.000 UL
LTa
714 3759 M
6248 0 V
1.000 UL
LTb
714 3759 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-3.5) Rshow
1.000 UL
LTa
714 4316 M
6248 0 V
1.000 UL
LTb
714 4316 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-3) Rshow
1.000 UL
LTa
714 4872 M
6248 0 V
1.000 UL
LTb
714 4872 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-2.5) Rshow
1.000 UL
LTa
714 420 M
0 4452 V
1.000 UL
LTb
714 420 M
0 63 V
0 4389 R
0 -63 V
714 280 M
(-3) Cshow
1.000 UL
LTa
1339 420 M
0 4452 V
1.000 UL
LTb
1339 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-2.5) Cshow
1.000 UL
LTa
1964 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
1964 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-2) Cshow
1.000 UL
LTa
2588 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
2588 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-1.5) Cshow
1.000 UL
LTa
3213 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
3213 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-1) Cshow
1.000 UL
LTa
3838 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
3838 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-0.5) Cshow
1.000 UL
LTa
4463 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
4463 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(0) Cshow
1.000 UL
LTa
5088 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
5088 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(0.5) Cshow
1.000 UL
LTa
5712 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
5712 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1) Cshow
1.000 UL
LTa
6337 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
6337 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1.5) Cshow
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(2) Cshow
1.000 UL
LTb
714 420 M
6248 0 V
0 4452 V
-6248 0 V
714 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(log10\(Power\)) Cshow
grestore
3838 70 M
(log10\(Frequency in Hz\)) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
(Powerspectrum of aggregated time series \(0.01 sec. bins\)) Rshow
6395 4739 M
399 0 V
1000 4648 M
338 -822 V
226 -36 V
113 -815 V
113 -71 V
113 384 V
112 7 V
113 -177 V
113 -36 V
113 -187 V
113 -181 V
113 -61 V
112 -373 V
113 151 V
113 -60 V
113 -295 V
113 -107 V
113 -224 V
113 132 V
112 -121 V
113 -92 V
113 -136 V
113 26 V
113 6 V
113 -216 V
113 27 V
112 -62 V
113 -43 V
113 95 V
113 -174 V
113 1 V
113 69 V
112 -171 V
5062 943 L
113 -76 V
113 73 V
113 -95 V
113 35 V
5627 704 L
112 -46 V
113 54 V
5965 611 L
113 -20 V
113 -17 V
113 -11 V
113 -64 V
112 -25 V
1000 4648 Pls
1338 3826 Pls
1564 3790 Pls
1677 2975 Pls
1790 2904 Pls
1903 3288 Pls
2015 3295 Pls
2128 3118 Pls
2241 3082 Pls
2354 2895 Pls
2467 2714 Pls
2580 2653 Pls
2692 2280 Pls
2805 2431 Pls
2918 2371 Pls
3031 2076 Pls
3144 1969 Pls
3257 1745 Pls
3370 1877 Pls
3482 1756 Pls
3595 1664 Pls
3708 1528 Pls
3821 1554 Pls
3934 1560 Pls
4047 1344 Pls
4160 1371 Pls
4272 1309 Pls
4385 1266 Pls
4498 1361 Pls
4611 1187 Pls
4724 1188 Pls
4837 1257 Pls
4949 1086 Pls
5062 943 Pls
5175 867 Pls
5288 940 Pls
5401 845 Pls
5514 880 Pls
5627 704 Pls
5739 658 Pls
5852 712 Pls
5965 611 Pls
6078 591 Pls
6191 574 Pls
6304 563 Pls
6417 499 Pls
6529 474 Pls
6594 4739 Pls
1.000 UL
LT1
6311 4599 M
(-1.01) Rshow
6395 4599 M
399 0 V
1000 4068 M
56 -50 V
55 -50 V
56 -51 V
56 -50 V
56 -51 V
56 -50 V
56 -50 V
56 -51 V
55 -50 V
56 -51 V
56 -50 V
56 -50 V
56 -51 V
56 -50 V
56 -50 V
55 -51 V
56 -50 V
56 -51 V
56 -50 V
56 -50 V
56 -51 V
56 -50 V
55 -51 V
56 -50 V
56 -50 V
56 -51 V
56 -50 V
56 -50 V
56 -51 V
55 -50 V
56 -51 V
56 -50 V
56 -50 V
56 -51 V
56 -50 V
56 -51 V
55 -50 V
56 -50 V
56 -51 V
56 -50 V
56 -51 V
56 -50 V
56 -50 V
55 -51 V
56 -50 V
56 -50 V
56 -51 V
56 -50 V
56 -51 V
55 -50 V
56 -50 V
56 -51 V
56 -50 V
56 -51 V
56 -50 V
56 -50 V
55 -51 V
56 -50 V
56 -50 V
56 -51 V
56 -50 V
56 -51 V
56 -50 V
55 -50 V
56 -51 V
56 -50 V
56 -51 V
56 -50 V
56 -50 V
56 -51 V
55 -50 V
56 -51 V
23 -20 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 4084 241 a
 currentpoint grestore moveto
 4084 241 a 5899 4408 7 4219 v
-90 4415 5997 7 v 1043 4756 a Fj(Figure)58 b(1:)76 b(T)-5
b(ypical)59 b(P)-5 b(o)g(w)g(er)59 b(sp)5 b(ectrum,)56
b(from)i Fh(tcpdump)p eop
%%Page: 12 12
12 11 bop -90 189 5997 7 v -90 4408 7 4219 v -32 241
a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 -32 241 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 3401 @rhi @setspecial
%%BeginDocument: plots/moa-power.ps
%!PS-Adobe-2.0
%%Title: moa-power.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Mar  8 14:58:29 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
6248 0 V
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
(-5.5) Rshow
1.000 UL
LTa
714 887 M
6248 0 V
1.000 UL
LTb
714 887 M
63 0 V
6185 0 R
-63 0 V
630 887 M
(-5) Rshow
1.000 UL
LTa
714 1353 M
6248 0 V
1.000 UL
LTb
714 1353 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-4.5) Rshow
1.000 UL
LTa
714 1820 M
6248 0 V
1.000 UL
LTb
714 1820 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-4) Rshow
1.000 UL
LTa
714 2287 M
6248 0 V
1.000 UL
LTb
714 2287 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-3.5) Rshow
1.000 UL
LTa
714 2753 M
6248 0 V
1.000 UL
LTb
714 2753 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-3) Rshow
1.000 UL
LTa
714 3220 M
6248 0 V
1.000 UL
LTb
714 3220 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-2.5) Rshow
1.000 UL
LTa
714 3687 M
6248 0 V
1.000 UL
LTb
714 3687 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-2) Rshow
1.000 UL
LTa
714 4153 M
5177 0 V
987 0 R
84 0 V
1.000 UL
LTb
714 4153 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-1.5) Rshow
1.000 UL
LTa
714 4620 M
6248 0 V
1.000 UL
LTb
714 4620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-1) Rshow
1.000 UL
LTa
714 420 M
0 4200 V
1.000 UL
LTb
714 420 M
0 63 V
0 4137 R
0 -63 V
714 280 M
(-5.5) Cshow
1.000 UL
LTa
1408 420 M
0 4200 V
1.000 UL
LTb
1408 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-5) Cshow
1.000 UL
LTa
2102 420 M
0 4200 V
1.000 UL
LTb
2102 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-4.5) Cshow
1.000 UL
LTa
2797 420 M
0 4200 V
1.000 UL
LTb
2797 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-4) Cshow
1.000 UL
LTa
3491 420 M
0 4200 V
1.000 UL
LTb
3491 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-3.5) Cshow
1.000 UL
LTa
4185 420 M
0 4200 V
1.000 UL
LTb
4185 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-3) Cshow
1.000 UL
LTa
4879 420 M
0 4200 V
1.000 UL
LTb
4879 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-2.5) Cshow
1.000 UL
LTa
5574 420 M
0 4200 V
1.000 UL
LTb
5574 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-2) Cshow
1.000 UL
LTa
6268 420 M
0 3577 V
0 560 R
0 63 V
1.000 UL
LTb
6268 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-1.5) Cshow
1.000 UL
LTa
6962 420 M
0 4200 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-1) Cshow
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(log10\(Power\)) Cshow
grestore
3838 70 M
(log10\(frequency in Hz\)) Cshow
3838 4830 M
(Power spectra of the network traffic) Cshow
1.000 UL
LT0
6311 4487 M
(IN) Rshow
6395 4487 M
399 0 V
1169 3943 M
351 287 V
234 -299 V
234 -315 V
117 -429 V
117 -32 V
117 -447 V
117 -58 V
117 256 V
117 -333 V
117 27 V
117 765 V
117 -342 V
118 16 V
117 -100 V
117 226 V
117 -699 V
117 62 V
117 172 V
117 -189 V
117 -14 V
117 168 V
117 31 V
117 -175 V
117 72 V
117 -122 V
117 -197 V
117 0 V
117 -44 V
117 -158 V
117 -85 V
117 -81 V
117 -148 V
117 -85 V
117 -54 V
117 4 V
117 -102 V
117 -48 V
117 -25 V
117 -51 V
117 -37 V
117 -67 V
117 -72 V
117 -64 V
117 -97 V
117 -39 V
1.000 UL
LT1
6311 4347 M
(OUT) Rshow
6395 4347 M
399 0 V
1169 3981 M
351 199 V
234 -233 V
234 -311 V
117 -308 V
117 60 V
117 -314 V
117 -360 V
117 -58 V
117 239 V
117 170 V
117 349 V
117 -230 V
118 -168 V
117 -186 V
117 262 V
117 -705 V
117 -121 V
117 313 V
117 -115 V
117 94 V
117 -10 V
117 -129 V
117 -7 V
117 43 V
117 -168 V
117 -238 V
117 -42 V
117 120 V
117 -175 V
117 -36 V
117 -82 V
117 -109 V
117 -101 V
117 -69 V
117 -130 V
117 -151 V
117 -71 V
117 -59 V
117 -65 V
6318 956 L
117 -64 V
6552 785 L
117 -89 V
6786 573 L
117 -44 V
1.000 UL
LT2
6311 4207 M
(TOTAL) Rshow
6395 4207 M
399 0 V
1169 3958 M
351 244 V
234 -269 V
234 -310 V
117 -374 V
117 11 V
117 -383 V
117 -310 V
117 142 V
117 -11 V
117 141 V
117 543 V
117 -293 V
118 -69 V
117 -149 V
117 249 V
117 -776 V
117 4 V
117 277 V
117 -190 V
117 60 V
117 71 V
117 -11 V
117 -107 V
117 54 V
117 -151 V
117 -223 V
117 -8 V
117 -5 V
117 -186 V
117 -55 V
117 -93 V
117 -142 V
117 -83 V
117 -49 V
117 -63 V
117 -131 V
117 -49 V
117 -40 V
117 -69 V
117 -70 V
117 -75 V
117 -94 V
117 -83 V
117 -98 V
117 -46 V
1.000 UL
LT3
6311 4067 M
(-1.0) Rshow
6395 4067 M
399 0 V
1169 4453 M
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -38 V
58 -39 V
57 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
57 -38 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
57 -39 V
58 -39 V
58 -38 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
57 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -38 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
57 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -38 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
57 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -38 V
58 -39 V
57 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
58 -39 V
57 -39 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 4084 241 a
 currentpoint grestore moveto
 4084 241 a 5899 4408 7 4219 v
-90 4415 5997 7 v 771 4756 a Fj(Figure)59 b(2:)76 b(T)-5
b(ypical)59 b(P)-5 b(o)g(w)g(er)59 b(sp)5 b(ectrum,)56
b(from)i Fh(/proc/net/dev)p eop
%%Page: 13 13
13 12 bop -90 189 5997 7 v -90 4408 7 4219 v -32 241
a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 -32 241 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 3401 @rhi @setspecial
%%BeginDocument: york-power.ps
%!PS-Adobe-2.0
%%Title: york-power.ps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Thu Jul 17 15:56:07 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
6248 0 V
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
(-7) Rshow
1.000 UL
LTa
714 915 M
6248 0 V
1.000 UL
LTb
714 915 M
63 0 V
6185 0 R
-63 0 V
630 915 M
(-6.5) Rshow
1.000 UL
LTa
714 1409 M
6248 0 V
1.000 UL
LTb
714 1409 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-6) Rshow
1.000 UL
LTa
714 1904 M
6248 0 V
1.000 UL
LTb
714 1904 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-5.5) Rshow
1.000 UL
LTa
714 2399 M
6248 0 V
1.000 UL
LTb
714 2399 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-5) Rshow
1.000 UL
LTa
714 2893 M
6248 0 V
1.000 UL
LTb
714 2893 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-4.5) Rshow
1.000 UL
LTa
714 3388 M
6248 0 V
1.000 UL
LTb
714 3388 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-4) Rshow
1.000 UL
LTa
714 3883 M
6248 0 V
1.000 UL
LTb
714 3883 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-3.5) Rshow
1.000 UL
LTa
714 4377 M
6248 0 V
1.000 UL
LTb
714 4377 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-3) Rshow
1.000 UL
LTa
714 4872 M
6248 0 V
1.000 UL
LTb
714 4872 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-2.5) Rshow
1.000 UL
LTa
714 420 M
0 4452 V
1.000 UL
LTb
714 420 M
0 63 V
0 4389 R
0 -63 V
714 280 M
(-3) Cshow
1.000 UL
LTa
1755 420 M
0 4452 V
1.000 UL
LTb
1755 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-2) Cshow
1.000 UL
LTa
2797 420 M
0 4452 V
1.000 UL
LTb
2797 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-1) Cshow
1.000 UL
LTa
3838 420 M
0 4452 V
1.000 UL
LTb
3838 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 0) Cshow
1.000 UL
LTa
4879 420 M
0 3969 V
0 420 R
0 63 V
1.000 UL
LTb
4879 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1) Cshow
1.000 UL
LTa
5921 420 M
0 3969 V
0 420 R
0 63 V
1.000 UL
LTb
5921 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 2) Cshow
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 3) Cshow
1.000 UL
LTb
714 420 M
6248 0 V
0 4452 V
-6248 0 V
714 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(log10\(Power\)) Cshow
grestore
3838 70 M
(log10\(Frequency in Hz\)) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
(York 0.01s aggregation) Rshow
6395 4739 M
399 0 V
1262 4144 M
264 -759 V
175 -76 V
176 -61 V
88 44 V
87 -248 V
88 -47 V
88 233 V
88 -228 V
87 86 V
88 -242 V
88 126 V
88 -375 V
88 -24 V
87 16 V
88 24 V
88 -149 V
88 83 V
87 -159 V
88 21 V
88 -129 V
88 -105 V
88 -70 V
87 -157 V
88 -67 V
88 -16 V
88 -130 V
87 -38 V
88 -102 V
88 -54 V
88 -84 V
87 20 V
88 -105 V
88 -62 V
88 164 V
88 60 V
87 -201 V
88 23 V
88 91 V
88 -189 V
87 20 V
88 8 V
88 -28 V
88 -40 V
88 -25 V
87 -22 V
1262 4144 Pls
1526 3385 Pls
1701 3309 Pls
1877 3248 Pls
1965 3292 Pls
2052 3044 Pls
2140 2997 Pls
2228 3230 Pls
2316 3002 Pls
2403 3088 Pls
2491 2846 Pls
2579 2972 Pls
2667 2597 Pls
2755 2573 Pls
2842 2589 Pls
2930 2613 Pls
3018 2464 Pls
3106 2547 Pls
3193 2388 Pls
3281 2409 Pls
3369 2280 Pls
3457 2175 Pls
3545 2105 Pls
3632 1948 Pls
3720 1881 Pls
3808 1865 Pls
3896 1735 Pls
3983 1697 Pls
4071 1595 Pls
4159 1541 Pls
4247 1457 Pls
4334 1477 Pls
4422 1372 Pls
4510 1310 Pls
4598 1474 Pls
4686 1534 Pls
4773 1333 Pls
4861 1356 Pls
4949 1447 Pls
5037 1258 Pls
5124 1278 Pls
5212 1286 Pls
5300 1258 Pls
5388 1218 Pls
5476 1193 Pls
5563 1171 Pls
6594 4739 Pls
1.000 UP
1.000 UL
LT1
6311 4599 M
(York 0.001s aggregation) Rshow
6395 4599 M
399 0 V
1373 4130 M
1586 2987 L
213 335 V
107 227 V
106 -112 V
107 -125 V
106 24 V
107 -130 V
107 -273 V
106 92 V
107 -209 V
106 37 V
107 -165 V
106 -68 V
107 19 V
107 -114 V
106 -25 V
107 -185 V
106 -71 V
107 -98 V
107 -167 V
106 -5 V
107 -181 V
106 -59 V
107 -111 V
106 -47 V
107 -24 V
107 -78 V
106 22 V
107 144 V
106 -210 V
107 70 V
107 16 V
106 -167 V
107 72 V
106 -55 V
107 -6 V
106 -26 V
107 -19 V
107 -27 V
106 -15 V
107 4 V
106 -100 V
107 -81 V
106 -44 V
107 -80 V
107 -63 V
106 -48 V
1373 4130 Crs
1586 2987 Crs
1799 3322 Crs
1906 3549 Crs
2012 3437 Crs
2119 3312 Crs
2225 3336 Crs
2332 3206 Crs
2439 2933 Crs
2545 3025 Crs
2652 2816 Crs
2758 2853 Crs
2865 2688 Crs
2971 2620 Crs
3078 2639 Crs
3185 2525 Crs
3291 2500 Crs
3398 2315 Crs
3504 2244 Crs
3611 2146 Crs
3718 1979 Crs
3824 1974 Crs
3931 1793 Crs
4037 1734 Crs
4144 1623 Crs
4250 1576 Crs
4357 1552 Crs
4464 1474 Crs
4570 1496 Crs
4677 1640 Crs
4783 1430 Crs
4890 1500 Crs
4997 1516 Crs
5103 1349 Crs
5210 1421 Crs
5316 1366 Crs
5423 1360 Crs
5529 1334 Crs
5636 1315 Crs
5743 1288 Crs
5849 1273 Crs
5956 1277 Crs
6062 1177 Crs
6169 1096 Crs
6275 1052 Crs
6382 972 Crs
6489 909 Crs
6595 861 Crs
6594 4599 Crs
1.000 UP
1.000 UL
LT2
6311 4459 M
(Imperial 0.001s aggregation) Rshow
6395 4459 M
399 0 V
1373 4737 M
213 -75 V
213 -216 V
107 101 V
106 -23 V
107 -382 V
106 121 V
107 263 V
107 -8 V
106 -69 V
107 -347 V
106 -382 V
107 31 V
106 -60 V
107 -84 V
107 -341 V
106 -287 V
107 225 V
106 -325 V
107 -105 V
107 -144 V
106 -127 V
107 -184 V
106 -73 V
107 -39 V
106 -10 V
107 -137 V
107 -100 V
106 36 V
107 -1 V
106 -40 V
107 -24 V
107 -79 V
106 -45 V
107 -62 V
106 -16 V
107 -66 V
106 -33 V
107 -39 V
107 -22 V
106 73 V
107 -153 V
106 -26 V
107 30 V
106 -58 V
107 -8 V
107 -33 V
106 -1 V
1373 4737 Star
1586 4662 Star
1799 4446 Star
1906 4547 Star
2012 4524 Star
2119 4142 Star
2225 4263 Star
2332 4526 Star
2439 4518 Star
2545 4449 Star
2652 4102 Star
2758 3720 Star
2865 3751 Star
2971 3691 Star
3078 3607 Star
3185 3266 Star
3291 2979 Star
3398 3204 Star
3504 2879 Star
3611 2774 Star
3718 2630 Star
3824 2503 Star
3931 2319 Star
4037 2246 Star
4144 2207 Star
4250 2197 Star
4357 2060 Star
4464 1960 Star
4570 1996 Star
4677 1995 Star
4783 1955 Star
4890 1931 Star
4997 1852 Star
5103 1807 Star
5210 1745 Star
5316 1729 Star
5423 1663 Star
5529 1630 Star
5636 1591 Star
5743 1569 Star
5849 1642 Star
5956 1489 Star
6062 1463 Star
6169 1493 Star
6275 1435 Star
6382 1427 Star
6489 1394 Star
6595 1393 Star
6594 4459 Star
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 4084 241 a
 currentpoint grestore moveto
 4084 241 a 5899 4408 7 4219 v
-90 4415 5997 7 v eop
%%Page: 14 14
14 13 bop -242 149 a Fk(Some)94 b(hea)-8 b(vy)94 b(tailed)g
(distributions)-104 601 y Fi(\017)86 b Fj(Zipf)13 b('s)58
b(la)-5 b(w)1878 1152 y Fg(P)24 b Fj(\(\014le)57 b(or)h(request)e(size)
47 b Fg(>)h(x)p Fj(\))g Fi(\031)4087 1035 y Fj(1)p 4081
1112 99 7 v 4081 1270 a Fg(x)4200 1152 y(:)-104 1529
y Fi(\017)86 b Fj(One)56 b(p)5 b(df)56 b(that)i(can)e(exhibit)i(this)g
(b)5 b(eha)-5 b(viour)57 b(is)h(the)f(P)-5 b(areto)58
b(distribution)2372 1902 y Fg(p)p Fj(\()p Fg(x)p Fj(\))48
b(=)g Fg(\013)q(k)3127 1831 y Ff(\013)3225 1902 y Fg(x)3323
1831 y Fb(\000)p Ff(\013)p Fb(\000)p Fd(1)3705 1902 y
Fg(;)68 2276 y Fj(where)54 b Fg(\013)q(;)29 b(k)53 b(>)47
b Fj(0)56 b(and)e Fg(x)49 b Fi(\025)e Fg(k)5 b Fj(.)76
b(If)55 b Fg(\013)49 b Fj(=)e(1)56 b(the)e(P)-5 b(areto)56
b(distribution)g(sho)-5 b(ws)56 b(the)e(b)5 b(eha)-5
b(viour)68 2519 y(of)57 b(the)f(Zipf)i(la)-5 b(w)59 b(for)f(large)g
Fg(x)p Fj(.)77 b(In)57 b(a)h(double)e(logarithmic)61
b(plot,)c(this)h(distribution)h(is)f(a)68 2763 y(straigh)-5
b(t)58 b(line)h(with)f(gradien)-5 b(t)58 b Fi(\000)p
Fj(\(1)38 b(+)g Fg(\013)q Fj(\).)-104 3103 y Fi(\017)86
b Fj(The)57 b(symmetric)h(Cauc)-5 b(h)g(y)57 b(\(ak)-10
b(a)58 b(Loren)-5 b(tz)57 b(or)g(Breit-Wigner\))i(distribution)g(has)e
(a)h(p)5 b(df)68 3347 y(giv)-5 b(en)57 b(b)-5 b(y)2423
3651 y Fg(p)p Fj(\()p Fg(x)p Fj(\))48 b(=)3001 3534 y(1)p
2992 3611 105 7 v 2992 3769 a Fg(\031)3370 3534 y(s)p
3138 3611 545 7 v 3138 3769 a(s)3219 3719 y Fd(2)3334
3769 y Fj(+)38 b Fg(x)3604 3719 y Fd(2)5838 3651 y Fj(\(1\))p
eop
%%Page: 15 15
15 14 bop -104 29 a Fi(\017)86 b Fj(The)57 b(truncated)f(Cauc)-5
b(h)g(y)57 b(distribution)i(has)e(a)g(p)5 b(df)56 b Fg(c)p
Fj(\()p Fg(x)p Fj(\))h(de\014ned)f(b)-5 b(y:)1849 582
y Fg(c)p Fj(\()p Fg(x)p Fj(\))48 b(=)2385 229 y Fc(8)2385
384 y(<)2385 694 y(:)2538 451 y Fg(p)p Fj(\()p Fg(x)p
Fj(\))p Fg(=C)185 b Fj(0)48 b Fi(\024)g Fg(x)g Fi(\024)g
Fg(x)3993 477 y Fd(max)2538 744 y Fj(0)627 b(else)68
1135 y(where)57 b Fg(p)p Fj(\()p Fg(x)p Fj(\))g(is)h(giv)-5
b(en)58 b(b)-5 b(y)57 b(eq.)76 b(1)57 b(and)g Fg(C)70
b Fj(is)58 b(a)f(normalisation)k(constan)-5 b(t)2347
1578 y Fg(C)61 b Fj(=)2712 1344 y Fc(Z)2885 1386 y Ff(x)2963
1404 y Fa(max)2808 1735 y Fd(0)3223 1578 y Fg(p)p Fj(\()p
Fg(x)p Fj(\))p Fg(dx:)68 2011 y Fj(The)c(truncation)g(of)g(the)g(Cauc)
-5 b(h)g(y)57 b(distribution)i(gets)e(rid)h(of)f(its)h(usually)g
(prohibiting)68 2255 y(features)e(lik)-5 b(e)59 b(in\014nite)e(momen)-5
b(ts.)-104 2594 y Fi(\017)86 b Fj(A)57 b(strictly)i(stable)e(L)-5
b(\023)-81 b(evy)57 b(distribution)i(with)f(c)-5 b(haracteristic)58
b(exp)5 b(onen)-5 b(t)55 b Fg(\013)j Fj(is)h(de\014ned)c(b)-5
b(y)68 2838 y(its)58 b(c)-5 b(haracteristic)58 b(function)e([)p
Fl(?)q Fj(])2481 3211 y Fg(G)p Fj(\()p Fg(k)5 b Fj(\))48
b(=)g Fg(e)3155 3139 y Fb(\000j)p Ff(k)s Fb(j)3421 3087
y Fe(\013)3508 3139 y Ff(\015)3596 3211 y Fg(:)2194 b
Fj(\(2\))68 3583 y(The)57 b(scale)g(parameter)h Fg(\015)67
b Fj(has)57 b(to)g(satisfy)h Fg(\015)f(>)48 b Fj(0.)77
b(The)57 b(distributions)h(are)g(stable)f(for)68 3827
y(0)48 b Fi(\024)f Fg(\013)i Fi(\024)f Fj(2.)76 b(Ranging)58
b(from)g(normal)h(to)e(Cauc)-5 b(h)g(y)57 b(distribution)p
eop
%%Page: 16 16
16 15 bop -242 73 a Fk(File)94 b(and)f(request)h(size)g(distribution)p
400 670 5017 7 v 400 4202 7 3533 v 458 721 a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 458 721
a @beginspecial 50 @llx 50 @lly 554 @urx 770 @ury 2834
@rhi @setspecial
%%BeginDocument: plots/file-and-request.ps
%!PS-Adobe-2.0
%%Title: c:file-and-request.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Wed Apr 10 21:42:31 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
882 420 M
6080 0 V
1.000 UL
LTb
882 420 M
63 0 V
6017 0 R
-63 0 V
798 420 M
(1e-10) Rshow
882 791 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 1162 M
6080 0 V
1.000 UL
LTb
882 1162 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-08) Rshow
882 1533 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 1904 M
6080 0 V
1.000 UL
LTb
882 1904 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-06) Rshow
882 2275 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 2646 M
6080 0 V
1.000 UL
LTb
882 2646 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.0001) Rshow
882 3017 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 3388 M
6080 0 V
1.000 UL
LTb
882 3388 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.01) Rshow
882 3759 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 4130 M
6080 0 V
1.000 UL
LTb
882 4130 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1) Rshow
882 4501 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 4872 M
6080 0 V
1.000 UL
LTb
882 4872 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(100) Rshow
1.000 UL
LTa
882 420 M
0 4452 V
1.000 UL
LTb
882 420 M
0 63 V
0 4389 R
0 -63 V
882 280 M
(0.0001) Cshow
1085 420 M
0 31 V
0 4421 R
0 -31 V
1354 420 M
0 31 V
0 4421 R
0 -31 V
1492 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
1558 420 M
0 4452 V
1.000 UL
LTb
1558 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(0.001) Cshow
1761 420 M
0 31 V
0 4421 R
0 -31 V
2030 420 M
0 31 V
0 4421 R
0 -31 V
2168 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
2233 420 M
0 4452 V
1.000 UL
LTb
2233 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(0.01) Cshow
2436 420 M
0 31 V
0 4421 R
0 -31 V
2705 420 M
0 31 V
0 4421 R
0 -31 V
2843 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
2909 420 M
0 4452 V
1.000 UL
LTb
2909 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(0.1) Cshow
3112 420 M
0 31 V
0 4421 R
0 -31 V
3381 420 M
0 31 V
0 4421 R
0 -31 V
3519 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
3584 420 M
0 3969 V
0 420 R
0 63 V
1.000 UL
LTb
3584 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1) Cshow
3788 420 M
0 31 V
0 4421 R
0 -31 V
4056 420 M
0 31 V
0 4421 R
0 -31 V
4194 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
4260 420 M
0 3969 V
0 420 R
0 63 V
1.000 UL
LTb
4260 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(10) Cshow
4463 420 M
0 31 V
0 4421 R
0 -31 V
4732 420 M
0 31 V
0 4421 R
0 -31 V
4870 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
4935 420 M
0 3969 V
0 420 R
0 63 V
1.000 UL
LTb
4935 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(100) Cshow
5139 420 M
0 31 V
0 4421 R
0 -31 V
5408 420 M
0 31 V
0 4421 R
0 -31 V
5545 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
5611 420 M
0 3969 V
0 420 R
0 63 V
1.000 UL
LTb
5611 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1000) Cshow
5814 420 M
0 31 V
0 4421 R
0 -31 V
6083 420 M
0 31 V
0 4421 R
0 -31 V
6221 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6286 420 M
0 3969 V
0 420 R
0 63 V
1.000 UL
LTb
6286 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(10000) Cshow
6490 420 M
0 31 V
0 4421 R
0 -31 V
6759 420 M
0 31 V
0 4421 R
0 -31 V
6897 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(100000) Cshow
1.000 UL
LTb
882 420 M
6080 0 V
0 4452 V
-6080 0 V
882 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Probability) Cshow
grestore
3922 70 M
(File size in 1kBytes) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
(File size distribution on texel34) Rshow
1551 4424 Pls
1754 3754 Pls
1957 3629 Pls
2161 3703 Pls
2364 3786 Pls
2567 3910 Pls
2771 4002 Pls
2974 3998 Pls
3177 3986 Pls
3381 3943 Pls
3584 3915 Pls
3788 3840 Pls
3991 3770 Pls
4194 3558 Pls
4398 3376 Pls
4601 3208 Pls
4804 3020 Pls
5008 2791 Pls
5211 2569 Pls
5414 2335 Pls
5618 2153 Pls
5821 1882 Pls
6025 1660 Pls
6228 1421 Pls
6431 1172 Pls
6635 920 Pls
6594 4739 Pls
1.000 UP
1.000 UL
LT1
6311 4599 M
(Cauchy distribution) Rshow
6395 4459 M
399 0 V
1551 4057 M
51 0 V
51 0 V
52 0 V
51 0 V
51 0 V
52 0 V
51 0 V
51 0 V
52 0 V
51 0 V
51 0 V
52 0 V
51 0 V
52 0 V
51 0 V
51 0 V
52 0 V
51 0 V
51 0 V
52 0 V
51 0 V
51 0 V
52 0 V
51 0 V
51 -1 V
52 0 V
51 -1 V
52 -1 V
51 -1 V
51 -1 V
52 -3 V
51 -3 V
51 -4 V
52 -6 V
51 -8 V
51 -11 V
52 -14 V
51 -19 V
51 -22 V
52 -28 V
51 -33 V
51 -37 V
52 -41 V
51 -45 V
52 -48 V
51 -50 V
51 -52 V
52 -53 V
51 -54 V
51 -55 V
52 -55 V
51 -55 V
51 -56 V
52 -56 V
51 -56 V
51 -56 V
52 -57 V
51 -56 V
51 -56 V
52 -57 V
51 -56 V
52 -56 V
51 -57 V
51 -56 V
52 -56 V
51 -57 V
51 -56 V
52 -57 V
51 -56 V
51 -56 V
52 -57 V
51 -56 V
51 -57 V
52 -56 V
51 -57 V
52 -56 V
51 -56 V
51 -57 V
52 -56 V
51 -57 V
51 -56 V
52 -56 V
51 -57 V
51 -56 V
52 -57 V
51 -56 V
51 -56 V
52 -57 V
51 -56 V
51 -57 V
52 -56 V
51 -56 V
52 -57 V
51 -56 V
51 -57 V
52 -56 V
51 -56 V
51 -57 V
52 -56 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 3888 721 a
 currentpoint grestore moveto
 3888 721 a 5409 4202 7 3533 v
400 4209 5017 7 v eop
%%Page: 17 17
17 16 bop -90 189 5997 7 v -90 4408 7 4219 v -32 241
a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 -32 241 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 3401 @rhi @setspecial
%%BeginDocument: plots/sunsite-pdf-fit.ps
%!PS-Adobe-2.0
%%Title: sunsite-pdf-fit.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sun Nov 24 12:46:16 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
882 420 M
63 0 V
6017 0 R
-63 0 V
798 420 M
(1e-14) Rshow
882 791 M
31 0 V
6049 0 R
-31 0 V
882 1162 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-12) Rshow
882 1533 M
31 0 V
6049 0 R
-31 0 V
882 1904 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-10) Rshow
882 2275 M
31 0 V
6049 0 R
-31 0 V
882 2646 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-08) Rshow
882 3017 M
31 0 V
6049 0 R
-31 0 V
882 3388 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-06) Rshow
882 3759 M
31 0 V
6049 0 R
-31 0 V
882 4130 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.0001) Rshow
882 4501 M
31 0 V
6049 0 R
-31 0 V
882 4872 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.01) Rshow
882 420 M
0 63 V
0 4389 R
0 -63 V
882 280 M
(0.1) Cshow
1490 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1) Cshow
2098 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(10) Cshow
2706 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(100) Cshow
3314 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1000) Cshow
3922 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(10000) Cshow
4530 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(100000) Cshow
5138 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1e+06) Cshow
5746 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1e+07) Cshow
6354 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1e+08) Cshow
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1e+09) Cshow
1.000 UL
LTb
882 420 M
6080 0 V
0 4452 V
-6080 0 V
882 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Probability density) Cshow
grestore
3922 70 M
(File size in bytes) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
(SunSite files) Rshow
6395 4739 M
399 0 V
1361 4600 M
319 -470 V
108 -18 V
54 13 V
54 -105 V
54 -44 V
53 21 V
54 118 V
54 414 V
54 -101 V
54 -43 V
54 -142 V
54 45 V
54 84 V
54 150 V
53 -161 V
54 -21 V
54 -62 V
54 5 V
54 491 V
54 -550 V
54 -34 V
54 -9 V
54 55 V
54 104 V
53 -27 V
54 15 V
54 17 V
54 11 V
54 -21 V
54 -47 V
54 -60 V
54 -63 V
54 -74 V
54 -46 V
53 -24 V
54 -59 V
54 -30 V
54 -36 V
54 -47 V
54 -45 V
54 127 V
54 -208 V
54 -44 V
54 -37 V
53 -55 V
54 -41 V
54 -53 V
54 -48 V
54 -41 V
54 -35 V
54 -51 V
54 -40 V
54 -40 V
54 -39 V
53 -45 V
54 -52 V
54 10 V
54 -94 V
54 -44 V
54 -44 V
54 -40 V
54 -31 V
54 -27 V
54 -41 V
53 -51 V
54 -35 V
54 -64 V
54 -54 V
54 -58 V
54 -81 V
54 -58 V
54 -55 V
54 -46 V
53 -85 V
54 -34 V
54 -68 V
54 -79 V
54 -64 V
54 -105 V
54 -120 V
54 -69 V
54 -106 V
54 -54 V
53 -71 V
54 -86 V
54 -59 V
54 -132 V
54 -113 V
54 -144 V
54 -104 V
54 -164 V
54 57 V
54 -87 V
53 62 V
54 13 V
54 120 V
1361 4600 Pls
1680 4130 Pls
1788 4112 Pls
1842 4125 Pls
1896 4020 Pls
1950 3976 Pls
2003 3997 Pls
2057 4115 Pls
2111 4529 Pls
2165 4428 Pls
2219 4385 Pls
2273 4243 Pls
2327 4288 Pls
2381 4372 Pls
2435 4522 Pls
2488 4361 Pls
2542 4340 Pls
2596 4278 Pls
2650 4283 Pls
2704 4774 Pls
2758 4224 Pls
2812 4190 Pls
2866 4181 Pls
2920 4236 Pls
2974 4340 Pls
3027 4313 Pls
3081 4328 Pls
3135 4345 Pls
3189 4356 Pls
3243 4335 Pls
3297 4288 Pls
3351 4228 Pls
3405 4165 Pls
3459 4091 Pls
3513 4045 Pls
3566 4021 Pls
3620 3962 Pls
3674 3932 Pls
3728 3896 Pls
3782 3849 Pls
3836 3804 Pls
3890 3931 Pls
3944 3723 Pls
3998 3679 Pls
4052 3642 Pls
4105 3587 Pls
4159 3546 Pls
4213 3493 Pls
4267 3445 Pls
4321 3404 Pls
4375 3369 Pls
4429 3318 Pls
4483 3278 Pls
4537 3238 Pls
4591 3199 Pls
4644 3154 Pls
4698 3102 Pls
4752 3112 Pls
4806 3018 Pls
4860 2974 Pls
4914 2930 Pls
4968 2890 Pls
5022 2859 Pls
5076 2832 Pls
5130 2791 Pls
5183 2740 Pls
5237 2705 Pls
5291 2641 Pls
5345 2587 Pls
5399 2529 Pls
5453 2448 Pls
5507 2390 Pls
5561 2335 Pls
5615 2289 Pls
5668 2204 Pls
5722 2170 Pls
5776 2102 Pls
5830 2023 Pls
5884 1959 Pls
5938 1854 Pls
5992 1734 Pls
6046 1665 Pls
6100 1559 Pls
6154 1505 Pls
6207 1434 Pls
6261 1348 Pls
6315 1289 Pls
6369 1157 Pls
6423 1044 Pls
6477 900 Pls
6531 796 Pls
6585 632 Pls
6639 689 Pls
6693 602 Pls
6746 664 Pls
6800 677 Pls
6854 797 Pls
6594 4739 Pls
1.000 UL
LT1
6311 4599 M
(Cauchy distribution) Rshow
6395 4599 M
399 0 V
1361 3886 M
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
56 0 V
55 0 V
55 0 V
56 0 V
55 -1 V
56 0 V
55 0 V
56 0 V
55 -1 V
56 0 V
55 -2 V
56 -1 V
55 -3 V
56 -4 V
55 -5 V
56 -9 V
55 -11 V
56 -17 V
55 -22 V
56 -29 V
55 -35 V
56 -43 V
55 -49 V
56 -54 V
55 -58 V
56 -61 V
55 -63 V
56 -65 V
55 -66 V
56 -66 V
55 -67 V
56 -67 V
55 -67 V
56 -68 V
55 -67 V
56 -68 V
55 -68 V
56 -67 V
55 -68 V
56 -68 V
55 -67 V
56 -68 V
55 -68 V
56 -67 V
55 -68 V
56 -68 V
55 -68 V
55 -67 V
56 -68 V
55 -68 V
56 -68 V
55 -67 V
56 -68 V
55 -68 V
56 -67 V
55 -68 V
56 -68 V
55 -68 V
56 -67 V
55 -68 V
56 -68 V
55 -67 V
56 -68 V
55 -68 V
56 -68 V
55 -67 V
56 -68 V
55 -68 V
1.000 UL
LT2
6311 4459 M
(Lognormal distribution) Rshow
6395 4459 M
399 0 V
1361 4567 M
55 7 V
56 6 V
55 6 V
56 4 V
55 3 V
56 2 V
55 1 V
56 0 V
55 -1 V
56 -2 V
55 -3 V
56 -5 V
55 -5 V
56 -6 V
55 -8 V
56 -8 V
55 -10 V
56 -11 V
55 -11 V
56 -13 V
55 -14 V
56 -15 V
55 -15 V
56 -17 V
55 -18 V
56 -19 V
55 -21 V
56 -21 V
55 -22 V
56 -23 V
55 -25 V
56 -25 V
55 -26 V
55 -28 V
56 -29 V
55 -29 V
56 -31 V
55 -32 V
56 -32 V
55 -34 V
56 -35 V
55 -36 V
56 -37 V
55 -38 V
56 -40 V
55 -40 V
56 -41 V
55 -42 V
56 -44 V
55 -44 V
56 -46 V
55 -46 V
56 -48 V
55 -49 V
56 -49 V
55 -51 V
56 -52 V
55 -53 V
56 -54 V
55 -55 V
56 -56 V
55 -57 V
56 -58 V
55 -59 V
56 -61 V
55 -61 V
56 -62 V
55 -64 V
56 -64 V
55 -66 V
56 -67 V
55 -67 V
56 -69 V
55 -70 V
56 -71 V
55 -72 V
56 -73 V
55 -74 V
55 -75 V
56 -76 V
55 -77 V
56 -78 V
55 -80 V
56 -80 V
55 -82 V
56 -82 V
55 -84 V
56 -84 V
55 -86 V
56 -87 V
55 -88 V
56 -88 V
55 -90 V
56 -91 V
55 -92 V
56 -93 V
19 -33 V
stroke
grestore
end
showpage

%%EndDocument
 @endspecial 4084 241 a
 currentpoint grestore moveto
 4084 241 a 5899 4408 7 4219 v
-90 4415 5997 7 v eop
%%Page: 18 18
18 17 bop -242 73 a Fk(Changes)94 b(in)f(the)h(pac)-8
b(k)g(et)94 b(rate)p 400 670 5017 7 v 400 4202 7 3533
v 458 721 a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 458 721 a @beginspecial 50 @llx 50 @lly 554
@urx 770 @ury 2834 @rhi @setspecial
%%BeginDocument: plots/moa-long-cauchy-scaling-color.ps
%!PS-Adobe-2.0
%%Title: cauchy-scaling-color.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Tue Apr 23 10:26:09 2002
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
882 420 M
6080 0 V
1.000 UL
LTb
882 420 M
63 0 V
6017 0 R
-63 0 V
798 420 M
(1e-08) Rshow
882 631 M
31 0 V
6049 0 R
-31 0 V
882 909 M
31 0 V
6049 0 R
-31 0 V
882 1052 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 1120 M
6080 0 V
1.000 UL
LTb
882 1120 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-07) Rshow
882 1331 M
31 0 V
6049 0 R
-31 0 V
882 1609 M
31 0 V
6049 0 R
-31 0 V
882 1752 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 1820 M
6080 0 V
1.000 UL
LTb
882 1820 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-06) Rshow
882 2031 M
31 0 V
6049 0 R
-31 0 V
882 2309 M
31 0 V
6049 0 R
-31 0 V
882 2452 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 2520 M
6080 0 V
1.000 UL
LTb
882 2520 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-05) Rshow
882 2731 M
31 0 V
6049 0 R
-31 0 V
882 3009 M
31 0 V
6049 0 R
-31 0 V
882 3152 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 3220 M
6080 0 V
1.000 UL
LTb
882 3220 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.0001) Rshow
882 3431 M
31 0 V
6049 0 R
-31 0 V
882 3709 M
31 0 V
6049 0 R
-31 0 V
882 3852 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 3920 M
5093 0 V
903 0 R
84 0 V
1.000 UL
LTb
882 3920 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.001) Rshow
882 4131 M
31 0 V
6049 0 R
-31 0 V
882 4409 M
31 0 V
6049 0 R
-31 0 V
882 4552 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 4620 M
6080 0 V
1.000 UL
LTb
882 4620 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.01) Rshow
1.000 UL
LTa
882 420 M
0 4200 V
1.000 UL
LTb
882 420 M
0 63 V
0 4137 R
0 -63 V
882 280 M
(-8000) Cshow
1.000 UL
LTa
1642 420 M
0 4200 V
1.000 UL
LTb
1642 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-6000) Cshow
1.000 UL
LTa
2402 420 M
0 4200 V
1.000 UL
LTb
2402 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-4000) Cshow
1.000 UL
LTa
3162 420 M
0 4200 V
1.000 UL
LTb
3162 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(-2000) Cshow
1.000 UL
LTa
3922 420 M
0 4200 V
1.000 UL
LTb
3922 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(0) Cshow
1.000 UL
LTa
4682 420 M
0 4200 V
1.000 UL
LTb
4682 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(2000) Cshow
1.000 UL
LTa
5442 420 M
0 4200 V
1.000 UL
LTb
5442 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(4000) Cshow
1.000 UL
LTa
6202 420 M
0 2877 V
0 1260 R
0 63 V
1.000 UL
LTb
6202 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(6000) Cshow
1.000 UL
LTa
6962 420 M
0 4200 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
(8000) Cshow
1.000 UL
LTb
882 420 M
6080 0 V
0 4200 V
-6080 0 V
882 420 L
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Probability of change) Cshow
grestore
3922 70 M
(Change of rate in bytes) Cshow
3922 4830 M
(Change of rate for entire measurement period at different aggregation levels) Cshow
1.000 UP
1.000 UL
LT0
6311 4487 M
(2048) Rshow
6395 4487 M
399 0 V
3685 3353 M
33 211 V
10 -211 V
28 0 V
14 0 V
5 211 V
5 0 V
5 210 V
9 -87 V
14 -334 V
5 0 V
5 334 V
5 -334 V
4 211 V
5 0 V
5 -211 V
9 334 V
5 0 V
5 211 V
4 -211 V
5 258 V
5 -171 V
5 381 V
4 -102 V
5 0 V
5 29 V
5 -29 V
4 344 V
5 -104 V
5 149 V
5 135 V
14 -29 V
4 -182 V
5 21 V
5 -32 V
5 -123 V
4 -77 V
5 -73 V
5 -29 V
5 143 V
4 -298 V
5 -545 V
10 211 V
4 381 V
5 -258 V
5 0 V
5 -334 V
4 421 V
10 -421 V
4 334 V
10 -334 V
5 0 V
4 0 V
10 0 V
5 334 V
9 -334 V
5 0 V
19 0 V
5 211 V
9 -211 V
14 0 V
10 0 V
3685 3353 Pls
3718 3564 Pls
3728 3353 Pls
3756 3353 Pls
3770 3353 Pls
3775 3564 Pls
3780 3564 Pls
3785 3774 Pls
3794 3687 Pls
3808 3353 Pls
3813 3353 Pls
3818 3687 Pls
3823 3353 Pls
3827 3564 Pls
3832 3564 Pls
3837 3353 Pls
3846 3687 Pls
3851 3687 Pls
3856 3898 Pls
3860 3687 Pls
3865 3945 Pls
3870 3774 Pls
3875 4155 Pls
3879 4053 Pls
3884 4053 Pls
3889 4082 Pls
3894 4053 Pls
3898 4397 Pls
3903 4293 Pls
3908 4442 Pls
3913 4577 Pls
3927 4548 Pls
3931 4366 Pls
3936 4387 Pls
3941 4355 Pls
3946 4232 Pls
3950 4155 Pls
3955 4082 Pls
3960 4053 Pls
3965 4196 Pls
3969 3898 Pls
3974 3353 Pls
3984 3564 Pls
3988 3945 Pls
3993 3687 Pls
3998 3687 Pls
4003 3353 Pls
4007 3774 Pls
4017 3353 Pls
4021 3687 Pls
4031 3353 Pls
4036 3353 Pls
4040 3353 Pls
4050 3353 Pls
4055 3687 Pls
4064 3353 Pls
4069 3353 Pls
4088 3353 Pls
4093 3564 Pls
4102 3353 Pls
4116 3353 Pls
4126 3353 Pls
6594 4487 Pls
1.000 UP
1.000 UL
LT1
6311 4347 M
(1024) Rshow
6395 4347 M
399 0 V
3545 3211 M
45 -211 V
15 211 V
15 -211 V
8 211 V
7 -211 V
8 0 V
15 0 V
7 0 V
8 0 V
8 0 V
7 0 V
15 334 V
15 -334 V
8 334 V
15 0 V
7 88 V
8 -88 V
8 211 V
7 -56 V
8 -67 V
7 -88 V
8 366 V
7 0 V
8 29 V
7 -137 V
8 210 V
7 151 V
8 60 V
8 131 V
7 13 V
8 201 V
7 202 V
61 14 V
7 -180 V
8 -139 V
7 -183 V
8 -70 V
7 -76 V
8 -83 V
7 -175 V
8 112 V
7 -188 V
8 0 V
8 76 V
7 -246 V
8 123 V
15 -545 V
7 211 V
8 381 V
7 -381 V
8 -211 V
7 0 V
8 334 V
8 -123 V
7 0 V
8 -211 V
15 0 V
15 0 V
7 0 V
15 0 V
8 334 V
23 -123 V
7 -211 V
23 0 V
7 0 V
8 0 V
15 0 V
15 0 V
8 0 V
3545 3211 Crs
3590 3000 Crs
3605 3211 Crs
3620 3000 Crs
3628 3211 Crs
3635 3000 Crs
3643 3000 Crs
3658 3000 Crs
3665 3000 Crs
3673 3000 Crs
3681 3000 Crs
3688 3000 Crs
3703 3334 Crs
3718 3000 Crs
3726 3334 Crs
3741 3334 Crs
3748 3422 Crs
3756 3334 Crs
3764 3545 Crs
3771 3489 Crs
3779 3422 Crs
3786 3334 Crs
3794 3700 Crs
3801 3700 Crs
3809 3729 Crs
3816 3592 Crs
3824 3802 Crs
3831 3953 Crs
3839 4013 Crs
3847 4144 Crs
3854 4157 Crs
3862 4358 Crs
3869 4560 Crs
3930 4574 Crs
3937 4394 Crs
3945 4255 Crs
3952 4072 Crs
3960 4002 Crs
3967 3926 Crs
3975 3843 Crs
3982 3668 Crs
3990 3780 Crs
3997 3592 Crs
4005 3592 Crs
4013 3668 Crs
4020 3422 Crs
4028 3545 Crs
4043 3000 Crs
4050 3211 Crs
4058 3592 Crs
4065 3211 Crs
4073 3000 Crs
4080 3000 Crs
4088 3334 Crs
4096 3211 Crs
4103 3211 Crs
4111 3000 Crs
4126 3000 Crs
4141 3000 Crs
4148 3000 Crs
4163 3000 Crs
4171 3334 Crs
4194 3211 Crs
4201 3000 Crs
4224 3000 Crs
4231 3000 Crs
4239 3000 Crs
4254 3000 Crs
4269 3000 Crs
4277 3000 Crs
6594 4347 Crs
1.000 UP
1.000 UL
LT2
6311 4207 M
(512) Rshow
6395 4207 M
399 0 V
3311 2642 M
36 0 V
37 0 V
12 0 V
74 0 V
12 334 V
36 -334 V
13 211 V
12 -211 V
12 334 V
12 -334 V
25 0 V
12 211 V
12 -211 V
12 422 V
13 -422 V
12 211 V
12 -211 V
12 211 V
13 334 V
12 0 V
12 -334 V
12 279 V
13 -279 V
12 279 V
12 55 V
12 0 V
12 -55 V
13 290 V
12 -24 V
12 24 V
12 244 V
13 127 V
12 94 V
12 127 V
12 175 V
13 367 V
36 -10 V
12 -355 V
13 -161 V
12 -205 V
12 -39 V
12 -142 V
13 -178 V
12 -156 V
12 -76 V
12 108 V
13 56 V
12 -124 V
12 -40 V
12 -170 V
12 0 V
13 0 V
12 -211 V
12 279 V
12 -490 V
13 490 V
12 -490 V
12 0 V
12 422 V
13 -422 V
12 211 V
12 0 V
24 -211 V
13 0 V
12 0 V
12 0 V
25 211 V
61 -211 V
12 0 V
24 0 V
13 211 V
12 -211 V
12 0 V
12 0 V
3311 2642 Star
3347 2642 Star
3384 2642 Star
3396 2642 Star
3470 2642 Star
3482 2976 Star
3518 2642 Star
3531 2853 Star
3543 2642 Star
3555 2976 Star
3567 2642 Star
3592 2642 Star
3604 2853 Star
3616 2642 Star
3628 3064 Star
3641 2642 Star
3653 2853 Star
3665 2642 Star
3677 2853 Star
3690 3187 Star
3702 3187 Star
3714 2853 Star
3726 3132 Star
3739 2853 Star
3751 3132 Star
3763 3187 Star
3775 3187 Star
3787 3132 Star
3800 3422 Star
3812 3398 Star
3824 3422 Star
3836 3666 Star
3849 3793 Star
3861 3887 Star
3873 4014 Star
3885 4189 Star
3898 4556 Star
3934 4546 Star
3946 4191 Star
3959 4030 Star
3971 3825 Star
3983 3786 Star
3995 3644 Star
4008 3466 Star
4020 3310 Star
4032 3234 Star
4044 3342 Star
4057 3398 Star
4069 3274 Star
4081 3234 Star
4093 3064 Star
4105 3064 Star
4118 3064 Star
4130 2853 Star
4142 3132 Star
4154 2642 Star
4167 3132 Star
4179 2642 Star
4191 2642 Star
4203 3064 Star
4216 2642 Star
4228 2853 Star
4240 2853 Star
4264 2642 Star
4277 2642 Star
4289 2642 Star
4301 2642 Star
4326 2853 Star
4387 2642 Star
4399 2642 Star
4423 2642 Star
4436 2853 Star
4448 2642 Star
4460 2642 Star
4472 2642 Star
6594 4207 Star
1.000 UP
1.000 UL
LT3
6311 4067 M
(256) Rshow
6395 4067 M
399 0 V
3024 2315 M
126 0 V
18 210 V
18 -210 V
35 0 V
18 0 V
36 0 V
18 210 V
18 211 V
18 -421 V
36 0 V
18 0 V
18 334 V
18 -334 V
18 334 V
18 -334 V
18 0 V
18 421 V
18 -211 V
18 0 V
18 211 V
18 -211 V
18 211 V
18 -211 V
18 334 V
18 88 V
18 -143 V
18 143 V
17 -298 V
18 334 V
18 -77 V
18 211 V
18 -73 V
18 315 V
18 19 V
18 149 V
18 200 V
18 58 V
18 268 V
18 432 V
54 15 V
18 -440 V
18 -232 V
18 -152 V
18 -172 V
18 -155 V
18 -173 V
18 92 V
18 -174 V
18 44 V
18 -123 V
18 -156 V
18 -55 V
17 102 V
18 -381 V
18 458 V
18 -247 V
18 211 V
18 -211 V
18 123 V
18 -544 V
36 489 V
18 -489 V
90 0 V
18 0 V
18 0 V
18 334 V
18 -124 V
18 -210 V
18 0 V
54 0 V
36 0 V
17 210 V
18 -210 V
18 0 V
18 210 V
18 -210 V
3024 2315 Box
3150 2315 Box
3168 2525 Box
3186 2315 Box
3221 2315 Box
3239 2315 Box
3275 2315 Box
3293 2525 Box
3311 2736 Box
3329 2315 Box
3365 2315 Box
3383 2315 Box
3401 2649 Box
3419 2315 Box
3437 2649 Box
3455 2315 Box
3473 2315 Box
3491 2736 Box
3509 2525 Box
3527 2525 Box
3545 2736 Box
3563 2525 Box
3581 2736 Box
3599 2525 Box
3617 2859 Box
3635 2947 Box
3653 2804 Box
3671 2947 Box
3688 2649 Box
3706 2983 Box
3724 2906 Box
3742 3117 Box
3760 3044 Box
3778 3359 Box
3796 3378 Box
3814 3527 Box
3832 3727 Box
3850 3785 Box
3868 4053 Box
3886 4485 Box
3940 4500 Box
3958 4060 Box
3976 3828 Box
3994 3676 Box
4012 3504 Box
4030 3349 Box
4048 3176 Box
4066 3268 Box
4084 3094 Box
4102 3138 Box
4120 3015 Box
4138 2859 Box
4156 2804 Box
4173 2906 Box
4191 2525 Box
4209 2983 Box
4227 2736 Box
4245 2947 Box
4263 2736 Box
4281 2859 Box
4299 2315 Box
4335 2804 Box
4353 2315 Box
4443 2315 Box
4461 2315 Box
4479 2315 Box
4497 2649 Box
4515 2525 Box
4533 2315 Box
4551 2315 Box
4605 2315 Box
4641 2315 Box
4658 2525 Box
4676 2315 Box
4694 2315 Box
4712 2525 Box
4730 2315 Box
6594 4067 Box
1.000 UP
1.000 UL
LT4
6311 3927 M
(128) Rshow
6395 3927 M
399 0 V
2429 1949 M
89 0 V
30 0 V
60 0 V
59 211 V
60 123 V
30 -334 V
30 211 V
30 123 V
60 -334 V
59 334 V
30 0 V
30 -334 V
30 422 V
30 -88 V
30 -334 V
30 211 V
29 0 V
30 279 V
30 55 V
30 47 V
30 -47 V
30 0 V
30 0 V
29 87 V
30 -298 V
30 334 V
30 135 V
30 -23 V
30 222 V
30 -62 V
30 182 V
29 195 V
30 128 V
30 158 V
30 272 V
30 560 V
239 13 V
30 -550 V
30 -316 V
29 -156 V
30 -139 V
30 -116 V
30 -192 V
30 -136 V
30 -175 V
30 0 V
30 194 V
29 -372 V
30 313 V
30 -258 V
30 0 V
60 0 V
30 -55 V
30 -68 V
29 -211 V
30 279 V
30 0 V
30 -68 V
30 0 V
30 68 V
30 -490 V
29 0 V
30 0 V
30 211 V
60 -211 V
60 0 V
89 211 V
30 -211 V
60 0 V
60 0 V
30 0 V
29 0 V
60 211 V
90 -211 V
2429 1949 BoxF
2518 1949 BoxF
2548 1949 BoxF
2608 1949 BoxF
2667 2160 BoxF
2727 2283 BoxF
2757 1949 BoxF
2787 2160 BoxF
2817 2283 BoxF
2877 1949 BoxF
2936 2283 BoxF
2966 2283 BoxF
2996 1949 BoxF
3026 2371 BoxF
3056 2283 BoxF
3086 1949 BoxF
3116 2160 BoxF
3145 2160 BoxF
3175 2439 BoxF
3205 2494 BoxF
3235 2541 BoxF
3265 2494 BoxF
3295 2494 BoxF
3325 2494 BoxF
3354 2581 BoxF
3384 2283 BoxF
3414 2617 BoxF
3444 2752 BoxF
3474 2729 BoxF
3504 2951 BoxF
3534 2889 BoxF
3564 3071 BoxF
3593 3266 BoxF
3623 3394 BoxF
3653 3552 BoxF
3683 3824 BoxF
3713 4384 BoxF
3952 4397 BoxF
3982 3847 BoxF
4012 3531 BoxF
4041 3375 BoxF
4071 3236 BoxF
4101 3120 BoxF
4131 2928 BoxF
4161 2792 BoxF
4191 2617 BoxF
4221 2617 BoxF
4251 2811 BoxF
4280 2439 BoxF
4310 2752 BoxF
4340 2494 BoxF
4370 2494 BoxF
4430 2494 BoxF
4460 2439 BoxF
4490 2371 BoxF
4519 2160 BoxF
4549 2439 BoxF
4579 2439 BoxF
4609 2371 BoxF
4639 2371 BoxF
4669 2439 BoxF
4699 1949 BoxF
4728 1949 BoxF
4758 1949 BoxF
4788 2160 BoxF
4848 1949 BoxF
4908 1949 BoxF
4997 2160 BoxF
5027 1949 BoxF
5087 1949 BoxF
5147 1949 BoxF
5177 1949 BoxF
5206 1949 BoxF
5266 2160 BoxF
5356 1949 BoxF
6594 3927 BoxF
1.000 UP
1.000 UL
LT5
6311 3787 M
(64) Rshow
6395 3787 M
399 0 V
2396 1732 M
31 0 V
183 334 V
30 -334 V
92 0 V
30 0 V
31 334 V
30 -334 V
31 0 V
31 0 V
30 421 V
31 68 V
30 -155 V
31 87 V
61 0 V
30 -421 V
31 700 V
30 -155 V
31 47 V
30 -103 V
31 -68 V
30 247 V
31 -76 V
30 -171 V
31 279 V
30 0 V
31 0 V
30 0 V
31 29 V
30 295 V
31 82 V
30 -25 V
31 17 V
30 194 V
31 33 V
30 128 V
31 222 V
30 112 V
31 254 V
30 616 V
123 7 V
30 -603 V
31 -275 V
30 -137 V
31 -179 V
30 -166 V
31 -44 V
30 -131 V
31 -105 V
30 30 V
31 -101 V
30 -224 V
31 0 V
30 0 V
31 -29 V
30 -108 V
31 40 V
30 -40 V
31 -47 V
30 155 V
31 -211 V
30 143 V
31 -87 V
30 0 V
31 -56 V
30 -155 V
31 0 V
30 -334 V
31 334 V
30 -123 V
31 210 V
30 171 V
31 -171 V
30 0 V
31 -87 V
31 -123 V
152 -211 V
31 211 V
91 123 V
31 -334 V
2396 1732 Circle
2427 1732 Circle
2610 2066 Circle
2640 1732 Circle
2732 1732 Circle
2762 1732 Circle
2793 2066 Circle
2823 1732 Circle
2854 1732 Circle
2885 1732 Circle
2915 2153 Circle
2946 2221 Circle
2976 2066 Circle
3007 2153 Circle
3068 2153 Circle
3098 1732 Circle
3129 2432 Circle
3159 2277 Circle
3190 2324 Circle
3220 2221 Circle
3251 2153 Circle
3281 2400 Circle
3312 2324 Circle
3342 2153 Circle
3373 2432 Circle
3403 2432 Circle
3434 2432 Circle
3464 2432 Circle
3495 2461 Circle
3525 2756 Circle
3556 2838 Circle
3586 2813 Circle
3617 2830 Circle
3647 3024 Circle
3678 3057 Circle
3708 3185 Circle
3739 3407 Circle
3769 3519 Circle
3800 3773 Circle
3830 4389 Circle
3953 4396 Circle
3983 3793 Circle
4014 3518 Circle
4044 3381 Circle
4075 3202 Circle
4105 3036 Circle
4136 2992 Circle
4166 2861 Circle
4197 2756 Circle
4227 2786 Circle
4258 2685 Circle
4288 2461 Circle
4319 2461 Circle
4349 2461 Circle
4380 2432 Circle
4410 2324 Circle
4441 2364 Circle
4471 2324 Circle
4502 2277 Circle
4532 2432 Circle
4563 2221 Circle
4593 2364 Circle
4624 2277 Circle
4654 2277 Circle
4685 2221 Circle
4715 2066 Circle
4746 2066 Circle
4776 1732 Circle
4807 2066 Circle
4837 1943 Circle
4868 2153 Circle
4898 2324 Circle
4929 2153 Circle
4959 2153 Circle
4990 2066 Circle
5021 1943 Circle
5173 1732 Circle
5204 1943 Circle
5295 2066 Circle
5326 1732 Circle
6594 3787 Circle
1.000 UP
1.000 UL
LT6
6311 3647 M
(32) Rshow
6395 3647 M
399 0 V
2226 1489 M
34 0 V
34 0 V
34 211 V
34 211 V
34 -88 V
34 -334 V
34 211 V
68 -211 V
33 211 V
34 0 V
34 278 V
68 0 V
34 56 V
34 -211 V
34 298 V
34 -87 V
34 -123 V
34 123 V
34 -56 V
33 267 V
34 -88 V
34 0 V
34 61 V
34 133 V
34 33 V
34 96 V
34 -80 V
34 -32 V
34 250 V
34 -57 V
33 18 V
34 -9 V
34 143 V
34 72 V
34 172 V
34 101 V
34 68 V
34 143 V
34 187 V
34 352 V
34 549 V
271 1 V
34 -538 V
34 -367 V
34 -181 V
34 -152 V
33 -62 V
34 -84 V
34 -207 V
34 -65 V
34 -18 V
34 -193 V
34 96 V
34 -132 V
34 0 V
34 -71 V
34 -115 V
34 146 V
33 -103 V
34 -94 V
34 0 V
34 -61 V
34 32 V
34 -108 V
34 0 V
34 -103 V
34 103 V
34 40 V
34 -87 V
33 -211 V
34 0 V
34 155 V
34 -278 V
34 123 V
34 0 V
34 0 V
34 88 V
34 0 V
34 0 V
34 67 V
34 -155 V
67 -334 V
68 0 V
102 0 V
2226 1489 CircleF
2260 1489 CircleF
2294 1489 CircleF
2328 1700 CircleF
2362 1911 CircleF
2396 1823 CircleF
2430 1489 CircleF
2464 1700 CircleF
2532 1489 CircleF
2565 1700 CircleF
2599 1700 CircleF
2633 1978 CircleF
2701 1978 CircleF
2735 2034 CircleF
2769 1823 CircleF
2803 2121 CircleF
2837 2034 CircleF
2871 1911 CircleF
2905 2034 CircleF
2939 1978 CircleF
2972 2245 CircleF
3006 2157 CircleF
3040 2157 CircleF
3074 2218 CircleF
3108 2351 CircleF
3142 2384 CircleF
3176 2480 CircleF
3210 2400 CircleF
3244 2368 CircleF
3278 2618 CircleF
3312 2561 CircleF
3345 2579 CircleF
3379 2570 CircleF
3413 2713 CircleF
3447 2785 CircleF
3481 2957 CircleF
3515 3058 CircleF
3549 3126 CircleF
3583 3269 CircleF
3617 3456 CircleF
3651 3808 CircleF
3685 4357 CircleF
3956 4358 CircleF
3990 3820 CircleF
4024 3453 CircleF
4058 3272 CircleF
4092 3120 CircleF
4125 3058 CircleF
4159 2974 CircleF
4193 2767 CircleF
4227 2702 CircleF
4261 2684 CircleF
4295 2491 CircleF
4329 2587 CircleF
4363 2455 CircleF
4397 2455 CircleF
4431 2384 CircleF
4465 2269 CircleF
4499 2415 CircleF
4532 2312 CircleF
4566 2218 CircleF
4600 2218 CircleF
4634 2157 CircleF
4668 2189 CircleF
4702 2081 CircleF
4736 2081 CircleF
4770 1978 CircleF
4804 2081 CircleF
4838 2121 CircleF
4872 2034 CircleF
4905 1823 CircleF
4939 1823 CircleF
4973 1978 CircleF
5007 1700 CircleF
5041 1823 CircleF
5075 1823 CircleF
5109 1823 CircleF
5143 1911 CircleF
5177 1911 CircleF
5211 1911 CircleF
5245 1978 CircleF
5279 1823 CircleF
5346 1489 CircleF
5414 1489 CircleF
5516 1489 CircleF
6594 3647 CircleF
1.000 UP
1.000 UL
LT7
6311 3507 M
(16) Rshow
6395 3507 M
399 0 V
1894 1224 M
41 0 V
40 334 V
81 -123 V
41 -211 V
81 211 V
40 123 V
41 -334 V
41 489 V
40 0 V
81 -489 V
41 211 V
40 278 V
41 -278 V
81 123 V
41 -123 V
40 489 V
41 80 V
40 -112 V
41 87 V
40 -55 V
41 -32 V
41 61 V
40 26 V
41 224 V
40 -118 V
41 18 V
40 100 V
41 -84 V
40 168 V
41 -110 V
41 169 V
40 35 V
41 164 V
40 -34 V
41 174 V
40 -46 V
41 -3 V
41 99 V
40 204 V
41 62 V
40 131 V
41 288 V
40 190 V
41 715 V
122 6 V
40 -713 V
41 -204 V
40 -269 V
41 -177 V
40 -33 V
41 -168 V
40 -78 V
41 -44 V
41 -6 V
40 -47 V
41 -76 V
40 -258 V
41 80 V
40 -90 V
41 -58 V
41 0 V
40 36 V
41 -36 V
40 -164 V
41 77 V
40 -247 V
41 97 V
40 -29 V
41 -32 V
41 -123 V
40 -56 V
41 291 V
40 99 V
41 -668 V
40 211 V
41 0 V
40 170 V
41 40 V
41 -298 V
40 155 V
41 -278 V
40 123 V
41 -123 V
40 0 V
82 -211 V
121 334 V
41 -334 V
40 211 V
41 0 V
1894 1224 TriU
1935 1224 TriU
1975 1558 TriU
2056 1435 TriU
2097 1224 TriU
2178 1435 TriU
2218 1558 TriU
2259 1224 TriU
2300 1713 TriU
2340 1713 TriU
2421 1224 TriU
2462 1435 TriU
2502 1713 TriU
2543 1435 TriU
2624 1558 TriU
2665 1435 TriU
2705 1924 TriU
2746 2004 TriU
2786 1892 TriU
2827 1979 TriU
2867 1924 TriU
2908 1892 TriU
2949 1953 TriU
2989 1979 TriU
3030 2203 TriU
3070 2085 TriU
3111 2103 TriU
3151 2203 TriU
3192 2119 TriU
3232 2287 TriU
3273 2177 TriU
3314 2346 TriU
3354 2381 TriU
3395 2545 TriU
3435 2511 TriU
3476 2685 TriU
3516 2639 TriU
3557 2636 TriU
3598 2735 TriU
3638 2939 TriU
3679 3001 TriU
3719 3132 TriU
3760 3420 TriU
3800 3610 TriU
3841 4325 TriU
3963 4331 TriU
4003 3618 TriU
4044 3414 TriU
4084 3145 TriU
4125 2968 TriU
4165 2935 TriU
4206 2767 TriU
4246 2689 TriU
4287 2645 TriU
4328 2639 TriU
4368 2592 TriU
4409 2516 TriU
4449 2258 TriU
4490 2338 TriU
4530 2248 TriU
4571 2190 TriU
4612 2190 TriU
4652 2226 TriU
4693 2190 TriU
4733 2026 TriU
4774 2103 TriU
4814 1856 TriU
4855 1953 TriU
4895 1924 TriU
4936 1892 TriU
4977 1769 TriU
5017 1713 TriU
5058 2004 TriU
5098 2103 TriU
5139 1435 TriU
5179 1646 TriU
5220 1646 TriU
5260 1816 TriU
5301 1856 TriU
5342 1558 TriU
5382 1713 TriU
5423 1435 TriU
5463 1558 TriU
5504 1435 TriU
5544 1435 TriU
5626 1224 TriU
5747 1558 TriU
5788 1224 TriU
5828 1435 TriU
5869 1435 TriU
6594 3507 TriU
1.000 UP
1.000 UL
LT8
6311 3367 M
(8) Rshow
6395 3367 M
399 0 V
1595 972 M
47 334 V
46 0 V
47 -124 V
46 211 V
47 -87 V
46 -124 V
47 334 V
47 88 V
46 -211 V
47 -87 V
46 257 V
47 -381 V
46 334 V
47 124 V
46 0 V
47 32 V
46 -279 V
47 211 V
46 -143 V
47 290 V
46 0 V
47 -79 V
47 -32 V
46 134 V
47 -47 V
46 184 V
47 -14 V
46 -102 V
47 282 V
46 52 V
47 -85 V
46 111 V
47 40 V
46 21 V
47 10 V
47 -5 V
46 63 V
47 16 V
46 109 V
47 111 V
46 -15 V
47 74 V
46 117 V
47 41 V
46 132 V
47 285 V
46 102 V
47 208 V
46 834 V
94 7 V
46 -849 V
47 -199 V
46 -109 V
47 -283 V
46 -93 V
47 -62 V
46 -126 V
47 -48 V
46 19 V
47 -196 V
46 -59 V
47 -79 V
46 -5 V
47 0 V
47 5 V
46 -5 V
47 -81 V
46 -58 V
47 16 V
46 -41 V
47 -185 V
46 0 V
47 107 V
46 -107 V
47 -116 V
46 -24 V
47 47 V
47 -134 V
46 111 V
47 -79 V
46 -68 V
47 -41 V
46 41 V
47 -88 V
46 0 V
47 -55 V
46 0 V
47 55 V
46 -210 V
47 -124 V
46 0 V
47 279 V
47 -489 V
46 544 V
47 -544 V
46 210 V
47 -210 V
46 489 V
1595 972 TriUF
1642 1306 TriUF
1688 1306 TriUF
1735 1182 TriUF
1781 1393 TriUF
1828 1306 TriUF
1874 1182 TriUF
1921 1516 TriUF
1968 1604 TriUF
2014 1393 TriUF
2061 1306 TriUF
2107 1563 TriUF
2154 1182 TriUF
2200 1516 TriUF
2247 1640 TriUF
2293 1640 TriUF
2340 1672 TriUF
2386 1393 TriUF
2433 1604 TriUF
2479 1461 TriUF
2526 1751 TriUF
2572 1751 TriUF
2619 1672 TriUF
2666 1640 TriUF
2712 1774 TriUF
2759 1727 TriUF
2805 1911 TriUF
2852 1897 TriUF
2898 1795 TriUF
2945 2077 TriUF
2991 2129 TriUF
3038 2044 TriUF
3084 2155 TriUF
3131 2195 TriUF
3177 2216 TriUF
3224 2226 TriUF
3271 2221 TriUF
3317 2284 TriUF
3364 2300 TriUF
3410 2409 TriUF
3457 2520 TriUF
3503 2505 TriUF
3550 2579 TriUF
3596 2696 TriUF
3643 2737 TriUF
3689 2869 TriUF
3736 3154 TriUF
3782 3256 TriUF
3829 3464 TriUF
3875 4298 TriUF
3969 4305 TriUF
4015 3456 TriUF
4062 3257 TriUF
4108 3148 TriUF
4155 2865 TriUF
4201 2772 TriUF
4248 2710 TriUF
4294 2584 TriUF
4341 2536 TriUF
4387 2555 TriUF
4434 2359 TriUF
4480 2300 TriUF
4527 2221 TriUF
4573 2216 TriUF
4620 2216 TriUF
4667 2221 TriUF
4713 2216 TriUF
4760 2135 TriUF
4806 2077 TriUF
4853 2093 TriUF
4899 2052 TriUF
4946 1867 TriUF
4992 1867 TriUF
5039 1974 TriUF
5085 1867 TriUF
5132 1751 TriUF
5178 1727 TriUF
5225 1774 TriUF
5272 1640 TriUF
5318 1751 TriUF
5365 1672 TriUF
5411 1604 TriUF
5458 1563 TriUF
5504 1604 TriUF
5551 1516 TriUF
5597 1516 TriUF
5644 1461 TriUF
5690 1461 TriUF
5737 1516 TriUF
5783 1306 TriUF
5830 1182 TriUF
5876 1182 TriUF
5923 1461 TriUF
5970 972 TriUF
6016 1516 TriUF
6063 972 TriUF
6109 1182 TriUF
6156 972 TriUF
6202 1461 TriUF
6594 3367 TriUF
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 3888 721 a
 currentpoint grestore moveto
 3888 721 a 5409 4202 7 3533 v
400 4209 5017 7 v eop
%%Page: 19 19
19 18 bop -242 73 a Fk(Mo)8 b(dels)-104 511 y Fi(\017)86
b Fj(ON/OFF)-104 826 y Fi(\017)g Fj(TCP)-104 1141 y Fi(\017)g
Fj(SOC)-104 1455 y Fi(\017)g Fj(an)-5 b(ything)57 b(fractal)-104
1770 y Fi(\017)86 b Fj(lognormal)60 b(\014le)d(sizes)-104
2085 y Fi(\017)86 b Fj(M/G/1,)57 b(G/G/1,)h(M/P/)p Fi(1)p
Fj(,)g(MMPPs)-242 2749 y Fk(Our)93 b(mo)8 b(del)-104
3188 y Fi(\017)86 b Fj(L)-5 b(\023)-81 b(evy)56 b(requests)-104
3502 y Fi(\017)86 b Fj(c)-5 b(hopp)5 b(ed)55 b(to)i(Ethernet)g(pac)-5
b(k)g(et)56 b(sizes)-104 3817 y Fi(\017)86 b Fj(Going)58
b(in)-5 b(to)58 b(\(in\014n)-5 b(te\))57 b(bu\013er)p
eop
%%Page: 20 20
20 19 bop -104 702 a Fi(\017)86 b Fj(Released)56 b(from)i(net)-5
b(w)g(ork)58 b(\\serv)-5 b(er")-104 1043 y Fi(\017)86
b Fj(W)-14 b(e)56 b(measure)h(the)g(departure)f(ev)-5
b(en)g(ts.)76 b(Similar)60 b(to)e(outgoing)g(net)-5 b(w)g(ork)57
b(tra\016c)h(on)68 1286 y(w)-5 b(ebserv)g(er.)p 190 1571
5437 7 v 190 2654 7 1084 v 248 2603 a @beginspecial 0
@llx 0 @lly 608 @urx 112 @ury 566 @rhi @setspecial
%%BeginDocument: plots2/model.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\cygwin\home\uh\public_html\QUAINT\our-papers\mascot-iee\pictures\model.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 608 112
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 608 112
%AI3_TileBox: 0 0 608 112
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
  0.000 0.000 0.000 1.000 K
1 j
  262.8781 1.9232 m
  460.8481 1.9232 L
  460.8481 109.9833 L
  262.8781 109.9833 L
  262.8781 1.9232 L
F
U
u
0.5000 w
  0.000 0.000 0.000 1.000 K
1 J
  262.8781 1.9232 m
  264.3205 1.9232 L
S
U
u
  0.000 0.000 0.000 1.000 K
  265.7629 1.9232 m
  267.0851 1.9232 L
S
U
u
  268.5275 1.9232 m
  269.9699 1.9232 L
S
U
u
  271.4124 1.9232 m
  272.8548 1.9232 L
S
U
u
  274.2972 1.9232 m
  275.7396 1.9232 L
S
U
u
  277.1820 1.9232 m
  278.6244 1.9232 L
S
U
u
  280.0668 1.9232 m
  281.5092 1.9232 L
S
U
u
  282.9516 1.9232 m
  284.3940 1.9232 L
S
U
u
  285.8364 1.9232 m
  287.2788 1.9232 L
S
U
u
  288.7212 1.9232 m
  290.1636 1.9232 L
S
U
u
  291.6060 1.9232 m
  293.0484 1.9232 L
S
U
u
  294.4908 1.9232 m
  295.9332 1.9232 L
S
U
u
  297.3756 1.9232 m
  298.8180 1.9232 L
S
U
u
  300.2604 1.9232 m
  301.7028 1.9232 L
S
U
u
  303.1452 1.9232 m
  304.5876 1.9232 L
S
U
u
  306.0301 1.9232 m
  307.4725 1.9232 L
S
U
u
  308.9149 1.9232 m
  310.3573 1.9232 L
S
U
u
  311.7997 1.9232 m
  313.2421 1.9232 L
S
U
u
  314.6845 1.9232 m
  316.1269 1.9232 L
S
U
u
  317.5693 1.9232 m
  319.0117 1.9232 L
S
U
u
  320.4541 1.9232 m
  321.8965 1.9232 L
S
U
u
  323.3389 1.9232 m
  324.7813 1.9232 L
S
U
u
  326.2237 1.9232 m
  327.6661 1.9232 L
S
U
u
  329.1085 1.9232 m
  330.5509 1.9232 L
S
U
u
  331.9933 1.9232 m
  333.4357 1.9232 L
S
U
u
  334.8781 1.9232 m
  336.3205 1.9232 L
S
U
u
  337.7629 1.9232 m
  339.2053 1.9232 L
S
U
u
  340.6477 1.9232 m
  341.9699 1.9232 L
S
U
u
  343.4124 1.9232 m
  344.8548 1.9232 L
S
U
u
  346.2972 1.9232 m
  347.7396 1.9232 L
S
U
u
  349.1820 1.9232 m
  350.6244 1.9232 L
S
U
u
  352.0668 1.9232 m
  353.5092 1.9232 L
S
U
u
  354.9516 1.9232 m
  356.3940 1.9232 L
S
U
u
  357.8364 1.9232 m
  359.2788 1.9232 L
S
U
u
  360.7212 1.9232 m
  362.1636 1.9232 L
S
U
u
  363.6060 1.9232 m
  365.0484 1.9232 L
S
U
u
  366.4908 1.9232 m
  367.9332 1.9232 L
S
U
u
  369.3756 1.9232 m
  370.8180 1.9232 L
S
U
u
  372.2604 1.9232 m
  373.7028 1.9232 L
S
U
u
  375.1452 1.9232 m
  376.5876 1.9232 L
S
U
u
  378.0301 1.9232 m
  379.4725 1.9232 L
S
U
u
  380.9149 1.9232 m
  382.3573 1.9232 L
S
U
u
  383.7997 1.9232 m
  385.2421 1.9232 L
S
U
u
  386.6845 1.9232 m
  388.1269 1.9232 L
S
U
u
  389.5693 1.9232 m
  391.0117 1.9232 L
S
U
u
  392.4541 1.9232 m
  393.8965 1.9232 L
S
U
u
  395.3389 1.9232 m
  396.7813 1.9232 L
S
U
u
  398.2237 1.9232 m
  399.6661 1.9232 L
S
U
u
  401.1085 1.9232 m
  402.5509 1.9232 L
S
U
u
  403.9933 1.9232 m
  405.4357 1.9232 L
S
U
u
  406.8781 1.9232 m
  408.3205 1.9232 L
S
U
u
  409.7629 1.9232 m
  411.2053 1.9232 L
S
U
u
  412.6477 1.9232 m
  414.0902 1.9232 L
S
U
u
  415.5326 1.9232 m
  416.9750 1.9232 L
S
U
u
  418.2972 1.9232 m
  419.7396 1.9232 L
S
U
u
  421.1820 1.9232 m
  422.6244 1.9232 L
S
U
u
  424.0668 1.9232 m
  425.5092 1.9232 L
S
U
u
  426.9516 1.9232 m
  428.3940 1.9232 L
S
U
u
  429.8364 1.9232 m
  431.2788 1.9232 L
S
U
u
  432.7212 1.9232 m
  434.1636 1.9232 L
S
U
u
  435.6060 1.9232 m
  437.0484 1.9232 L
S
U
u
  438.4908 1.9232 m
  439.9332 1.9232 L
S
U
u
  441.3756 1.9232 m
  442.8180 1.9232 L
S
U
u
  444.2604 1.9232 m
  445.7028 1.9232 L
S
U
u
  447.1452 1.9232 m
  448.5876 1.9232 L
S
U
u
  450.0301 1.9232 m
  451.4725 1.9232 L
S
U
u
  452.9149 1.9232 m
  454.3573 1.9232 L
S
U
u
  455.7997 1.9232 m
  457.2421 1.9232 L
S
U
u
  458.6845 1.9232 m
  460.1269 1.9232 L
S
U
u
  460.8481 2.6444 m
  460.8481 4.0868 L
S
U
u
  460.8481 5.5292 m
  460.8481 6.9716 L
S
U
u
  460.8481 8.4140 m
  460.8481 9.8564 L
S
U
u
  460.8481 11.2988 m
  460.8481 12.7412 L
S
U
u
  460.8481 14.1836 m
  460.8481 15.6260 L
S
U
u
  460.8481 17.0684 m
  460.8481 18.5109 L
S
U
u
  460.8481 19.9533 m
  460.8481 21.3957 L
S
U
u
  460.8481 22.8381 m
  460.8481 24.2805 L
S
U
u
  460.8481 25.7229 m
  460.8481 27.1653 L
S
U
u
  460.8481 28.6077 m
  460.8481 30.0501 L
S
U
u
  460.8481 31.4925 m
  460.8481 32.9349 L
S
U
u
  460.8481 34.3773 m
  460.8481 35.8197 L
S
U
u
  460.8481 37.2621 m
  460.8481 38.7045 L
S
U
u
  460.8481 40.1469 m
  460.8481 41.5893 L
S
U
u
  460.8481 43.0317 m
  460.8481 44.4741 L
S
U
u
  460.8481 45.9165 m
  460.8481 47.3589 L
S
U
u
  460.8481 48.8013 m
  460.8481 50.2437 L
S
U
u
  460.8481 51.6861 m
  460.8481 53.1285 L
S
U
u
  460.8481 54.5710 m
  460.8481 56.0134 L
S
U
u
  460.8481 57.4558 m
  460.8481 58.8982 L
S
U
u
  460.8481 60.3406 m
  460.8481 61.7830 L
S
U
u
  460.8481 63.2254 m
  460.8481 64.6678 L
S
U
u
  460.8481 66.1102 m
  460.8481 67.5526 L
S
U
u
  460.8481 68.9950 m
  460.8481 70.4374 L
S
U
u
  460.8481 71.8798 m
  460.8481 73.3222 L
S
U
u
  460.8481 74.6444 m
  460.8481 76.0868 L
S
U
u
  460.8481 77.5292 m
  460.8481 78.9716 L
S
U
u
  460.8481 80.4140 m
  460.8481 81.8564 L
S
U
u
  460.8481 83.2988 m
  460.8481 84.7412 L
S
U
u
  460.8481 86.1836 m
  460.8481 87.6260 L
S
U
u
  460.8481 89.0684 m
  460.8481 90.5109 L
S
U
u
  460.8481 91.9533 m
  460.8481 93.3957 L
S
U
u
  460.8481 94.8381 m
  460.8481 96.2805 L
S
U
u
  460.8481 97.7229 m
  460.8481 99.1653 L
S
U
u
  460.8481 100.6077 m
  460.8481 102.0501 L
S
U
u
  460.8481 103.4925 m
  460.8481 104.9349 L
S
U
u
  460.8481 106.3773 m
  460.8481 107.8197 L
S
U
u
  460.8481 109.2621 m
  460.8481 109.9833 L
S
U
u
  460.8481 109.9833 m
  460.1269 109.9833 L
S
U
u
  458.6845 109.9833 m
  457.2421 109.9833 L
S
U
u
  455.7997 109.9833 m
  454.3573 109.9833 L
S
U
u
  452.9149 109.9833 m
  451.4725 109.9833 L
S
U
u
  450.0301 109.9833 m
  448.5876 109.9833 L
S
U
u
  447.1452 109.9833 m
  445.7028 109.9833 L
S
U
u
  444.2604 109.9833 m
  442.8180 109.9833 L
S
U
u
  441.3756 109.9833 m
  439.9332 109.9833 L
S
U
u
  438.4908 109.9833 m
  437.0484 109.9833 L
S
U
u
  435.6060 109.9833 m
  434.1636 109.9833 L
S
U
u
  432.7212 109.9833 m
  431.2788 109.9833 L
S
U
u
  429.8364 109.9833 m
  428.3940 109.9833 L
S
U
u
  426.9516 109.9833 m
  425.5092 109.9833 L
S
U
u
  424.0668 109.9833 m
  422.6244 109.9833 L
S
U
u
  421.1820 109.9833 m
  419.7396 109.9833 L
S
U
u
  418.2972 109.9833 m
  416.9750 109.9833 L
S
U
u
  415.5326 109.9833 m
  414.0902 109.9833 L
S
U
u
  412.6477 109.9833 m
  411.2053 109.9833 L
S
U
u
  409.7629 109.9833 m
  408.3205 109.9833 L
S
U
u
  406.8781 109.9833 m
  405.4357 109.9833 L
S
U
u
  403.9933 109.9833 m
  402.5509 109.9833 L
S
U
u
  401.1085 109.9833 m
  399.6661 109.9833 L
S
U
u
  398.2237 109.9833 m
  396.7813 109.9833 L
S
U
u
  395.3389 109.9833 m
  393.8965 109.9833 L
S
U
u
  392.4541 109.9833 m
  391.0117 109.9833 L
S
U
u
  389.5693 109.9833 m
  388.1269 109.9833 L
S
U
u
  386.6845 109.9833 m
  385.2421 109.9833 L
S
U
u
  383.7997 109.9833 m
  382.3573 109.9833 L
S
U
u
  380.9149 109.9833 m
  379.4725 109.9833 L
S
U
u
  378.0301 109.9833 m
  376.5876 109.9833 L
S
U
u
  375.1452 109.9833 m
  373.7028 109.9833 L
S
U
u
  372.2604 109.9833 m
  370.8180 109.9833 L
S
U
u
  369.3756 109.9833 m
  367.9332 109.9833 L
S
U
u
  366.4908 109.9833 m
  365.0484 109.9833 L
S
U
u
  363.6060 109.9833 m
  362.1636 109.9833 L
S
U
u
  360.7212 109.9833 m
  359.2788 109.9833 L
S
U
u
  357.8364 109.9833 m
  356.3940 109.9833 L
S
U
u
  354.9516 109.9833 m
  353.5092 109.9833 L
S
U
u
  352.0668 109.9833 m
  350.6244 109.9833 L
S
U
u
  349.1820 109.9833 m
  347.7396 109.9833 L
S
U
u
  346.2972 109.9833 m
  344.8548 109.9833 L
S
U
u
  343.4124 109.9833 m
  341.9699 109.9833 L
S
U
u
  340.6477 109.9833 m
  339.2053 109.9833 L
S
U
u
  337.7629 109.9833 m
  336.3205 109.9833 L
S
U
u
  334.8781 109.9833 m
  333.4357 109.9833 L
S
U
u
  331.9933 109.9833 m
  330.5509 109.9833 L
S
U
u
  329.1085 109.9833 m
  327.6661 109.9833 L
S
U
u
  326.2237 109.9833 m
  324.7813 109.9833 L
S
U
u
  323.3389 109.9833 m
  321.8965 109.9833 L
S
U
u
  320.4541 109.9833 m
  319.0117 109.9833 L
S
U
u
  317.5693 109.9833 m
  316.1269 109.9833 L
S
U
u
  314.6845 109.9833 m
  313.2421 109.9833 L
S
U
u
  311.7997 109.9833 m
  310.3573 109.9833 L
S
U
u
  308.9149 109.9833 m
  307.4725 109.9833 L
S
U
u
  306.0301 109.9833 m
  304.5876 109.9833 L
S
U
u
  303.1452 109.9833 m
  301.7028 109.9833 L
S
U
u
  300.2604 109.9833 m
  298.8180 109.9833 L
S
U
u
  297.3756 109.9833 m
  295.9332 109.9833 L
S
U
u
  294.4908 109.9833 m
  293.0484 109.9833 L
S
U
u
  291.6060 109.9833 m
  290.1636 109.9833 L
S
U
u
  288.7212 109.9833 m
  287.2788 109.9833 L
S
U
u
  285.8364 109.9833 m
  284.3940 109.9833 L
S
U
u
  282.9516 109.9833 m
  281.5092 109.9833 L
S
U
u
  280.0668 109.9833 m
  278.6244 109.9833 L
S
U
u
  277.1820 109.9833 m
  275.7396 109.9833 L
S
U
u
  274.2972 109.9833 m
  272.8548 109.9833 L
S
U
u
  271.4124 109.9833 m
  269.9699 109.9833 L
S
U
u
  268.5275 109.9833 m
  267.0851 109.9833 L
S
U
u
  265.7629 109.9833 m
  264.3205 109.9833 L
S
U
u
  262.8781 109.9833 m
  262.8781 108.5409 L
S
U
u
  262.8781 107.0985 m
  262.8781 105.6561 L
S
U
u
  262.8781 104.2137 m
  262.8781 102.7713 L
S
U
u
  262.8781 101.3289 m
  262.8781 99.8865 L
S
U
u
  262.8781 98.4441 m
  262.8781 97.0017 L
S
U
u
  262.8781 95.5593 m
  262.8781 94.1169 L
S
U
u
  262.8781 92.6745 m
  262.8781 91.2321 L
S
U
u
  262.8781 89.7896 m
  262.8781 88.3472 L
S
U
u
  262.8781 86.9048 m
  262.8781 85.4624 L
S
U
u
  262.8781 84.0200 m
  262.8781 82.5776 L
S
U
u
  262.8781 81.1352 m
  262.8781 79.6928 L
S
U
u
  262.8781 78.2504 m
  262.8781 76.8080 L
S
U
u
  262.8781 75.3656 m
  262.8781 73.9232 L
S
U
u
  262.8781 72.6010 m
  262.8781 71.1586 L
S
U
u
  262.8781 69.7162 m
  262.8781 68.2738 L
S
U
u
  262.8781 66.8314 m
  262.8781 65.3890 L
S
U
u
  262.8781 63.9466 m
  262.8781 62.5042 L
S
U
u
  262.8781 61.0618 m
  262.8781 59.6194 L
S
U
u
  262.8781 58.1770 m
  262.8781 56.7346 L
S
U
u
  262.8781 55.2922 m
  262.8781 53.8497 L
S
U
u
  262.8781 52.4073 m
  262.8781 50.9649 L
S
U
u
  262.8781 49.5225 m
  262.8781 48.0801 L
S
U
u
  262.8781 46.6377 m
  262.8781 45.1953 L
S
U
u
  262.8781 43.7529 m
  262.8781 42.3105 L
S
U
u
  262.8781 40.8681 m
  262.8781 39.4257 L
S
U
u
  262.8781 37.9833 m
  262.8781 36.5409 L
S
U
u
  262.8781 35.0985 m
  262.8781 33.6561 L
S
U
u
  262.8781 32.2137 m
  262.8781 30.7713 L
S
U
u
  262.8781 29.3289 m
  262.8781 27.8865 L
S
U
u
  262.8781 26.4441 m
  262.8781 25.0017 L
S
U
u
  262.8781 23.5593 m
  262.8781 22.1169 L
S
U
u
  262.8781 20.6745 m
  262.8781 19.2321 L
S
U
u
  262.8781 17.7896 m
  262.8781 16.3472 L
S
U
u
  262.8781 14.9048 m
  262.8781 13.4624 L
S
U
u
  262.8781 12.0200 m
  262.8781 10.5776 L
S
U
u
  262.8781 9.1352 m
  262.8781 7.6928 L
S
U
u
  262.8781 6.2504 m
  262.8781 4.8080 L
S
U
u
  262.8781 3.3656 m
  262.8781 1.9232 L
S
U
u
  0.000 0.000 0.000 0.000 k
2.0000 w
  0.000 0.000 0.000 1.000 K
  55.7730 10.9382 m
  127.7730 10.9382 L
  127.7730 46.9983 L
  55.7730 46.9983 L
  55.7730 10.9382 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  145.8030 10.9382 m
  190.7579 10.9382 L
  190.7579 46.9983 L
  145.8030 46.9983 L
  145.8030 10.9382 L
B
U
u
  0.000 0.000 0.000 0.000 k
  217.8030 10.9382 m
  235.8331 10.9382 L
  235.8331 46.9983 L
  217.8030 46.9983 L
  217.8030 10.9382 L
B
U
u
  0.000 0.000 0.000 0.000 k
0.5000 w
  0.000 0.000 0.000 1.000 K
  271.7730 10.9382 m
  415.8932 10.9382 L
  415.8932 46.9983 L
  271.7730 46.9983 L
  271.7730 10.9382 L
B
U
u
  0.000 0.000 0.000 0.000 k
  469.8631 10.9382 m
  478.8781 10.9382 L
  478.8781 46.9983 L
  469.8631 46.9983 L
  469.8631 10.9382 L
B
U
u
  0.000 0.000 0.000 0.000 k
  487.8932 10.9382 m
  496.7880 10.9382 L
  496.7880 46.9983 L
  487.8932 46.9983 L
  487.8932 10.9382 L
B
U
u
  0.000 0.000 0.000 0.000 k
  505.8030 10.9382 m
  514.8180 10.9382 L
  514.8180 46.9983 L
  505.8030 46.9983 L
  505.8030 10.9382 L
B
U
u
  0.000 0.000 0.000 0.000 k
  541.8631 10.9382 m
  550.8781 10.9382 L
  550.8781 46.9983 L
  541.8631 46.9983 L
  541.8631 10.9382 L
B
U
u
  0.000 0.000 0.000 0.000 k
  451.8331 28.9683 m
  451.5927 31.8531 L
  450.9917 34.6177 L
  449.7896 37.3823 L
  448.2270 39.7863 L
  446.3038 41.9499 L
  444.1402 43.7529 L
  441.6160 45.3155 L
  438.8514 46.2771 L
  435.9666 46.8781 L
  433.0818 46.9983 L
  430.1970 46.6377 L
  427.4324 45.7963 L
  424.7880 44.5943 L
  422.3840 42.9115 L
  420.3406 40.8681 L
  418.6578 38.5843 L
  417.3356 36.0601 L
  416.4942 33.2955 L
  416.0134 30.4107 L
  416.0134 27.5259 L
  416.4942 24.6411 L
  417.3356 21.8765 L
  418.6578 19.3523 L
  420.3406 16.9482 L
  422.3840 15.0250 L
  424.7880 13.3422 L
  427.4324 12.1402 L
  430.1970 11.2988 L
  433.0818 10.9382 L
  435.9666 11.0584 L
  438.8514 11.6594 L
  441.6160 12.6210 L
  444.1402 14.1836 L
  446.3038 15.9866 L
  448.2270 18.1503 L
  449.7896 20.5543 L
  450.9917 23.1987 L
  451.5927 26.0835 L
  451.8331 28.9683 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 425.1486 21.7563 0 Tp
TP
/_Helvetica 24.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(N\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
0.5000 w
  0.000 0.000 0.000 1.000 K
1 j
  64.7880 46.9983 m
  64.7880 10.9382 L
S
U
u
  0.000 0.000 0.000 1.000 K
  73.8030 46.9983 m
  73.8030 10.9382 L
S
U
u
  82.8180 46.9983 m
  82.8180 10.9382 L
S
U
u
  91.8331 46.9983 m
  91.8331 10.9382 L
S
U
u
  100.8481 46.9983 m
  100.8481 10.9382 L
S
U
u
  109.8631 46.9983 m
  109.8631 10.9382 L
S
U
u
  118.7579 46.9983 m
  118.7579 10.9382 L
S
U
u
  154.8180 46.9983 m
  154.8180 10.9382 L
S
U
u
  163.8331 46.9983 m
  163.8331 10.9382 L
S
U
u
  172.8481 46.9983 m
  172.8481 10.9382 L
S
U
u
  181.8631 46.9983 m
  181.8631 10.9382 L
S
U
u
  226.8180 46.9983 m
  226.8180 10.9382 L
S
U
u
  280.7880 46.9983 m
  280.7880 10.9382 L
S
U
u
  289.8030 46.9983 m
  289.8030 10.9382 L
S
U
u
  298.8180 46.9983 m
  298.8180 10.9382 L
S
U
u
  307.8331 46.9983 m
  307.8331 10.9382 L
S
U
u
2.0000 w
  0.000 0.000 0.000 1.000 K
  316.8481 46.9983 m
  316.8481 10.9382 L
S
U
u
0.5000 w
  0.000 0.000 0.000 1.000 K
  334.8781 46.9983 m
  325.8631 46.9983 L
  325.8631 10.9382 L
S
U
u
  334.8781 46.9983 m
  334.8781 10.9382 L
S
U
u
  343.7730 46.9983 m
  343.7730 10.9382 L
S
U
u
  352.7880 46.9983 m
  352.7880 10.9382 L
S
U
u
  361.8030 46.9983 m
  361.8030 10.9382 L
S
U
u
  370.8180 46.9983 m
  370.8180 10.9382 L
S
U
u
  379.8331 46.9983 m
  379.8331 10.9382 L
S
U
u
2.0000 w
  0.000 0.000 0.000 1.000 K
  388.8481 46.9983 m
  388.8481 10.9382 L
S
U
u
0.5000 w
  0.000 0.000 0.000 1.000 K
  397.8631 46.9983 m
  397.8631 10.9382 L
S
U
u
  406.8781 46.9983 m
  406.8781 10.9382 L
S
U
u
  1.8030 28.9683 m
  55.7730 28.9683 L
S
U
u
  0.000 0.000 0.000 1.000 K
  127.7730 28.9683 m
  145.8030 28.9683 L
S
U
u
  190.7579 28.9683 m
  217.8030 28.9683 L
S
U
u
  235.8331 28.9683 m
  271.7730 28.9683 L
S
U
u
  451.8331 28.9683 m
  469.8631 28.9683 L
S
U
u
  478.8781 28.9683 m
  487.8932 28.9683 L
S
U
u
  496.7880 28.9683 m
  505.8030 28.9683 L
S
U
u
  514.8180 28.9683 m
  541.8631 28.9683 L
S
U
u
  550.8781 28.9683 m
  568.9082 28.9683 L
S
U
u
  55.7730 65.0284 m
  127.7730 65.0284 L
S
U
u
  0.000 0.000 0.000 1.000 K
  59.0184 68.2738 m
  55.7730 65.0284 L
  59.0184 61.7830 L
S
U
u
  0.000 0.000 0.000 1.000 K
  124.5275 61.7830 m
  127.7730 65.0284 L
  124.5275 68.2738 L
S
U
u
  0.000 0.000 0.000 1.000 K
  190.7579 65.0284 m
  217.8030 65.0284 L
S
U
u
  0.000 0.000 0.000 1.000 K
  194.0033 68.2738 m
  190.7579 65.0284 L
  194.0033 61.7830 L
S
U
u
  0.000 0.000 0.000 1.000 K
  214.5576 61.7830 m
  217.8030 65.0284 L
  214.5576 68.2738 L
S
U
u
  0.000 0.000 0.000 1.000 K
  271.7730 65.0284 m
  415.8932 65.0284 L
S
U
u
  0.000 0.000 0.000 1.000 K
  275.0184 68.2738 m
  271.7730 65.0284 L
  275.0184 61.7830 L
S
U
u
  0.000 0.000 0.000 1.000 K
  412.6477 61.7830 m
  415.8932 65.0284 L
  412.6477 68.2738 L
S
U
u
  0.000 0.000 0.000 1.000 K
  469.8631 65.0284 m
  478.8781 65.0284 L
S
U
u
  0.000 0.000 0.000 1.000 K
  473.1085 68.2738 m
  469.8631 65.0284 L
  473.1085 61.7830 L
S
U
u
  0.000 0.000 0.000 1.000 K
  475.6327 61.7830 m
  478.8781 65.0284 L
  475.6327 68.2738 L
S
U
u
  0.000 0.000 0.000 1.000 K
  496.7880 65.0284 m
  505.8030 65.0284 L
S
U
u
  0.000 0.000 0.000 1.000 K
  500.0334 68.2738 m
  496.7880 65.0284 L
  500.0334 61.7830 L
S
U
u
  0.000 0.000 0.000 1.000 K
  502.5576 61.7830 m
  505.8030 65.0284 L
  502.5576 68.2738 L
S
U
u
  0.000 0.000 0.000 1.000 K
  514.8180 65.0284 m
  541.8631 65.0284 L
S
U
u
  0.000 0.000 0.000 1.000 K
  518.0634 68.2738 m
  514.8180 65.0284 L
  518.0634 61.7830 L
S
U
u
  0.000 0.000 0.000 1.000 K
  538.6177 61.7830 m
  541.8631 65.0284 L
  538.6177 68.2738 L
S
U
u
  0.000 0.000 0.000 1.000 K
  145.8030 65.0284 m
  154.8180 65.0284 L
S
U
u
  0.000 0.000 0.000 1.000 K
  149.0484 68.2738 m
  145.8030 65.0284 L
  149.0484 61.7830 L
S
U
u
  0.000 0.000 0.000 1.000 K
  151.5726 61.7830 m
  154.8180 65.0284 L
  151.5726 68.2738 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 80.1736 83.7796 0 Tp
TP
/_Helvetica 24.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(L\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 142.7980 83.7796 0 Tp
TP
/_Helvetica 24.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(B\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 196.7679 83.7796 0 Tp
TP
/_Helvetica 24.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(E\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 465.8965 81.2554 0 Tp
TP
/_Helvetica 24.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(B\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 498.2304 82.6978 0 Tp
TP
/_Helvetica 24.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(I\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 522.6311 82.4574 0 Tp
TP
/_Helvetica 24.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(S\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 330.5509 83.7796 0 Tp
TP
/_Helvetica 24.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Q\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 5619 2654 V 190 2661 5437 7 v 2127 3041
a(Figure)58 b(3:)77 b(The)56 b(mo)5 b(del)p eop
%%Page: 21 21
21 20 bop -90 189 5997 7 v -90 4408 7 4219 v -32 241
a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 -32 241 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 3401 @rhi @setspecial
%%BeginDocument: plots2/density-sparse.ps
%!PS-Adobe-2.0
%%Title: density-sparse.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Tue Mar 18 16:16:38 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
882 420 M
6080 0 V
1.000 UL
LTb
882 420 M
63 0 V
6017 0 R
-63 0 V
798 420 M
(1e-14) Rshow
882 738 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 1056 M
6080 0 V
1.000 UL
LTb
882 1056 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-12) Rshow
882 1374 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 1692 M
6080 0 V
1.000 UL
LTb
882 1692 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-10) Rshow
882 2010 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 2328 M
6080 0 V
1.000 UL
LTb
882 2328 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-08) Rshow
882 2646 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 2964 M
6080 0 V
1.000 UL
LTb
882 2964 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1e-06) Rshow
882 3282 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 3600 M
6080 0 V
1.000 UL
LTb
882 3600 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.0001) Rshow
882 3918 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 4236 M
6080 0 V
1.000 UL
LTb
882 4236 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(0.01) Rshow
882 4554 M
31 0 V
6049 0 R
-31 0 V
1.000 UL
LTa
882 4872 M
6080 0 V
1.000 UL
LTb
882 4872 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
(1) Rshow
1.000 UL
LTa
882 420 M
0 4452 V
1.000 UL
LTb
882 420 M
0 63 V
0 4389 R
0 -63 V
882 280 M
(0.1) Cshow
1085 420 M
0 31 V
0 4421 R
0 -31 V
1354 420 M
0 31 V
0 4421 R
0 -31 V
1492 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
1558 420 M
0 4452 V
1.000 UL
LTb
1558 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1) Cshow
1761 420 M
0 31 V
0 4421 R
0 -31 V
2030 420 M
0 31 V
0 4421 R
0 -31 V
2168 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
2233 420 M
0 4452 V
1.000 UL
LTb
2233 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(10) Cshow
2436 420 M
0 31 V
0 4421 R
0 -31 V
2705 420 M
0 31 V
0 4421 R
0 -31 V
2843 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
2909 420 M
0 4452 V
1.000 UL
LTb
2909 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(100) Cshow
3112 420 M
0 31 V
0 4421 R
0 -31 V
3381 420 M
0 31 V
0 4421 R
0 -31 V
3519 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
3584 420 M
0 4452 V
1.000 UL
LTb
3584 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1000) Cshow
3788 420 M
0 31 V
0 4421 R
0 -31 V
4056 420 M
0 31 V
0 4421 R
0 -31 V
4194 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
4260 420 M
0 4452 V
1.000 UL
LTb
4260 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(10000) Cshow
4463 420 M
0 31 V
0 4421 R
0 -31 V
4732 420 M
0 31 V
0 4421 R
0 -31 V
4870 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
4935 420 M
0 4452 V
1.000 UL
LTb
4935 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(100000) Cshow
5139 420 M
0 31 V
0 4421 R
0 -31 V
5408 420 M
0 31 V
0 4421 R
0 -31 V
5545 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
5611 420 M
0 3829 V
0 560 R
0 63 V
1.000 UL
LTb
5611 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1e+06) Cshow
5814 420 M
0 31 V
0 4421 R
0 -31 V
6083 420 M
0 31 V
0 4421 R
0 -31 V
6221 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6286 420 M
0 3829 V
0 560 R
0 63 V
1.000 UL
LTb
6286 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1e+07) Cshow
6490 420 M
0 31 V
0 4421 R
0 -31 V
6759 420 M
0 31 V
0 4421 R
0 -31 V
6897 420 M
0 31 V
0 4421 R
0 -31 V
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1e+08) Cshow
1.000 UL
LTb
882 420 M
6080 0 V
0 4452 V
-6080 0 V
882 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Probability density) Cshow
grestore
3922 70 M
(Request size in bytes) Cshow
1.000 UL
LT0
6311 4739 M
(alpha = 2.0) Rshow
6395 4739 M
399 0 V
1398 2848 M
225 254 V
87 55 V
43 -117 V
44 298 V
43 -116 V
44 75 V
43 -7 V
43 109 V
44 -107 V
43 71 V
43 46 V
44 -15 V
43 1 V
43 26 V
44 39 V
43 -3 V
43 37 V
44 17 V
43 -1 V
44 11 V
43 9 V
43 31 V
44 6 V
43 19 V
43 16 V
44 18 V
43 10 V
43 13 V
44 12 V
43 16 V
43 11 V
44 10 V
43 14 V
44 11 V
43 10 V
43 10 V
44 9 V
43 10 V
43 6 V
44 5 V
43 5 V
43 3 V
44 2 V
43 -1 V
43 -3 V
44 -7 V
43 -8 V
44 -13 V
43 -17 V
43 -21 V
44 -25 V
43 -32 V
43 -35 V
44 -42 V
43 -45 V
43 -51 V
44 -53 V
43 -57 V
43 -58 V
44 -60 V
43 -57 V
44 -60 V
43 -61 V
43 -65 V
44 -56 V
43 -65 V
43 -56 V
44 -64 V
43 -57 V
43 -70 V
44 -56 V
43 -62 V
43 -54 V
44 -72 V
43 -67 V
44 -56 V
43 -73 V
43 -55 V
44 -35 V
43 -93 V
43 -64 V
44 -73 V
43 -37 V
43 -80 V
44 5 V
43 -132 V
44 23 V
43 -160 V
43 57 V
87 -158 V
43 -76 V
44 -21 V
43 -116 V
43 -20 V
44 -21 V
1.000 UL
LT1
6311 4599 M
(alpha = 1.5) Rshow
6395 4599 M
399 0 V
1402 3164 M
228 253 V
47 -10 V
48 -11 V
47 22 V
48 44 V
47 -18 V
48 -27 V
47 73 V
48 -34 V
47 36 V
48 20 V
47 1 V
48 9 V
47 13 V
48 18 V
47 6 V
48 23 V
47 0 V
48 11 V
47 7 V
48 8 V
47 22 V
48 6 V
47 11 V
47 11 V
48 12 V
47 12 V
48 15 V
47 8 V
48 8 V
47 12 V
48 7 V
47 11 V
48 9 V
47 7 V
48 8 V
47 8 V
48 5 V
47 4 V
48 2 V
47 0 V
48 -4 V
47 -6 V
48 -12 V
47 -17 V
48 -23 V
47 -30 V
48 -37 V
47 -46 V
48 -51 V
47 -56 V
48 -59 V
47 -62 V
48 -62 V
47 -60 V
48 -59 V
47 -60 V
48 -61 V
47 -59 V
48 -58 V
47 -57 V
48 -58 V
47 -58 V
48 -59 V
47 -50 V
48 -55 V
47 -62 V
48 -53 V
47 -61 V
47 -48 V
48 -63 V
47 -56 V
48 -49 V
47 -60 V
48 -50 V
47 -61 V
48 -82 V
47 -28 V
48 -58 V
47 -47 V
48 -64 V
47 -44 V
48 -49 V
47 -97 V
48 -43 V
47 -1 V
48 -84 V
95 -196 V
47 73 V
48 -118 V
95 -45 V
95 -44 V
47 -23 V
95 -196 V
1.000 UL
LT2
6311 4459 M
(alpha = 1.0) Rshow
6395 4459 M
399 0 V
1402 3541 M
228 254 V
48 9 V
48 4 V
47 -10 V
48 11 V
48 -8 V
48 1 V
47 -1 V
48 2 V
48 -4 V
48 4 V
47 1 V
48 2 V
48 -1 V
47 -3 V
48 -1 V
48 -5 V
48 4 V
47 3 V
48 -4 V
48 6 V
48 -5 V
47 0 V
48 4 V
48 0 V
48 -2 V
47 0 V
48 -1 V
48 0 V
48 0 V
47 -2 V
48 0 V
48 -1 V
48 -1 V
47 -2 V
48 -2 V
48 -4 V
47 -4 V
48 -7 V
48 -7 V
48 -9 V
47 -14 V
48 -15 V
48 -20 V
48 -23 V
47 -26 V
48 -30 V
48 -33 V
48 -35 V
47 -38 V
48 -40 V
48 -41 V
48 -42 V
47 -42 V
48 -43 V
48 -44 V
47 -44 V
48 -46 V
48 -44 V
48 -43 V
47 -46 V
48 -46 V
48 -42 V
48 -46 V
47 -44 V
48 -44 V
48 -50 V
48 -44 V
47 -44 V
48 -44 V
48 -49 V
48 -39 V
47 -50 V
48 -41 V
48 -46 V
48 -42 V
47 -45 V
48 -55 V
48 -43 V
47 -43 V
48 -34 V
48 -52 V
48 -49 V
47 -43 V
48 -39 V
48 -56 V
48 -27 V
47 -53 V
48 -28 V
48 -60 V
48 -38 V
47 -88 V
48 -17 V
48 -17 V
48 -90 V
47 -68 V
48 -3 V
48 -34 V
48 -38 V
1.000 UL
LT3
6311 4319 M
(alpha = 0.5) Rshow
6395 4319 M
399 0 V
1402 4037 M
228 241 V
48 -17 V
48 -6 V
48 -14 V
47 -11 V
48 -9 V
48 -12 V
48 -14 V
48 -10 V
47 -13 V
48 -14 V
48 -9 V
48 -11 V
47 -14 V
48 -13 V
48 -12 V
48 -14 V
48 -12 V
47 -13 V
48 -14 V
48 -14 V
48 -15 V
48 -12 V
47 -15 V
48 -15 V
48 -16 V
48 -15 V
47 -17 V
48 -17 V
48 -18 V
48 -18 V
48 -18 V
47 -19 V
48 -20 V
48 -21 V
48 -20 V
48 -23 V
47 -21 V
48 -21 V
48 -23 V
48 -24 V
47 -25 V
48 -24 V
48 -25 V
48 -26 V
48 -26 V
47 -26 V
48 -26 V
48 -28 V
48 -27 V
48 -28 V
47 -29 V
48 -27 V
48 -30 V
48 -28 V
48 -31 V
47 -27 V
48 -31 V
48 -32 V
48 -28 V
47 -31 V
48 -31 V
48 -31 V
48 -33 V
48 -30 V
47 -32 V
48 -31 V
48 -33 V
48 -30 V
48 -33 V
47 -31 V
48 -32 V
48 -34 V
48 -30 V
47 -35 V
48 -27 V
48 -39 V
48 -31 V
48 -31 V
47 -36 V
48 -29 V
48 -37 V
48 -33 V
48 -34 V
47 -32 V
48 -26 V
48 -39 V
48 -32 V
48 -33 V
47 -30 V
48 -33 V
48 -37 V
48 -28 V
47 -42 V
48 -28 V
48 -31 V
48 -41 V
48 -32 V
47 -26 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 4084 241 a
 currentpoint grestore moveto
 4084 241 a 5899 4408 7 4219 v
-90 4415 5997 7 v 1598 4756 a Fj(Figure)58 b(4:)77 b(Request)55
b(size)i(distribution)p eop
%%Page: 22 22
22 21 bop -90 189 5997 7 v -90 4408 7 4219 v -32 241
a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 -32 241 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 3401 @rhi @setspecial
%%BeginDocument: plots2/iat.ps
%!PS-Adobe-2.0
%%Title: ita.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Tue Mar 18 11:35:24 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
630 420 M
6332 0 V
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
546 420 M
(-12) Rshow
1.000 UL
LTa
630 825 M
6332 0 V
1.000 UL
LTb
630 825 M
63 0 V
6269 0 R
-63 0 V
546 825 M
(-11) Rshow
1.000 UL
LTa
630 1229 M
6332 0 V
1.000 UL
LTb
630 1229 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-10) Rshow
1.000 UL
LTa
630 1634 M
6332 0 V
1.000 UL
LTb
630 1634 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-9) Rshow
1.000 UL
LTa
630 2039 M
6332 0 V
1.000 UL
LTb
630 2039 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-8) Rshow
1.000 UL
LTa
630 2444 M
6332 0 V
1.000 UL
LTb
630 2444 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-7) Rshow
1.000 UL
LTa
630 2848 M
4757 0 V
1491 0 R
84 0 V
1.000 UL
LTb
630 2848 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-6) Rshow
1.000 UL
LTa
630 3253 M
4757 0 V
1491 0 R
84 0 V
1.000 UL
LTb
630 3253 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-5) Rshow
1.000 UL
LTa
630 3658 M
4757 0 V
1491 0 R
84 0 V
1.000 UL
LTb
630 3658 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-4) Rshow
1.000 UL
LTa
630 4063 M
4757 0 V
1491 0 R
84 0 V
1.000 UL
LTb
630 4063 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-3) Rshow
1.000 UL
LTa
630 4467 M
4757 0 V
1491 0 R
84 0 V
1.000 UL
LTb
630 4467 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-2) Rshow
1.000 UL
LTa
630 4872 M
6332 0 V
1.000 UL
LTb
630 4872 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(-1) Rshow
1.000 UL
LTa
630 420 M
0 4452 V
1.000 UL
LTb
630 420 M
0 63 V
0 4389 R
0 -63 V
630 280 M
(0) Cshow
1.000 UL
LTa
1535 420 M
0 4452 V
1.000 UL
LTb
1535 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1) Cshow
1.000 UL
LTa
2439 420 M
0 4452 V
1.000 UL
LTb
2439 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(2) Cshow
1.000 UL
LTa
3344 420 M
0 4452 V
1.000 UL
LTb
3344 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(3) Cshow
1.000 UL
LTa
4248 420 M
0 4452 V
1.000 UL
LTb
4248 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(4) Cshow
1.000 UL
LTa
5153 420 M
0 4452 V
1.000 UL
LTb
5153 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(5) Cshow
1.000 UL
LTa
6057 420 M
0 2149 V
0 2240 R
0 63 V
1.000 UL
LTb
6057 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(6) Cshow
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(7) Cshow
1.000 UL
LTb
630 420 M
6332 0 V
0 4452 V
-6332 0 V
630 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(log10\(Density\)) Cshow
grestore
3796 70 M
(log10\(Inter arrival time in microseconds\)) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
(alpha = 2) Rshow
1419 4507 Pls
1507 4238 Pls
1594 4210 Pls
1682 4242 Pls
1770 4244 Pls
1857 4194 Pls
1945 4221 Pls
2033 4212 Pls
2120 4203 Pls
2208 4189 Pls
2296 4183 Pls
2383 4145 Pls
2471 4141 Pls
2559 4507 Pls
2646 2827 Pls
2909 2710 Pls
2997 2864 Pls
3085 2824 Pls
3172 2714 Pls
3260 2939 Pls
3348 2978 Pls
3435 2861 Pls
3523 2718 Pls
3611 2738 Pls
3698 2808 Pls
3786 2835 Pls
3873 2851 Pls
3961 2757 Pls
4049 2809 Pls
4136 2830 Pls
4224 2819 Pls
4312 2839 Pls
4399 2815 Pls
4487 2841 Pls
4575 2794 Pls
4662 2820 Pls
4750 2839 Pls
4838 2824 Pls
4925 2801 Pls
5013 2817 Pls
5101 2802 Pls
5188 2803 Pls
5276 2782 Pls
5364 2774 Pls
5451 2759 Pls
5539 2745 Pls
5627 2719 Pls
5714 2696 Pls
5802 2655 Pls
5890 2615 Pls
5977 2563 Pls
6065 2508 Pls
6153 2430 Pls
6240 2323 Pls
6328 2198 Pls
6416 2022 Pls
6503 1815 Pls
6591 1513 Pls
6679 1365 Pls
6594 4739 Pls
1.000 UP
1.000 UL
LT1
6311 4599 M
(alpha = 1.9) Rshow
1419 4525 Crs
1507 4264 Crs
1594 4200 Crs
1682 4239 Crs
1770 4264 Crs
1857 4224 Crs
1945 4226 Crs
2033 4229 Crs
2120 4222 Crs
2208 4202 Crs
2296 4187 Crs
2383 4164 Crs
2471 4142 Crs
2559 4475 Crs
2646 2848 Crs
2734 3002 Crs
2909 2852 Crs
2997 2884 Crs
3085 2774 Crs
3172 2806 Crs
3260 2817 Crs
3348 2727 Crs
3435 2861 Crs
3523 2821 Crs
3611 2803 Crs
3698 2841 Crs
3786 2826 Crs
3873 2885 Crs
3961 2852 Crs
4049 2846 Crs
4136 2850 Crs
4224 2847 Crs
4312 2850 Crs
4399 2862 Crs
4487 2839 Crs
4575 2830 Crs
4662 2826 Crs
4750 2853 Crs
4838 2829 Crs
4925 2824 Crs
5013 2810 Crs
5101 2801 Crs
5188 2805 Crs
5276 2797 Crs
5364 2785 Crs
5451 2775 Crs
5539 2738 Crs
5627 2740 Crs
5714 2716 Crs
5802 2678 Crs
5890 2634 Crs
5977 2584 Crs
6065 2520 Crs
6153 2441 Crs
6240 2347 Crs
6328 2231 Crs
6416 2065 Crs
6503 1877 Crs
6591 1669 Crs
6594 4599 Crs
1.000 UP
1.000 UL
LT2
6311 4459 M
(alpha = 1.8) Rshow
1419 4532 Star
1507 4252 Star
1594 4256 Star
1682 4279 Star
1770 4231 Star
1857 4214 Star
1945 4242 Star
2033 4236 Star
2120 4225 Star
2208 4208 Star
2296 4190 Star
2383 4159 Star
2471 4139 Star
2559 4469 Star
2822 2770 Star
2909 2924 Star
2997 2884 Star
3085 2652 Star
3172 2613 Star
3260 2817 Star
3348 2876 Star
3435 2861 Star
3523 2861 Star
3611 2893 Star
3698 2913 Star
3786 2826 Star
3873 2858 Star
3961 2839 Star
4049 2850 Star
4136 2811 Star
4224 2862 Star
4312 2807 Star
4399 2823 Star
4487 2836 Star
4575 2850 Star
4662 2824 Star
4750 2806 Star
4838 2821 Star
4925 2827 Star
5013 2824 Star
5101 2803 Star
5188 2814 Star
5276 2805 Star
5364 2781 Star
5451 2779 Star
5539 2762 Star
5627 2734 Star
5714 2715 Star
5802 2678 Star
5890 2643 Star
5977 2593 Star
6065 2528 Star
6153 2431 Star
6240 2345 Star
6328 2215 Star
6416 2061 Star
6503 1830 Star
6591 1662 Star
6679 1327 Star
6594 4459 Star
1.000 UP
1.000 UL
LT3
6311 4319 M
(alpha = 1.7) Rshow
1419 4519 Box
1507 4272 Box
1594 4212 Box
1682 4228 Box
1770 4276 Box
1857 4213 Box
1945 4235 Box
2033 4224 Box
2120 4213 Box
2208 4200 Box
2296 4187 Box
2383 4150 Box
2471 4138 Box
2559 4476 Box
2646 2848 Box
2734 2809 Box
2822 2770 Box
2909 2924 Box
3085 2845 Box
3172 2613 Box
3260 2817 Box
3348 2817 Box
3435 2861 Box
3523 2739 Box
3611 2732 Box
3698 2743 Box
3786 2865 Box
3873 2858 Box
3961 2777 Box
4049 2835 Box
4136 2854 Box
4224 2803 Box
4312 2866 Box
4399 2836 Box
4487 2843 Box
4575 2846 Box
4662 2817 Box
4750 2862 Box
4838 2840 Box
4925 2833 Box
5013 2812 Box
5101 2804 Box
5188 2820 Box
5276 2791 Box
5364 2788 Box
5451 2784 Box
5539 2752 Box
5627 2745 Box
5714 2709 Box
5802 2678 Box
5890 2628 Box
5977 2583 Box
6065 2528 Box
6153 2438 Box
6240 2334 Box
6328 2228 Box
6416 2096 Box
6503 1833 Box
6591 1634 Box
6594 4319 Box
1.000 UP
1.000 UL
LT4
6311 4179 M
(alpha = 1.6) Rshow
1419 4508 BoxF
1507 4232 BoxF
1594 4237 BoxF
1682 4224 BoxF
1770 4258 BoxF
1857 4203 BoxF
1945 4239 BoxF
2033 4200 BoxF
2120 4209 BoxF
2208 4173 BoxF
2296 4175 BoxF
2383 4151 BoxF
2471 4122 BoxF
2559 4498 BoxF
2734 2795 BoxF
2822 3039 BoxF
2909 2717 BoxF
2997 2961 BoxF
3085 2760 BoxF
3172 2882 BoxF
3260 2560 BoxF
3348 2926 BoxF
3435 2824 BoxF
3523 2829 BoxF
3611 2921 BoxF
3698 2828 BoxF
3786 2904 BoxF
3873 2783 BoxF
3961 2826 BoxF
4049 2837 BoxF
4136 2837 BoxF
4224 2842 BoxF
4312 2846 BoxF
4399 2847 BoxF
4487 2796 BoxF
4575 2831 BoxF
4662 2825 BoxF
4750 2804 BoxF
4838 2830 BoxF
4925 2810 BoxF
5013 2819 BoxF
5101 2822 BoxF
5188 2785 BoxF
5276 2795 BoxF
5364 2779 BoxF
5451 2772 BoxF
5539 2745 BoxF
5627 2727 BoxF
5714 2708 BoxF
5802 2675 BoxF
5890 2626 BoxF
5977 2568 BoxF
6065 2517 BoxF
6153 2436 BoxF
6240 2318 BoxF
6328 2201 BoxF
6416 2025 BoxF
6503 1843 BoxF
6591 1578 BoxF
6594 4179 BoxF
1.000 UP
1.000 UL
LT5
6311 4039 M
(alpha = 1.5) Rshow
1419 4495 Circle
1507 4240 Circle
1594 4194 Circle
1682 4250 Circle
1770 4250 Circle
1857 4172 Circle
1945 4228 Circle
2033 4199 Circle
2120 4203 Circle
2208 4182 Circle
2296 4155 Circle
2383 4134 Circle
2471 4121 Circle
2559 4514 Circle
2734 2791 Circle
2822 2874 Circle
2909 2834 Circle
2997 2956 Circle
3085 2917 Circle
3172 2910 Circle
3260 2678 Circle
3348 2831 Circle
3435 2819 Circle
3523 2889 Circle
3611 2714 Circle
3698 2553 Circle
3786 2856 Circle
3873 2789 Circle
3961 2821 Circle
4049 2842 Circle
4136 2861 Circle
4224 2793 Circle
4312 2834 Circle
4399 2814 Circle
4487 2850 Circle
4575 2817 Circle
4662 2802 Circle
4750 2790 Circle
4838 2822 Circle
4925 2803 Circle
5013 2796 Circle
5101 2796 Circle
5188 2794 Circle
5276 2785 Circle
5364 2777 Circle
5451 2758 Circle
5539 2744 Circle
5627 2714 Circle
5714 2696 Circle
5802 2667 Circle
5890 2616 Circle
5977 2570 Circle
6065 2500 Circle
6153 2435 Circle
6240 2320 Circle
6328 2199 Circle
6416 2035 Circle
6503 1856 Circle
6591 1609 Circle
6679 1341 Circle
6594 4039 Circle
1.000 UP
1.000 UL
LT6
6311 3899 M
(alpha = 1.4) Rshow
1419 4480 CircleF
1507 4244 CircleF
1594 4182 CircleF
1682 4232 CircleF
1770 4222 CircleF
1857 4186 CircleF
1945 4203 CircleF
2033 4192 CircleF
2120 4173 CircleF
2208 4156 CircleF
2296 4139 CircleF
2383 4117 CircleF
2471 4102 CircleF
2559 4542 CircleF
2646 2935 CircleF
2734 2967 CircleF
2909 2817 CircleF
2997 2656 CircleF
3085 2932 CircleF
3172 2700 CircleF
3260 2782 CircleF
3348 2886 CircleF
3435 2826 CircleF
3523 2614 CircleF
3611 2833 CircleF
3698 2860 CircleF
3786 2862 CircleF
3873 2782 CircleF
3961 2776 CircleF
4049 2811 CircleF
4136 2771 CircleF
4224 2805 CircleF
4312 2825 CircleF
4399 2780 CircleF
4487 2801 CircleF
4575 2778 CircleF
4662 2788 CircleF
4750 2792 CircleF
4838 2805 CircleF
4925 2788 CircleF
5013 2793 CircleF
5101 2776 CircleF
5188 2782 CircleF
5276 2760 CircleF
5364 2755 CircleF
5451 2753 CircleF
5539 2726 CircleF
5627 2703 CircleF
5714 2676 CircleF
5802 2640 CircleF
5890 2606 CircleF
5977 2542 CircleF
6065 2493 CircleF
6153 2399 CircleF
6240 2302 CircleF
6328 2194 CircleF
6416 2037 CircleF
6503 1837 CircleF
6591 1607 CircleF
6679 1292 CircleF
6594 3899 CircleF
1.000 UP
1.000 UL
LT7
6311 3759 M
(alpha = 1.3) Rshow
1419 4444 TriU
1507 4185 TriU
1594 4148 TriU
1682 4200 TriU
1770 4197 TriU
1857 4140 TriU
1945 4167 TriU
2033 4154 TriU
2120 4143 TriU
2208 4131 TriU
2296 4124 TriU
2383 4097 TriU
2471 4079 TriU
2559 4575 TriU
2734 2871 TriU
2822 2710 TriU
2909 2792 TriU
2997 2631 TriU
3085 2714 TriU
3172 2675 TriU
3260 2829 TriU
3348 2861 TriU
3435 2886 TriU
3523 2738 TriU
3611 2722 TriU
3698 2754 TriU
3786 2796 TriU
3873 2805 TriU
3961 2743 TriU
4049 2770 TriU
4136 2826 TriU
4224 2747 TriU
4312 2763 TriU
4399 2799 TriU
4487 2772 TriU
4575 2765 TriU
4662 2802 TriU
4750 2772 TriU
4838 2781 TriU
4925 2725 TriU
5013 2763 TriU
5101 2757 TriU
5188 2741 TriU
5276 2745 TriU
5364 2722 TriU
5451 2703 TriU
5539 2699 TriU
5627 2665 TriU
5714 2651 TriU
5802 2618 TriU
5890 2577 TriU
5977 2527 TriU
6065 2464 TriU
6153 2381 TriU
6240 2283 TriU
6328 2163 TriU
6416 2007 TriU
6503 1839 TriU
6591 1558 TriU
6594 3759 TriU
1.000 UP
1.000 UL
LT8
6311 3619 M
(alpha = 1.2) Rshow
1419 4395 TriUF
1507 4154 TriUF
1594 4102 TriUF
1682 4124 TriUF
1770 4143 TriUF
1857 4094 TriUF
1945 4119 TriUF
2033 4105 TriUF
2120 4095 TriUF
2208 4080 TriUF
2296 4075 TriUF
2383 4044 TriUF
2471 4030 TriUF
2559 4614 TriUF
2822 2658 TriUF
2909 2812 TriUF
2997 2773 TriUF
3085 2784 TriUF
3172 2745 TriUF
3260 2777 TriUF
3348 2738 TriUF
3435 2726 TriUF
3523 2842 TriUF
3611 2742 TriUF
3698 2764 TriUF
3786 2703 TriUF
3873 2696 TriUF
3961 2757 TriUF
4049 2713 TriUF
4136 2679 TriUF
4224 2696 TriUF
4312 2730 TriUF
4399 2747 TriUF
4487 2715 TriUF
4575 2733 TriUF
4662 2718 TriUF
4750 2688 TriUF
4838 2734 TriUF
4925 2730 TriUF
5013 2715 TriUF
5101 2703 TriUF
5188 2700 TriUF
5276 2673 TriUF
5364 2674 TriUF
5451 2655 TriUF
5539 2649 TriUF
5627 2628 TriUF
5714 2591 TriUF
5802 2572 TriUF
5890 2526 TriUF
5977 2469 TriUF
6065 2414 TriUF
6153 2325 TriUF
6240 2237 TriUF
6328 2102 TriUF
6416 1961 TriUF
6503 1774 TriUF
6591 1523 TriUF
6679 1247 TriUF
6594 3619 TriUF
1.000 UP
1.000 UL
LT0
6311 3479 M
(alpha = 1.1) Rshow
1419 4355 TriD
1507 4092 TriD
1594 4050 TriD
1682 4076 TriD
1770 4075 TriD
1857 4039 TriD
1945 4073 TriD
2033 4052 TriD
2120 4057 TriD
2208 4025 TriD
2296 4024 TriD
2383 4000 TriD
2471 3989 TriD
2559 4637 TriD
2646 2688 TriD
2822 2803 TriD
2909 2571 TriD
2997 2653 TriD
3085 2685 TriD
3172 2697 TriD
3260 2607 TriD
3348 2740 TriD
3435 2701 TriD
3523 2638 TriD
3611 2708 TriD
3698 2654 TriD
3786 2722 TriD
3873 2674 TriD
3961 2720 TriD
4049 2722 TriD
4136 2683 TriD
4224 2670 TriD
4312 2685 TriD
4399 2632 TriD
4487 2699 TriD
4575 2664 TriD
4662 2666 TriD
4750 2683 TriD
4838 2682 TriD
4925 2661 TriD
5013 2664 TriD
5101 2666 TriD
5188 2656 TriD
5276 2640 TriD
5364 2633 TriD
5451 2622 TriD
5539 2600 TriD
5627 2581 TriD
5714 2556 TriD
5802 2512 TriD
5890 2482 TriD
5977 2427 TriD
6065 2357 TriD
6153 2283 TriD
6240 2194 TriD
6328 2044 TriD
6416 1911 TriD
6503 1696 TriD
6591 1431 TriD
6679 1226 TriD
6594 3479 TriD
1.000 UP
1.000 UL
LT1
6311 3339 M
(alpha = 1.0) Rshow
1419 4284 TriDF
1507 4035 TriDF
1594 3999 TriDF
1682 4024 TriDF
1770 4038 TriDF
1857 3982 TriDF
1945 4012 TriDF
2033 4002 TriDF
2120 3997 TriDF
2208 3965 TriDF
2296 3979 TriDF
2383 3958 TriDF
2471 3943 TriDF
2559 4654 TriDF
2734 2598 TriDF
2909 2642 TriDF
2997 2724 TriDF
3085 2685 TriDF
3172 2744 TriDF
3260 2607 TriDF
3348 2517 TriDF
3435 2627 TriDF
3523 2560 TriDF
3611 2704 TriDF
3698 2675 TriDF
3786 2636 TriDF
3873 2674 TriDF
3961 2635 TriDF
4049 2625 TriDF
4136 2640 TriDF
4224 2636 TriDF
4312 2632 TriDF
4399 2644 TriDF
4487 2620 TriDF
4575 2636 TriDF
4662 2615 TriDF
4750 2626 TriDF
4838 2640 TriDF
4925 2612 TriDF
5013 2619 TriDF
5101 2602 TriDF
5188 2592 TriDF
5276 2593 TriDF
5364 2565 TriDF
5451 2567 TriDF
5539 2545 TriDF
5627 2525 TriDF
5714 2500 TriDF
5802 2464 TriDF
5890 2425 TriDF
5977 2379 TriDF
6065 2318 TriDF
6153 2236 TriDF
6240 2142 TriDF
6328 2006 TriDF
6416 1851 TriDF
6503 1613 TriDF
6591 1390 TriDF
6594 3339 TriDF
1.000 UP
1.000 UL
LT2
6311 3199 M
(alpha = 0.9) Rshow
1419 4216 Dia
1507 3962 Dia
1594 3948 Dia
1682 3954 Dia
1770 3946 Dia
1857 3927 Dia
1945 3950 Dia
2033 3942 Dia
2120 3905 Dia
2208 3908 Dia
2296 3906 Dia
2383 3888 Dia
2471 3878 Dia
2559 4668 Dia
2646 2579 Dia
2734 2662 Dia
2909 2744 Dia
2997 2544 Dia
3085 2626 Dia
3172 2537 Dia
3260 2497 Dia
3348 2509 Dia
3435 2348 Dia
3523 2529 Dia
3611 2569 Dia
3698 2667 Dia
3786 2520 Dia
3873 2588 Dia
3961 2576 Dia
4049 2561 Dia
4136 2577 Dia
4224 2601 Dia
4312 2535 Dia
4399 2579 Dia
4487 2538 Dia
4575 2566 Dia
4662 2544 Dia
4750 2576 Dia
4838 2562 Dia
4925 2566 Dia
5013 2555 Dia
5101 2544 Dia
5188 2540 Dia
5276 2518 Dia
5364 2515 Dia
5451 2509 Dia
5539 2491 Dia
5627 2471 Dia
5714 2446 Dia
5802 2408 Dia
5890 2365 Dia
5977 2320 Dia
6065 2253 Dia
6153 2178 Dia
6240 2068 Dia
6328 1953 Dia
6416 1782 Dia
6503 1607 Dia
6591 1331 Dia
6594 3199 Dia
1.000 UP
1.000 UL
LT3
6311 3059 M
(alpha = 0.8) Rshow
1419 4125 DiaF
1507 3877 DiaF
1594 3858 DiaF
1682 3878 DiaF
1770 3876 DiaF
1857 3832 DiaF
1945 3856 DiaF
2033 3849 DiaF
2120 3857 DiaF
2208 3838 DiaF
2296 3831 DiaF
2383 3808 DiaF
2471 3814 DiaF
2559 4679 DiaF
2822 2546 DiaF
2909 2578 DiaF
2997 2346 DiaF
3085 2428 DiaF
3172 2550 DiaF
3260 2511 DiaF
3348 2575 DiaF
3435 2515 DiaF
3523 2547 DiaF
3611 2508 DiaF
3698 2530 DiaF
3786 2519 DiaF
3873 2512 DiaF
3961 2512 DiaF
4049 2510 DiaF
4136 2480 DiaF
4224 2491 DiaF
4312 2488 DiaF
4399 2488 DiaF
4487 2511 DiaF
4575 2491 DiaF
4662 2522 DiaF
4750 2472 DiaF
4838 2478 DiaF
4925 2473 DiaF
5013 2489 DiaF
5101 2467 DiaF
5188 2474 DiaF
5276 2450 DiaF
5364 2433 DiaF
5451 2427 DiaF
5539 2425 DiaF
5627 2389 DiaF
5714 2375 DiaF
5802 2330 DiaF
5890 2295 DiaF
5977 2247 DiaF
6065 2178 DiaF
6153 2083 DiaF
6240 1989 DiaF
6328 1861 DiaF
6416 1726 DiaF
6503 1564 DiaF
6591 1296 DiaF
6594 3059 DiaF
1.000 UP
1.000 UL
LT4
6311 2919 M
(alpha = 0.7) Rshow
1419 4046 Pent
1507 3800 Pent
1594 3759 Pent
1682 3798 Pent
1770 3793 Pent
1857 3767 Pent
1945 3769 Pent
2033 3779 Pent
2120 3765 Pent
2208 3749 Pent
2296 3747 Pent
2383 3736 Pent
2471 3738 Pent
2559 4685 Pent
2646 2428 Pent
2734 2388 Pent
2822 2593 Pent
2909 2432 Pent
2997 2464 Pent
3085 2425 Pent
3172 2314 Pent
3260 2275 Pent
3348 2456 Pent
3435 2440 Pent
3523 2440 Pent
3611 2447 Pent
3698 2362 Pent
3786 2369 Pent
3873 2342 Pent
3961 2398 Pent
4049 2386 Pent
4136 2441 Pent
4224 2416 Pent
4312 2399 Pent
4399 2422 Pent
4487 2415 Pent
4575 2451 Pent
4662 2388 Pent
4750 2429 Pent
4838 2388 Pent
4925 2404 Pent
5013 2396 Pent
5101 2402 Pent
5188 2393 Pent
5276 2379 Pent
5364 2368 Pent
5451 2355 Pent
5539 2334 Pent
5627 2311 Pent
5714 2292 Pent
5802 2260 Pent
5890 2226 Pent
5977 2160 Pent
6065 2106 Pent
6153 2017 Pent
6240 1925 Pent
6328 1798 Pent
6416 1634 Pent
6503 1424 Pent
6591 1198 Pent
6679 938 Pent
6594 2919 Pent
1.000 UP
1.000 UL
LT5
6311 2779 M
(alpha = 0.6) Rshow
1419 3969 PentF
1507 3713 PentF
1594 3671 PentF
1682 3695 PentF
1770 3718 PentF
1857 3668 PentF
1945 3701 PentF
2033 3687 PentF
2120 3669 PentF
2208 3688 PentF
2296 3680 PentF
2383 3661 PentF
2471 3665 PentF
2559 4689 PentF
2646 2362 PentF
2734 2323 PentF
2822 2405 PentF
2997 2449 PentF
3085 2359 PentF
3172 2370 PentF
3260 2474 PentF
3348 2241 PentF
3435 2351 PentF
3523 2356 PentF
3611 2335 PentF
3698 2342 PentF
3786 2303 PentF
3873 2330 PentF
3961 2332 PentF
4049 2300 PentF
4136 2348 PentF
4224 2370 PentF
4312 2356 PentF
4399 2339 PentF
4487 2358 PentF
4575 2355 PentF
4662 2344 PentF
4750 2348 PentF
4838 2342 PentF
4925 2331 PentF
5013 2335 PentF
5101 2330 PentF
5188 2334 PentF
5276 2319 PentF
5364 2306 PentF
5451 2283 PentF
5539 2269 PentF
5627 2255 PentF
5714 2226 PentF
5802 2191 PentF
5890 2158 PentF
5977 2104 PentF
6065 2025 PentF
6153 1950 PentF
6240 1867 PentF
6328 1719 PentF
6416 1568 PentF
6503 1388 PentF
6591 1132 PentF
6679 801 PentF
6594 2779 PentF
1.000 UP
1.000 UL
LT6
6311 2639 M
(alpha = 0.5) Rshow
1419 3850 C0
1507 3608 C0
1594 3560 C0
1682 3573 C0
1770 3596 C0
1857 3540 C0
1945 3577 C0
2033 3561 C0
2120 3568 C0
2208 3557 C0
2296 3552 C0
2383 3544 C0
2471 3553 C0
2559 4693 C0
2822 2178 C0
2909 2139 C0
2997 2465 C0
3085 2183 C0
3172 2336 C0
3260 2104 C0
3348 2065 C0
3435 2290 C0
3523 2180 C0
3611 2212 C0
3698 2262 C0
3786 2234 C0
3873 2280 C0
3961 2260 C0
4049 2249 C0
4136 2251 C0
4224 2220 C0
4312 2237 C0
4399 2251 C0
4487 2261 C0
4575 2247 C0
4662 2233 C0
4750 2215 C0
4838 2223 C0
4925 2245 C0
5013 2241 C0
5101 2230 C0
5188 2219 C0
5276 2197 C0
5364 2199 C0
5451 2178 C0
5539 2162 C0
5627 2128 C0
5714 2108 C0
5802 2081 C0
5890 2037 C0
5977 1993 C0
6065 1927 C0
6153 1849 C0
6240 1764 C0
6328 1632 C0
6416 1485 C0
6503 1239 C0
6591 1084 C0
6594 2639 C0
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 4084 241 a
 currentpoint grestore moveto
 4084 241 a 5899 4408 7 4219 v
-90 4415 5997 7 v 1325 4756 a Fj(Figure)58 b(5:)76 b(The)57
b(in)-5 b(ter)58 b(ev)-5 b(en)g(t)57 b(time)h(histogram)p
eop
%%Page: 23 23
23 22 bop -90 189 5997 7 v -90 4408 7 4219 v -32 241
a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 -32 241 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 3401 @rhi @setspecial
%%BeginDocument: plots2/power-spectra.ps
%!PS-Adobe-2.0
%%Title: power-spectra.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Wed Mar 19 16:12:40 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
546 420 M
6416 0 V
1.000 UL
LTb
546 420 M
63 0 V
6353 0 R
-63 0 V
462 420 M
(-7) Rshow
1.000 UL
LTa
546 1162 M
6416 0 V
1.000 UL
LTb
546 1162 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(-6) Rshow
1.000 UL
LTa
546 1904 M
6416 0 V
1.000 UL
LTb
546 1904 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(-5) Rshow
1.000 UL
LTa
546 2646 M
4841 0 V
1491 0 R
84 0 V
1.000 UL
LTb
546 2646 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(-4) Rshow
1.000 UL
LTa
546 3388 M
4841 0 V
1491 0 R
84 0 V
1.000 UL
LTb
546 3388 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(-3) Rshow
1.000 UL
LTa
546 4130 M
4841 0 V
1491 0 R
84 0 V
1.000 UL
LTb
546 4130 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(-2) Rshow
1.000 UL
LTa
546 4872 M
6416 0 V
1.000 UL
LTb
546 4872 M
63 0 V
6353 0 R
-63 0 V
-6437 0 R
(-1) Rshow
1.000 UL
LTa
546 420 M
0 4452 V
1.000 UL
LTb
546 420 M
0 63 V
0 4389 R
0 -63 V
546 280 M
(-3) Cshow
1.000 UL
LTa
1615 420 M
0 4452 V
1.000 UL
LTb
1615 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-2) Cshow
1.000 UL
LTa
2685 420 M
0 4452 V
1.000 UL
LTb
2685 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-1) Cshow
1.000 UL
LTa
3754 420 M
0 4452 V
1.000 UL
LTb
3754 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(0) Cshow
1.000 UL
LTa
4823 420 M
0 4452 V
1.000 UL
LTb
4823 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1) Cshow
1.000 UL
LTa
5893 420 M
0 2009 V
0 2380 R
0 63 V
1.000 UL
LTb
5893 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(2) Cshow
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(3) Cshow
1.000 UL
LTb
546 420 M
6416 0 V
0 4452 V
-6416 0 V
546 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(log10\(Power\)) Cshow
grestore
3754 70 M
(log10\(Frequency in Hz\)) Cshow
1.000 UL
LT0
6311 4739 M
(alpha = 2.0) Rshow
6395 4739 M
399 0 V
904 3251 M
232 -94 V
231 -142 V
116 226 V
116 35 V
116 -56 V
116 8 V
116 27 V
116 -19 V
116 -150 V
115 97 V
116 -75 V
116 65 V
116 -22 V
116 -109 V
116 54 V
116 -5 V
116 42 V
116 19 V
115 -13 V
116 -27 V
116 -8 V
116 -15 V
116 15 V
116 -57 V
116 45 V
116 4 V
115 4 V
116 38 V
116 4 V
116 -17 V
116 -23 V
116 28 V
116 -25 V
116 16 V
116 -17 V
115 -1 V
116 -15 V
116 -10 V
116 -22 V
116 -21 V
116 -28 V
116 -28 V
116 -32 V
116 -41 V
115 -43 V
116 -46 V
116 -33 V
1.000 UL
LT1
6311 4599 M
(alpha = 1.9) Rshow
6395 4599 M
399 0 V
904 2716 M
232 349 V
231 149 V
116 68 V
116 32 V
116 -48 V
116 -196 V
116 -28 V
116 37 V
116 31 V
115 85 V
116 -45 V
116 -32 V
116 26 V
116 -33 V
116 44 V
116 -37 V
116 29 V
116 -30 V
115 33 V
116 -26 V
116 -40 V
116 60 V
116 -16 V
116 -6 V
116 -8 V
116 10 V
115 -1 V
116 -8 V
116 22 V
116 -13 V
116 -6 V
116 0 V
116 -10 V
116 -6 V
116 -7 V
115 -26 V
116 -16 V
116 -14 V
116 -10 V
116 -19 V
116 -22 V
116 -19 V
116 -27 V
116 -30 V
115 -34 V
116 -39 V
116 -27 V
1.000 UL
LT2
6311 4459 M
(alpha = 1.8) Rshow
6395 4459 M
399 0 V
904 3105 M
232 -297 V
231 280 V
116 197 V
116 -44 V
116 -50 V
116 -192 V
116 39 V
116 15 V
116 197 V
115 -98 V
116 -252 V
116 235 V
116 8 V
116 -13 V
116 -3 V
116 -83 V
116 112 V
116 -38 V
115 6 V
116 -2 V
116 -25 V
116 45 V
116 -48 V
116 27 V
116 -1 V
116 12 V
115 -31 V
116 33 V
116 -14 V
116 -5 V
116 -7 V
116 5 V
116 -8 V
116 -5 V
116 -3 V
115 -13 V
116 -18 V
116 -19 V
116 -26 V
116 -12 V
116 -19 V
116 -24 V
116 -26 V
116 -28 V
115 -39 V
116 -33 V
116 -28 V
1.000 UL
LT3
6311 4319 M
(alpha = 1.7) Rshow
6395 4319 M
399 0 V
904 3357 M
232 -209 V
231 -81 V
116 103 V
116 -72 V
116 -9 V
116 -123 V
116 118 V
116 165 V
116 -260 V
115 193 V
116 -14 V
116 -208 V
116 173 V
116 -96 V
116 119 V
116 7 V
116 -81 V
116 5 V
115 37 V
116 15 V
116 -29 V
116 13 V
116 33 V
116 -33 V
116 17 V
116 -1 V
115 -11 V
116 4 V
116 -5 V
116 0 V
116 2 V
116 7 V
116 -12 V
116 -2 V
116 -4 V
115 -3 V
116 -12 V
116 -17 V
116 -17 V
116 -26 V
116 -33 V
116 -28 V
116 -30 V
116 -31 V
115 -39 V
116 -38 V
116 -29 V
1.000 UL
LT4
6311 4179 M
(alpha = 1.6) Rshow
6395 4179 M
399 0 V
904 3292 M
232 -461 V
231 319 V
116 101 V
116 141 V
116 -221 V
116 -71 V
116 175 V
116 -77 V
116 -47 V
115 -86 V
116 166 V
116 31 V
116 -62 V
116 38 V
116 77 V
116 -85 V
116 -35 V
116 15 V
115 26 V
116 -15 V
116 -7 V
116 -12 V
116 8 V
116 8 V
116 5 V
116 2 V
115 4 V
116 -6 V
116 3 V
116 -5 V
116 -17 V
116 9 V
116 -14 V
116 -13 V
116 -20 V
115 -25 V
116 -38 V
116 -31 V
116 -24 V
116 -26 V
116 -31 V
116 -44 V
116 -37 V
116 -37 V
115 -37 V
116 -45 V
116 -33 V
1.000 UL
LT5
6311 4039 M
(alpha = 1.5) Rshow
6395 4039 M
399 0 V
904 3575 M
232 -24 V
231 -30 V
116 -74 V
116 -127 V
116 240 V
116 1 V
116 -208 V
116 -60 V
116 221 V
115 -46 V
116 -82 V
116 -91 V
116 101 V
116 -35 V
116 -12 V
116 71 V
116 -5 V
116 -43 V
115 21 V
116 -58 V
116 87 V
116 -30 V
116 -32 V
116 35 V
116 -15 V
116 -6 V
115 -8 V
116 5 V
116 -3 V
116 -2 V
116 -10 V
116 -15 V
116 -18 V
116 -30 V
116 -38 V
115 -38 V
116 -38 V
116 -40 V
116 -48 V
116 -40 V
116 -41 V
116 -51 V
116 -36 V
116 -44 V
115 -38 V
116 -50 V
116 -37 V
1.000 UL
LT6
6311 3899 M
(alpha = 1.4) Rshow
6395 3899 M
399 0 V
904 3440 M
232 -83 V
231 245 V
116 4 V
116 -85 V
116 1 V
116 115 V
116 -62 V
116 -31 V
116 139 V
115 -52 V
116 -32 V
116 1 V
116 -46 V
116 33 V
116 -49 V
116 8 V
116 -16 V
116 50 V
115 -1 V
116 -17 V
116 16 V
116 -14 V
116 6 V
116 -13 V
116 -8 V
116 30 V
115 -21 V
116 -6 V
116 -25 V
116 -17 V
116 -30 V
116 -39 V
116 -54 V
116 -62 V
116 -37 V
115 -48 V
116 -47 V
116 -39 V
116 -46 V
116 -52 V
116 -44 V
116 -56 V
116 -50 V
116 -52 V
115 -56 V
116 -58 V
116 -41 V
1.000 UL
LT7
6311 3759 M
(alpha = 1.3) Rshow
6395 3759 M
399 0 V
904 3862 M
232 202 V
231 133 V
116 -332 V
116 321 V
116 -185 V
116 -120 V
116 161 V
116 33 V
116 -138 V
115 56 V
116 18 V
116 4 V
116 -26 V
116 -51 V
116 57 V
116 -18 V
116 45 V
116 -42 V
115 12 V
116 4 V
116 -17 V
116 -11 V
116 -23 V
116 -39 V
116 -26 V
116 -65 V
115 -101 V
116 -111 V
116 -54 V
116 10 V
116 -44 V
116 -52 V
116 -49 V
116 -61 V
116 -59 V
115 -65 V
116 -44 V
116 -51 V
116 -57 V
116 -44 V
116 -56 V
116 -61 V
116 -54 V
116 -64 V
115 -68 V
116 -62 V
116 -43 V
1.000 UL
LT8
6311 3619 M
(alpha = 1.2) Rshow
6395 3619 M
399 0 V
904 4502 M
232 47 V
231 -178 V
116 62 V
116 -107 V
116 -33 V
116 -112 V
116 327 V
116 -60 V
116 -300 V
115 308 V
116 -42 V
116 -101 V
116 39 V
116 -47 V
116 67 V
116 -7 V
116 -13 V
116 1 V
115 -13 V
116 -11 V
116 -36 V
116 -48 V
116 -73 V
116 -108 V
116 -192 V
116 -171 V
115 -14 V
116 29 V
116 -112 V
116 -26 V
116 -75 V
116 -64 V
116 -69 V
116 -61 V
116 -66 V
115 -75 V
116 -73 V
116 -71 V
116 -55 V
116 -61 V
116 -55 V
116 -62 V
116 -63 V
116 -70 V
115 -77 V
116 -69 V
116 -56 V
1.000 UL
LT0
6311 3479 M
(alpha = 1.1) Rshow
6395 3479 M
399 0 V
904 4158 M
232 142 V
231 -23 V
116 -57 V
116 -79 V
116 -98 V
116 -45 V
116 50 V
116 228 V
116 -120 V
115 -17 V
116 -7 V
116 -13 V
116 103 V
116 -46 V
116 -35 V
116 46 V
116 -31 V
116 18 V
115 -23 V
116 1 V
116 -23 V
116 -7 V
116 -46 V
116 -58 V
116 -70 V
116 -61 V
115 -57 V
116 -64 V
116 -98 V
116 -83 V
116 -96 V
116 -58 V
116 -77 V
116 -85 V
116 -75 V
115 -80 V
116 -69 V
116 -68 V
116 -72 V
116 -77 V
116 -68 V
116 -78 V
116 -78 V
116 -86 V
115 -82 V
116 -78 V
116 -58 V
1.000 UL
LT1
6311 3339 M
(alpha = 1.0) Rshow
6395 3339 M
399 0 V
904 4293 M
232 -617 V
231 224 V
116 91 V
116 14 V
116 106 V
116 335 V
116 -338 V
116 -24 V
116 -29 V
115 78 V
116 -148 V
116 137 V
116 11 V
116 -63 V
116 52 V
116 40 V
116 -36 V
116 -61 V
115 74 V
116 -62 V
116 11 V
116 -48 V
116 -11 V
116 -22 V
116 -14 V
116 -102 V
115 -81 V
116 -102 V
116 -79 V
116 -130 V
116 -80 V
116 -65 V
116 -66 V
116 -96 V
116 -71 V
115 -67 V
116 -82 V
116 -81 V
116 -76 V
116 -79 V
116 -86 V
116 -82 V
116 -76 V
116 -90 V
115 -101 V
116 -87 V
116 -70 V
1.000 UL
LT2
6311 3199 M
(alpha = 0.9) Rshow
6395 3199 M
399 0 V
904 4568 M
232 173 V
231 -13 V
116 -453 V
116 180 V
116 96 V
116 -368 V
116 284 V
116 208 V
116 -358 V
115 305 V
116 -243 V
116 153 V
116 -18 V
116 -72 V
116 93 V
116 -102 V
116 49 V
116 -47 V
115 -14 V
116 -39 V
116 -102 V
116 -101 V
116 -148 V
116 -81 V
116 -89 V
116 -87 V
115 -27 V
116 -112 V
116 -97 V
116 -89 V
116 -71 V
116 -78 V
116 -80 V
116 -87 V
116 -104 V
115 -83 V
116 -102 V
116 -80 V
116 -86 V
116 -88 V
116 -89 V
116 -100 V
116 -83 V
116 -110 V
115 -103 V
116 -93 V
116 -79 V
1.000 UL
LT3
6311 3059 M
(alpha = 0.8) Rshow
6395 3059 M
399 0 V
904 4453 M
232 -15 V
231 58 V
116 -66 V
116 -25 V
116 23 V
116 -277 V
116 287 V
116 -6 V
116 -48 V
115 -33 V
116 -134 V
116 138 V
116 60 V
116 -92 V
116 64 V
116 -34 V
116 -30 V
116 28 V
115 -62 V
116 -4 V
116 -55 V
116 -121 V
116 -76 V
116 -90 V
116 -83 V
116 -92 V
115 -156 V
116 -72 V
116 -77 V
116 -89 V
116 -109 V
116 -97 V
116 -94 V
116 -95 V
116 -97 V
115 -103 V
116 -98 V
116 -106 V
116 -86 V
116 -103 V
116 -102 V
116 -101 V
116 -92 V
116 -122 V
115 -119 V
116 -97 V
116 -87 V
1.000 UL
LT4
6311 2919 M
(alpha = 0.7) Rshow
6395 2919 M
399 0 V
904 4309 M
232 -162 V
231 -80 V
116 198 V
116 15 V
116 -115 V
116 404 V
116 -308 V
116 72 V
116 136 V
115 -130 V
116 25 V
116 -38 V
116 -73 V
116 -9 V
116 -56 V
116 -4 V
116 107 V
116 -72 V
115 -2 V
116 -64 V
116 8 V
116 -145 V
116 -95 V
116 -71 V
116 -138 V
116 -58 V
115 -102 V
116 -112 V
116 -57 V
116 -132 V
116 -92 V
116 -102 V
116 -124 V
116 -105 V
116 -94 V
115 -115 V
116 -111 V
116 -115 V
116 -97 V
116 -113 V
116 -105 V
116 -115 V
116 -98 V
116 -130 V
115 -132 V
116 -100 V
116 -99 V
1.000 UL
LT5
6311 2779 M
(alpha = 0.6) Rshow
6395 2779 M
399 0 V
904 4197 M
232 -163 V
231 163 V
116 -52 V
116 -163 V
116 35 V
116 132 V
116 63 V
116 104 V
116 -205 V
115 27 V
116 -45 V
116 64 V
116 -126 V
116 39 V
116 51 V
116 23 V
116 18 V
116 -63 V
115 -9 V
116 -61 V
116 -45 V
116 -94 V
116 -117 V
116 -56 V
116 -81 V
116 -103 V
115 -127 V
116 -91 V
116 -120 V
116 -89 V
116 -129 V
116 -90 V
116 -110 V
116 -101 V
116 -126 V
115 -104 V
116 -117 V
116 -118 V
116 -107 V
116 -114 V
116 -125 V
116 -118 V
116 -105 V
116 -145 V
115 -129 V
116 -100 V
116 -109 V
1.000 UL
LT6
6311 2639 M
(alpha = 0.5) Rshow
6395 2639 M
399 0 V
904 4358 M
232 -214 V
231 -87 V
116 121 V
116 -94 V
116 -129 V
116 248 V
116 -113 V
116 57 V
116 -155 V
115 130 V
116 -105 V
116 153 V
116 -85 V
116 -42 V
116 0 V
116 113 V
116 -203 V
116 -44 V
115 27 V
116 71 V
116 -123 V
116 -179 V
116 -76 V
116 -125 V
116 -106 V
116 -125 V
115 -96 V
116 -102 V
116 -109 V
116 -117 V
116 -108 V
116 -110 V
116 -119 V
116 -122 V
116 -116 V
115 -128 V
116 -122 V
116 -133 V
116 -125 V
116 -118 V
116 -120 V
116 -133 V
116 -101 V
116 -169 V
6350 987 L
116 -91 V
6582 776 L
1.000 UL
LT7
6311 2499 M
(alpha = 0.4) Rshow
6395 2499 M
399 0 V
904 3656 M
232 280 V
231 111 V
116 -171 V
116 9 V
116 151 V
116 38 V
116 135 V
116 -61 V
116 -226 V
115 40 V
116 -11 V
116 -69 V
116 11 V
116 17 V
116 59 V
116 34 V
116 -79 V
116 29 V
115 -29 V
116 -79 V
116 -49 V
116 -96 V
116 -142 V
116 -125 V
116 -121 V
116 -117 V
115 -96 V
116 -98 V
116 -138 V
116 -99 V
116 -132 V
116 -119 V
116 -121 V
116 -135 V
116 -140 V
115 -118 V
116 -137 V
116 -134 V
116 -133 V
116 -133 V
116 -130 V
116 -134 V
116 -87 V
6235 927 L
6350 785 L
116 -83 V
6582 572 L
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 4084 241 a
 currentpoint grestore moveto
 4084 241 a 5899 4408 7 4219 v
-90 4415 5997 7 v 1755 4756 a Fj(Figure)58 b(6:)77 b(The)57
b(p)5 b(o)-5 b(w)g(er)58 b(sp)5 b(ectrum)p eop
%%Page: 24 24
24 23 bop -242 70 a Fk(4)93 b(state)h(MMPP)p 400 619
5017 7 v 400 4152 7 3533 v 458 671 a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 458 671 a @beginspecial
50 @llx 50 @lly 554 @urx 770 @ury 2834 @rhi @setspecial
%%BeginDocument: 4-state-MMPP-power.ps
%!PS-Adobe-2.0
%%Title: 4-state-MMPP-power.ps
%%Creator: gnuplot 3.7 patchlevel 3
%%CreationDate: Mon Jun 09 16:51:46 2003
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
6248 0 V
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
(-5) Rshow
1.000 UL
LTa
714 1056 M
6248 0 V
1.000 UL
LTb
714 1056 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-4.5) Rshow
1.000 UL
LTa
714 1692 M
6248 0 V
1.000 UL
LTb
714 1692 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-4) Rshow
1.000 UL
LTa
714 2328 M
6248 0 V
1.000 UL
LTb
714 2328 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-3.5) Rshow
1.000 UL
LTa
714 2964 M
6248 0 V
1.000 UL
LTb
714 2964 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-3) Rshow
1.000 UL
LTa
714 3600 M
6248 0 V
1.000 UL
LTb
714 3600 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-2.5) Rshow
1.000 UL
LTa
714 4236 M
6248 0 V
1.000 UL
LTb
714 4236 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-2) Rshow
1.000 UL
LTa
714 4872 M
6248 0 V
1.000 UL
LTb
714 4872 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
(-1.5) Rshow
1.000 UL
LTa
714 420 M
0 4452 V
1.000 UL
LTb
714 420 M
0 63 V
0 4389 R
0 -63 V
714 280 M
(-3) Cshow
1.000 UL
LTa
1339 420 M
0 4452 V
1.000 UL
LTb
1339 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-2.5) Cshow
1.000 UL
LTa
1964 420 M
0 4452 V
1.000 UL
LTb
1964 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-2) Cshow
1.000 UL
LTa
2588 420 M
0 4452 V
1.000 UL
LTb
2588 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-1.5) Cshow
1.000 UL
LTa
3213 420 M
0 4452 V
1.000 UL
LTb
3213 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-1) Cshow
1.000 UL
LTa
3838 420 M
0 4452 V
1.000 UL
LTb
3838 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(-0.5) Cshow
1.000 UL
LTa
4463 420 M
0 4452 V
1.000 UL
LTb
4463 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 0) Cshow
1.000 UL
LTa
5088 420 M
0 4452 V
1.000 UL
LTb
5088 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 0.5) Cshow
1.000 UL
LTa
5712 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
5712 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1) Cshow
1.000 UL
LTa
6337 420 M
0 4109 V
0 280 R
0 63 V
1.000 UL
LTb
6337 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1.5) Cshow
1.000 UL
LTa
6962 420 M
0 4452 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 2) Cshow
1.000 UL
LTb
714 420 M
6248 0 V
0 4452 V
-6248 0 V
714 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(log10\(Power\)) Cshow
grestore
3838 70 M
(log10\(Frequency in Hz\)) Cshow
1.000 UL
LT0
6311 4739 M
(4 state MMPP) Rshow
6395 4739 M
399 0 V
1000 1275 M
338 524 V
226 -190 V
113 281 V
113 -412 V
113 -190 V
2015 931 L
113 1189 V
113 -219 V
113 -32 V
113 -311 V
113 -205 V
112 358 V
113 66 V
113 -7 V
113 -20 V
113 -113 V
113 -168 V
113 267 V
112 -272 V
113 65 V
113 98 V
113 29 V
113 -134 V
113 21 V
113 -11 V
112 -68 V
113 96 V
113 -78 V
113 -151 V
113 33 V
113 -48 V
112 -32 V
113 -36 V
113 -33 V
113 -16 V
113 -15 V
113 12 V
113 -48 V
112 -13 V
113 -37 V
113 -31 V
113 -38 V
113 -19 V
113 -39 V
113 -38 V
112 -4 V
1.000 UL
LT1
6311 4599 M
(real traffic) Rshow
6395 4599 M
399 0 V
1372 4263 M
316 -274 V
211 110 V
210 -90 V
106 -66 V
105 -157 V
105 -176 V
106 79 V
105 -10 V
105 -133 V
106 -333 V
105 365 V
105 -171 V
106 87 V
105 -282 V
105 -61 V
106 -146 V
105 69 V
105 -222 V
106 -75 V
105 -96 V
105 -165 V
106 -84 V
105 -120 V
105 -207 V
106 -185 V
105 29 V
105 -205 V
106 -152 V
105 -144 V
105 -179 V
106 -115 V
105 37 V
105 -121 V
106 -30 V
105 -42 V
105 114 V
106 115 V
105 -98 V
105 -86 V
106 -18 V
105 127 V
105 -102 V
105 -2 V
106 -23 V
105 -34 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 3888 671 a
 currentpoint grestore moveto
 3888 671 a 5409 4152 7 3533 v
400 4159 5017 7 v eop
%%Page: 25 25
25 24 bop -242 1701 a Fk(Ac)-8 b(kno)g(wledgemen)g(ts)-242
2189 y Fj(The)57 b(researc)-5 b(h)57 b(w)-5 b(as)58 b(funded)d(b)-5
b(y)57 b(EPSR)-5 b(C)58 b(\(researc)-5 b(h)56 b(gran)-5
b(t)58 b(QUAINT,)g(GR/M80826\).)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF